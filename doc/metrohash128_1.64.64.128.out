ok 1 - Found Hash # metrohash128_1
###################################################################
### Testing metrohash128_1 - no seed_state
### - MetroHash128_1 for 64-bit -
### seedbits: 64 statebits: 64 hashbits: 128
###################################################################
ok 2 - Verification code # metrohash128_1
# metrohash128_1       - Verification value 0x9BBD5CE7 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # metrohash128_1
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # metrohash128_1
ok 5 - Sanity Test # metrohash128_1
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  5.090 bytes/cycle - 14561.67 MiB/sec @ 3 ghz
# Alignment  6 -  5.089 bytes/cycle - 14561.10 MiB/sec @ 3 ghz
# Alignment  5 -  5.089 bytes/cycle - 14560.29 MiB/sec @ 3 ghz
# Alignment  4 -  5.090 bytes/cycle - 14561.41 MiB/sec @ 3 ghz
# Alignment  3 -  5.089 bytes/cycle - 14560.53 MiB/sec @ 3 ghz
# Alignment  2 -  5.089 bytes/cycle - 14561.13 MiB/sec @ 3 ghz
# Alignment  1 -  5.089 bytes/cycle - 14560.84 MiB/sec @ 3 ghz
# Alignment  0 -  5.276 bytes/cycle - 15094.97 MiB/sec @ 3 ghz
# Average      -  5.113 bytes/cycle - 14627.74 MiB/sec @ 3 ghz
## KeySpeed tests
# metrohash128_1            0 byte keys       20.000 c/h
# metrohash128_1            1 byte keys       24.000 c/h       24.000 c/b        0.042 b/c
# metrohash128_1            2 byte keys       27.591 c/h       13.796 c/b        0.072 b/c
# metrohash128_1            3 byte keys       29.000 c/h        9.667 c/b        0.103 b/c
# metrohash128_1            4 byte keys       24.266 c/h        6.066 c/b        0.165 b/c
# metrohash128_1            5 byte keys       36.000 c/h        7.200 c/b        0.139 b/c
# metrohash128_1            6 byte keys       31.993 c/h        5.332 c/b        0.188 b/c
# metrohash128_1            7 byte keys       36.590 c/h        5.227 c/b        0.191 b/c
# metrohash128_1            8 byte keys       26.482 c/h        3.310 c/b        0.302 b/c
# metrohash128_1            9 byte keys       29.000 c/h        3.222 c/b        0.310 b/c
# metrohash128_1           10 byte keys       39.391 c/h        3.939 c/b        0.254 b/c
# metrohash128_1           11 byte keys       41.000 c/h        3.727 c/b        0.268 b/c
# metrohash128_1           12 byte keys       29.000 c/h        2.417 c/b        0.414 b/c
# metrohash128_1           13 byte keys       43.479 c/h        3.345 c/b        0.299 b/c
# metrohash128_1           14 byte keys       39.000 c/h        2.786 c/b        0.359 b/c
# metrohash128_1           15 byte keys       41.995 c/h        2.800 c/b        0.357 b/c
# metrohash128_1           16 byte keys       30.000 c/h        1.875 c/b        0.533 b/c
# metrohash128_1           17 byte keys       41.000 c/h        2.412 c/b        0.415 b/c
# metrohash128_1           18 byte keys       40.000 c/h        2.222 c/b        0.450 b/c
# metrohash128_1           19 byte keys       42.613 c/h        2.243 c/b        0.446 b/c
# metrohash128_1           20 byte keys       41.367 c/h        2.068 c/b        0.483 b/c
# metrohash128_1           21 byte keys       53.000 c/h        2.524 c/b        0.396 b/c
# metrohash128_1           22 byte keys       50.029 c/h        2.274 c/b        0.440 b/c
# metrohash128_1           23 byte keys       54.000 c/h        2.348 c/b        0.426 b/c
# metrohash128_1           24 byte keys       40.000 c/h        1.667 c/b        0.600 b/c
# metrohash128_1           25 byte keys       42.000 c/h        1.680 c/b        0.595 b/c
# metrohash128_1           26 byte keys       51.540 c/h        1.982 c/b        0.504 b/c
# metrohash128_1           27 byte keys       54.000 c/h        2.000 c/b        0.500 b/c
# metrohash128_1           28 byte keys       42.413 c/h        1.515 c/b        0.660 b/c
# metrohash128_1           29 byte keys       54.000 c/h        1.862 c/b        0.537 b/c
# metrohash128_1           30 byte keys       58.835 c/h        1.961 c/b        0.510 b/c
# metrohash128_1           31 byte keys       55.000 c/h        1.774 c/b        0.564 b/c
#                          Average < 32       39.643 c/h        2.558 c/b        0.391 b/c
# metrohash128_1           32 byte keys       44.424 c/h        1.388 c/b        0.720 b/c
# metrohash128_1           36 byte keys       56.249 c/h        1.562 c/b        0.640 b/c
# metrohash128_1           40 byte keys       54.956 c/h        1.374 c/b        0.728 b/c
# metrohash128_1           44 byte keys       57.980 c/h        1.318 c/b        0.759 b/c
# metrohash128_1           48 byte keys       58.927 c/h        1.228 c/b        0.815 b/c
# metrohash128_1           52 byte keys       69.799 c/h        1.342 c/b        0.745 b/c
# metrohash128_1           56 byte keys       68.000 c/h        1.214 c/b        0.824 b/c
# metrohash128_1           60 byte keys       71.000 c/h        1.183 c/b        0.845 b/c
# metrohash128_1           64 byte keys       49.000 c/h        0.766 c/b        1.306 b/c
# metrohash128_1           68 byte keys       59.000 c/h        0.868 c/b        1.153 b/c
# metrohash128_1           72 byte keys       60.333 c/h        0.838 c/b        1.193 b/c
# metrohash128_1           76 byte keys       61.998 c/h        0.816 c/b        1.226 b/c
# metrohash128_1           80 byte keys       62.877 c/h        0.786 c/b        1.272 b/c
# metrohash128_1           84 byte keys       73.771 c/h        0.878 c/b        1.139 b/c
# metrohash128_1           88 byte keys       72.000 c/h        0.818 c/b        1.222 b/c
# metrohash128_1           92 byte keys       75.457 c/h        0.820 c/b        1.219 b/c
# metrohash128_1           96 byte keys       54.147 c/h        0.564 c/b        1.773 b/c
# metrohash128_1          100 byte keys       63.000 c/h        0.630 c/b        1.587 b/c
# metrohash128_1          104 byte keys       62.997 c/h        0.606 c/b        1.651 b/c
# metrohash128_1          108 byte keys       67.630 c/h        0.626 c/b        1.597 b/c
# metrohash128_1          112 byte keys       68.489 c/h        0.612 c/b        1.635 b/c
# metrohash128_1          116 byte keys       79.650 c/h        0.687 c/b        1.456 b/c
# metrohash128_1          120 byte keys       76.821 c/h        0.640 c/b        1.562 b/c
# metrohash128_1          124 byte keys       80.786 c/h        0.652 c/b        1.535 b/c
#                         Average < 128       50.319 c/h        1.190 c/b        0.840 b/c
# metrohash128_1          128 byte keys       60.322 c/h        0.471 c/b        2.122 b/c
# metrohash128_1          256 byte keys       85.747 c/h        0.335 c/b        2.986 b/c
# metrohash128_1          512 byte keys      132.329 c/h        0.258 c/b        3.869 b/c
# metrohash128_1         1024 byte keys      246.357 c/h        0.241 c/b        4.157 b/c
# metrohash128_1         2048 byte keys      431.318 c/h        0.211 c/b        4.748 b/c
# metrohash128_1         4096 byte keys      811.208 c/h        0.198 c/b        5.049 b/c
# metrohash128_1         8192 byte keys     1571.055 c/h        0.192 c/b        5.214 b/c
# metrohash128_1        16384 byte keys     3075.338 c/h        0.188 c/b        5.328 b/c
# metrohash128_1        32768 byte keys     6202.014 c/h        0.189 c/b        5.283 b/c
# metrohash128_1        65536 byte keys    12306.380 c/h        0.188 c/b        5.325 b/c
#                       Overall Average      420.302 c/h        0.208 c/b        4.806 b/c
ok 6 - Speed (always passes) # metrohash128_1
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 128 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # metrohash128_1
ok 8 - Nothing skipped during differential collision check # metrohash128_1
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 128 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # metrohash128_1
ok 11 - Nothing skipped during differential collision check # metrohash128_1
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 128 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # metrohash128_1
ok 14 - Nothing skipped during differential collision check # metrohash128_1
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # metrohash128_1
### Avalanche Tests ### - seed-bits: 64 hash-bits: 128
# Samples 250000, expected error 0.00102400, confidence level 99.99994267%
# Testing   0-bit keys.......... not ok! # worst-bit:   0.854% error-ratio: 1.029371e+00
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |pct diff from 50%: abs((0.5-(changed/reps))*2) *100|
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |....................................................1...........|
# seed     0.1 |..............1.................................................|
# seed     1.0 |................................................................|
# seed     1.1 |..........................................................1.....|
# seed     2.0 |.1......1................1......................................|
# seed     2.1 |..........................1.....................................|
# seed     3.0 |......................1..........1..............................|
# seed     3.1 |................................................................|
# seed     4.0 |.................................1.........1....................|
# seed     4.1 |..............................................................1.|
# seed     5.0 |.....................................................1..........|
# seed     5.1 |................................................................| x 3
# seed     6.0 |................................................................| x 7
# seed     8.1 |................................1...............................|
# seed     9.1 |......................................1..............1..........|
# seed    10.1 |................................................................|
# seed    11.1 |....................1.....1.....................................|
# seed    12.1 |.........................11.....................................|
# seed    13.0 |.....................................................1..........|
# seed    13.1 |..........................1........................1............|
# seed    14.0 |.........1....................1.................................|
# seed    14.1 |................................................................|
# seed    15.0 |................1...............................................|
# seed    15.1 |.....................................................1..........|
# seed    16.0 |......1..............................................1..........|
# seed    16.1 |.1........................1........1............................|
# seed    17.0 |...................................1............................|
# seed    17.1 |................................................................|
# seed    18.0 |................................................................| x 3
# seed    18.1 |..........................1.....................................|
# seed    19.1 |................................................................| x 2
# seed    21.0 |.....................................................1..........|
# seed    21.1 |....................1...........................................|
# seed    22.0 |.................................1..............................|
# seed    22.1 |................................................................| x 2
# seed    23.0 |.....................................................1..........|
# seed    24.0 |...................................1............................|
# seed    24.1 |..........................1.....................................| x 2
# seed    25.0 |.................................1...........................1..|
# seed    26.0 |.................................1..............................|
# seed    26.1 |............................1...................................|
# seed    27.0 |................................................................|
# seed    27.1 |................................................................|
# seed    28.0 |....1.........................1......................1..........|
# seed    28.1 |.......................................................1........|
# seed    29.0 |................................................................|
# seed    29.1 |................................................................|
# seed    30.0 |...........................................1....................|
# seed    30.1 |......1.........................................................|
# seed    31.0 |............1...................................................|
# seed    31.1 |................................................................|
# seed    32.0 |................................................................| x 2
# seed    32.1 |.1................................1.............................|
# seed    33.1 |................................................................| x 2
# seed    34.0 |.....1..........................................................|
# seed    35.0 |.1.........................................1....................|
# seed    35.1 |..1.............................................................|
# seed    36.0 |................................................................| x 2
# seed    36.1 |...............................................................1|
# seed    37.1 |......1.........................................................|
# seed    38.0 |.................................1..............................|
# seed    38.1 |...........1....................................................|
# seed    39.0 |................................................................| x 3
# seed    39.1 |..............1......................1.....1.........1..........|
# seed    40.1 |................................................................| x 2
# seed    42.0 |.............................................1..........1.......|
# seed    42.1 |....................................................1...........|
# seed    43.0 |................................................................|
# seed    43.1 |...............................1................................|
# seed    44.0 |.....................................................1..........|
# seed    44.1 |..............1.................................................|
# seed    45.0 |.............11......................................1..........|
# seed    45.1 |................................................................|
# seed    46.0 |..............................1......................1..........|
# seed    46.1 |.................1..............................................|
# seed    47.0 |............................................1...................|
# seed    47.1 |................................................................|
# seed    48.0 |................................................................|
# seed    48.1 |..........................1.....................................|
# seed    49.0 |.................................1..............................|
# seed    49.1 |..................1.............................................|
# seed    50.0 |.............................................1..................|
# seed    50.1 |................................................................|
# seed    51.0 |................................................................| x 2
# seed    51.1 |.........................11.....................................|
# seed    52.1 |......................................1.........................|
# seed    53.0 |.................................1..............................|
# seed    53.1 |..........................1...........1.........................|
# seed    54.0 |.................................1...................1..........|
# seed    54.1 |................................................................| x 4
# seed    55.0 |.................................1..............................|
# seed    56.0 |..............1..................1..............................|
# seed    57.0 |.................................1...................1..........|
# seed    58.0 |.................................1..............................| x 3
# seed    58.1 |...................................................1............|
# seed    59.1 |..........1..........................................1..........|
# seed    60.1 |................................................................| x 2
# seed    61.0 |.................................1...................1..........| x 2
# seed    62.1 |..........................1.....................................| x 2
# seed    63.0 |.................................1..............................|
#              +-------------------------------------------------------------------+
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |scaled p-value above confidence level (zero is ok) |
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |................................................................| x 64
# seed     0.1 |................................................................| x 64
#              +-------------------------------------------------------------------+
# 0 of 8192 bits failed (0.00%) failed at 99.999943 confidence
#     g-test: 0.000000%
#     sum-error-square: 0.00105408
#     hash bit-level errors: 1/128
#     - hash bit 28 gtest-prob not-random: 99.9999 (7989973/8010027)
not ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.719% error-ratio: 9.766595e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.774% error-ratio: 1.005847e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.850% error-ratio: 1.019336e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.795% error-ratio: 1.015509e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.786% error-ratio: 1.008849e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.760% error-ratio: 9.888535e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.859% error-ratio: 1.008106e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.957% error-ratio: 1.007677e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.813% error-ratio: 9.962907e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.762% error-ratio: 1.012375e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.966% error-ratio: 1.002045e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.841% error-ratio: 1.010077e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.756% error-ratio: 9.857923e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.790% error-ratio: 1.007558e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.855% error-ratio: 9.966759e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.813% error-ratio: 1.004996e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.788% error-ratio: 9.847145e-01
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.799% error-ratio: 9.951516e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.913% error-ratio: 1.007034e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.902% error-ratio: 1.004162e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.884% error-ratio: 1.005674e+00
ok 38 - Strict Avalanche Criteria - 256 bit keys
not ok 39 - Strict Avalanche Criteria # metrohash128_1
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 40 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
ok 41 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 50 - Keyset 'Cyclic' # metrohash128_1
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 51 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 52 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Keyset 'TwoBytes' # metrohash128_1
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 62 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 63 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Keyset 'Sparse' # metrohash128_1
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 79 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # metrohash128_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # metrohash128_1
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Combination Lowbits'
ok 90 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 91 - Keyset 'Combination Lowbits' # metrohash128_1
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Combination Highbits'
ok 93 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 94 - Keyset 'Combination Highbits' # metrohash128_1
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Combination Highbits2'
ok 96 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 97 - Keyset 'Combination Highbits2' # metrohash128_1
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Combination 0x80000000'
ok 99 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 100 - Keyset 'Combination 0x80000000' # metrohash128_1
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Combination 0x00000001'
ok 102 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 103 - Keyset 'Combination 0x00000001' # metrohash128_1
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 105 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 106 - Keyset 'Combination Hi-Lo' # metrohash128_1
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 108 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Keyset 'Text' # metrohash128_1
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 115 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 116 - Keyset 'Zeroes' # metrohash128_1
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 118 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Keyset 'Seed' # metrohash128_1
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 127 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 128 - Keyset 'Effs' # metrohash128_1
not ok 129 - all tests passed # metrohash128_1
1..129
# Tests Failed. metrohash128_1 failed 3 of 129 tests.
# Testing took 2701.059267 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
