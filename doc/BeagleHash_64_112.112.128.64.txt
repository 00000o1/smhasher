ok 1 - Found Hash # BeagleHash_64_112
###################################################################
### Testing BeagleHash_64_112 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 112 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_112
# BeagleHash_64_112    - Verification value 0xEB45C983 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_64_112
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_112
ok 5 - Sanity Test # BeagleHash_64_112
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.888 bytes/cycle - 5401.89 MiB/sec @ 3 ghz
# Alignment  6 -  1.886 bytes/cycle - 5396.69 MiB/sec @ 3 ghz
# Alignment  5 -  1.901 bytes/cycle - 5439.50 MiB/sec @ 3 ghz
# Alignment  4 -  1.901 bytes/cycle - 5439.24 MiB/sec @ 3 ghz
# Alignment  3 -  1.901 bytes/cycle - 5439.18 MiB/sec @ 3 ghz
# Alignment  2 -  1.901 bytes/cycle - 5439.69 MiB/sec @ 3 ghz
# Alignment  1 -  1.889 bytes/cycle - 5405.11 MiB/sec @ 3 ghz
# Alignment  0 -  1.921 bytes/cycle - 5494.69 MiB/sec @ 3 ghz
# Average      -  1.899 bytes/cycle - 5432.00 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_112         0 byte keys       19.224 c/h
# BeagleHash_64_112         1 byte keys       32.000 c/h       32.000 c/b        0.031 b/c
# BeagleHash_64_112         2 byte keys       35.000 c/h       17.500 c/b        0.057 b/c
# BeagleHash_64_112         3 byte keys       36.000 c/h       12.000 c/b        0.083 b/c
# BeagleHash_64_112         4 byte keys       37.000 c/h        9.250 c/b        0.108 b/c
# BeagleHash_64_112         5 byte keys       38.000 c/h        7.600 c/b        0.132 b/c
# BeagleHash_64_112         6 byte keys       40.401 c/h        6.733 c/b        0.149 b/c
# BeagleHash_64_112         7 byte keys       40.952 c/h        5.850 c/b        0.171 b/c
# BeagleHash_64_112         8 byte keys       37.764 c/h        4.720 c/b        0.212 b/c
# BeagleHash_64_112         9 byte keys       37.863 c/h        4.207 c/b        0.238 b/c
# BeagleHash_64_112        10 byte keys       38.545 c/h        3.854 c/b        0.259 b/c
# BeagleHash_64_112        11 byte keys       37.856 c/h        3.441 c/b        0.291 b/c
# BeagleHash_64_112        12 byte keys       38.423 c/h        3.202 c/b        0.312 b/c
# BeagleHash_64_112        13 byte keys       37.941 c/h        2.919 c/b        0.343 b/c
# BeagleHash_64_112        14 byte keys       38.498 c/h        2.750 c/b        0.364 b/c
# BeagleHash_64_112        15 byte keys       37.975 c/h        2.532 c/b        0.395 b/c
# BeagleHash_64_112        16 byte keys       40.428 c/h        2.527 c/b        0.396 b/c
# BeagleHash_64_112        17 byte keys       40.340 c/h        2.373 c/b        0.421 b/c
# BeagleHash_64_112        18 byte keys       39.000 c/h        2.167 c/b        0.462 b/c
# BeagleHash_64_112        19 byte keys       39.000 c/h        2.053 c/b        0.487 b/c
# BeagleHash_64_112        20 byte keys       40.067 c/h        2.003 c/b        0.499 b/c
# BeagleHash_64_112        21 byte keys       39.561 c/h        1.884 c/b        0.531 b/c
# BeagleHash_64_112        22 byte keys       40.232 c/h        1.829 c/b        0.547 b/c
# BeagleHash_64_112        23 byte keys       39.832 c/h        1.732 c/b        0.577 b/c
# BeagleHash_64_112        24 byte keys       45.853 c/h        1.911 c/b        0.523 b/c
# BeagleHash_64_112        25 byte keys       46.151 c/h        1.846 c/b        0.542 b/c
# BeagleHash_64_112        26 byte keys       45.956 c/h        1.768 c/b        0.566 b/c
# BeagleHash_64_112        27 byte keys       45.998 c/h        1.704 c/b        0.587 b/c
# BeagleHash_64_112        28 byte keys       46.395 c/h        1.657 c/b        0.604 b/c
# BeagleHash_64_112        29 byte keys       46.376 c/h        1.599 c/b        0.625 b/c
# BeagleHash_64_112        30 byte keys       45.975 c/h        1.532 c/b        0.653 b/c
# BeagleHash_64_112        31 byte keys       46.102 c/h        1.487 c/b        0.672 b/c
#                          Average < 32       39.710 c/h        2.562 c/b        0.390 b/c
# BeagleHash_64_112        32 byte keys       48.460 c/h        1.514 c/b        0.660 b/c
# BeagleHash_64_112        36 byte keys       48.000 c/h        1.333 c/b        0.750 b/c
# BeagleHash_64_112        40 byte keys       55.108 c/h        1.378 c/b        0.726 b/c
# BeagleHash_64_112        44 byte keys       54.286 c/h        1.234 c/b        0.811 b/c
# BeagleHash_64_112        48 byte keys       56.337 c/h        1.174 c/b        0.852 b/c
# BeagleHash_64_112        52 byte keys       56.239 c/h        1.082 c/b        0.925 b/c
# BeagleHash_64_112        56 byte keys       61.873 c/h        1.105 c/b        0.905 b/c
# BeagleHash_64_112        60 byte keys       61.997 c/h        1.033 c/b        0.968 b/c
# BeagleHash_64_112        64 byte keys       64.008 c/h        1.000 c/b        1.000 b/c
# BeagleHash_64_112        68 byte keys       63.672 c/h        0.936 c/b        1.068 b/c
# BeagleHash_64_112        72 byte keys       70.164 c/h        0.974 c/b        1.026 b/c
# BeagleHash_64_112        76 byte keys       69.974 c/h        0.921 c/b        1.086 b/c
# BeagleHash_64_112        80 byte keys       71.528 c/h        0.894 c/b        1.118 b/c
# BeagleHash_64_112        84 byte keys       71.926 c/h        0.856 c/b        1.168 b/c
# BeagleHash_64_112        88 byte keys       79.156 c/h        0.899 c/b        1.112 b/c
# BeagleHash_64_112        92 byte keys       78.736 c/h        0.856 c/b        1.168 b/c
# BeagleHash_64_112        96 byte keys       80.450 c/h        0.838 c/b        1.193 b/c
# BeagleHash_64_112       100 byte keys       80.892 c/h        0.809 c/b        1.236 b/c
# BeagleHash_64_112       104 byte keys       87.262 c/h        0.839 c/b        1.192 b/c
# BeagleHash_64_112       108 byte keys       87.915 c/h        0.814 c/b        1.228 b/c
# BeagleHash_64_112       112 byte keys       90.007 c/h        0.804 c/b        1.244 b/c
# BeagleHash_64_112       116 byte keys       90.142 c/h        0.777 c/b        1.287 b/c
# BeagleHash_64_112       120 byte keys       95.757 c/h        0.798 c/b        1.253 b/c
# BeagleHash_64_112       124 byte keys       95.833 c/h        0.773 c/b        1.294 b/c
#                         Average < 128       53.401 c/h        1.263 c/b        0.792 b/c
# BeagleHash_64_112       128 byte keys       99.371 c/h        0.776 c/b        1.288 b/c
# BeagleHash_64_112       256 byte keys      148.975 c/h        0.582 c/b        1.718 b/c
# BeagleHash_64_112       512 byte keys      298.423 c/h        0.583 c/b        1.716 b/c
# BeagleHash_64_112      1024 byte keys      569.187 c/h        0.556 c/b        1.799 b/c
# BeagleHash_64_112      2048 byte keys     1111.685 c/h        0.543 c/b        1.842 b/c
# BeagleHash_64_112      4096 byte keys     2173.852 c/h        0.531 c/b        1.884 b/c
# BeagleHash_64_112      8192 byte keys     4295.062 c/h        0.524 c/b        1.907 b/c
# BeagleHash_64_112     16384 byte keys     8785.240 c/h        0.536 c/b        1.865 b/c
# BeagleHash_64_112     32768 byte keys    17662.124 c/h        0.539 c/b        1.855 b/c
# BeagleHash_64_112     65536 byte keys    35226.601 c/h        0.538 c/b        1.860 b/c
#                       Overall Average     1111.530 c/h        0.550 c/b        1.817 b/c
ok 6 - Speed (always passes) # BeagleHash_64_112
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_112
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_112
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_112
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_112
### Avalanche Tests ### - seed-bits: 112 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.530% error-ratio: 1.000438e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.516% error-ratio: 1.008656e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.621% error-ratio: 9.956312e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.542% error-ratio: 9.835616e-01
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.012964e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.575% error-ratio: 1.004407e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.019736e+00
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.556% error-ratio: 9.970756e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.579% error-ratio: 9.781086e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.599% error-ratio: 9.890409e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.538% error-ratio: 9.886706e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.661% error-ratio: 9.830888e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.563% error-ratio: 1.000833e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.611% error-ratio: 9.949060e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.560% error-ratio: 9.909928e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.591% error-ratio: 9.828609e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.524% error-ratio: 1.007855e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.531% error-ratio: 1.007035e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.647% error-ratio: 1.012456e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.529% error-ratio: 9.953219e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.560% error-ratio: 1.003804e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.628% error-ratio: 9.988278e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.554% error-ratio: 9.998222e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.599% error-ratio: 9.947269e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_64_112
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_64_112
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_64_112
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_64_112
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_64_112
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 131 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'Combination Lowbits'
ok 142 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 143 - Keyset 'Combination Lowbits' # BeagleHash_64_112
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 144 - Collision Rate for Keyset 'Combination Highbits'
ok 145 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 146 - Keyset 'Combination Highbits' # BeagleHash_64_112
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 147 - Collision Rate for Keyset 'Combination Highbits2'
ok 148 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 149 - Keyset 'Combination Highbits2' # BeagleHash_64_112
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 150 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 151 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 152 - Keyset 'Combination HiBit-Null' # BeagleHash_64_112
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 153 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 154 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 155 - Keyset 'Combination LowBit-Null' # BeagleHash_64_112
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 156 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 157 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 158 - Keyset 'Combination Hi-Lo' # BeagleHash_64_112
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 159 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 160 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 161 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 162 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 163 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 164 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Keyset 'Text' # BeagleHash_64_112
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 166 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 167 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 168 - Keyset 'Zeroes' # BeagleHash_64_112
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 169 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 170 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 171 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 172 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 173 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 174 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 175 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 176 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Keyset 'Seed' # BeagleHash_64_112
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 178 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 179 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 180 - Keyset 'Effs' # BeagleHash_64_112
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 181 - Collision Rate for Keyset 'Words'
ok 182 - Distribution Bias Check for Keyset 'Words'
ok 183 - all tests passed # BeagleHash_64_112
1..183
# All Tests Passed. BeagleHash_64_112 passed all 183 tests run.
# Testing took 2226.756233 seconds
# This is SMHasher version v1.1-demerphq-39-g8a22d76 - built on Mar 17 2017.
