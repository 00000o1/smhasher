ok 1 - SelfTest - Verify 89 Hashes
ok 2 - Found Hash # metrohash64_2
###################################################################
### Testing metrohash64_2 - no seed_state
### - MetroHash64_2 for 64-bit -
### seedbits: 64 statebits: 64 hashbits: 64
###################################################################
### Sanity Tests ###
ok 3 - Verification code # metrohash64_2
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # metrohash64_2
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # metrohash64_2
ok 6 - Sanity Test # metrohash64_2
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  5.167 bytes/cycle - 14783.78 MiB/sec @ 3 ghz
# Alignment  6 -  5.167 bytes/cycle - 14783.27 MiB/sec @ 3 ghz
# Alignment  5 -  5.166 bytes/cycle - 14780.83 MiB/sec @ 3 ghz
# Alignment  4 -  5.168 bytes/cycle - 14785.07 MiB/sec @ 3 ghz
# Alignment  3 -  5.167 bytes/cycle - 14783.97 MiB/sec @ 3 ghz
# Alignment  2 -  5.166 bytes/cycle - 14780.94 MiB/sec @ 3 ghz
# Alignment  1 -  5.162 bytes/cycle - 14769.71 MiB/sec @ 3 ghz
# Alignment  0 -  5.409 bytes/cycle - 15476.30 MiB/sec @ 3 ghz
# Average      -  5.197 bytes/cycle - 14867.98 MiB/sec @ 3 ghz
## KeySpeed tests
# metrohash64_2             0 byte keys       13.000 c/h
# metrohash64_2             1 byte keys       15.998 c/h       15.998 c/b        0.063 b/c
# metrohash64_2             2 byte keys       15.951 c/h        7.975 c/b        0.125 b/c
# metrohash64_2             3 byte keys       20.930 c/h        6.977 c/b        0.143 b/c
# metrohash64_2             4 byte keys       15.867 c/h        3.967 c/b        0.252 b/c
# metrohash64_2             5 byte keys       20.887 c/h        4.177 c/b        0.239 b/c
# metrohash64_2             6 byte keys       20.982 c/h        3.497 c/b        0.286 b/c
# metrohash64_2             7 byte keys       25.636 c/h        3.662 c/b        0.273 b/c
# metrohash64_2             8 byte keys       15.739 c/h        1.967 c/b        0.508 b/c
# metrohash64_2             9 byte keys       20.925 c/h        2.325 c/b        0.430 b/c
# metrohash64_2            10 byte keys       20.585 c/h        2.059 c/b        0.486 b/c
# metrohash64_2            11 byte keys       26.147 c/h        2.377 c/b        0.421 b/c
# metrohash64_2            12 byte keys       20.638 c/h        1.720 c/b        0.581 b/c
# metrohash64_2            13 byte keys       25.999 c/h        2.000 c/b        0.500 b/c
# metrohash64_2            14 byte keys       26.231 c/h        1.874 c/b        0.534 b/c
# metrohash64_2            15 byte keys       31.083 c/h        2.072 c/b        0.483 b/c
# metrohash64_2            16 byte keys       22.000 c/h        1.375 c/b        0.727 b/c
# metrohash64_2            17 byte keys       27.298 c/h        1.606 c/b        0.623 b/c
# metrohash64_2            18 byte keys       27.000 c/h        1.500 c/b        0.667 b/c
# metrohash64_2            19 byte keys       32.000 c/h        1.684 c/b        0.594 b/c
# metrohash64_2            20 byte keys       27.000 c/h        1.350 c/b        0.741 b/c
# metrohash64_2            21 byte keys       32.000 c/h        1.524 c/b        0.656 b/c
# metrohash64_2            22 byte keys       32.195 c/h        1.463 c/b        0.683 b/c
# metrohash64_2            23 byte keys       37.000 c/h        1.609 c/b        0.622 b/c
# metrohash64_2            24 byte keys       27.000 c/h        1.125 c/b        0.889 b/c
# metrohash64_2            25 byte keys       32.000 c/h        1.280 c/b        0.781 b/c
# metrohash64_2            26 byte keys       32.191 c/h        1.238 c/b        0.808 b/c
# metrohash64_2            27 byte keys       37.000 c/h        1.370 c/b        0.730 b/c
# metrohash64_2            28 byte keys       32.000 c/h        1.143 c/b        0.875 b/c
# metrohash64_2            29 byte keys       37.546 c/h        1.295 c/b        0.772 b/c
# metrohash64_2            30 byte keys       37.499 c/h        1.250 c/b        0.800 b/c
# metrohash64_2            31 byte keys       42.000 c/h        1.355 c/b        0.738 b/c
#                          Average < 32       26.573 c/h        1.714 c/b        0.583 b/c
# metrohash64_2            32 byte keys       39.000 c/h        1.219 c/b        0.821 b/c
# metrohash64_2            36 byte keys       44.000 c/h        1.222 c/b        0.818 b/c
# metrohash64_2            40 byte keys       44.000 c/h        1.100 c/b        0.909 b/c
# metrohash64_2            44 byte keys       50.177 c/h        1.140 c/b        0.877 b/c
# metrohash64_2            48 byte keys       51.948 c/h        1.082 c/b        0.924 b/c
# metrohash64_2            52 byte keys       56.471 c/h        1.086 c/b        0.921 b/c
# metrohash64_2            56 byte keys       56.912 c/h        1.016 c/b        0.984 b/c
# metrohash64_2            60 byte keys       62.319 c/h        1.039 c/b        0.963 b/c
# metrohash64_2            64 byte keys       42.000 c/h        0.656 c/b        1.524 b/c
# metrohash64_2            68 byte keys       48.614 c/h        0.715 c/b        1.399 b/c
# metrohash64_2            72 byte keys       48.699 c/h        0.676 c/b        1.478 b/c
# metrohash64_2            76 byte keys       53.881 c/h        0.709 c/b        1.411 b/c
# metrohash64_2            80 byte keys       54.995 c/h        0.687 c/b        1.455 b/c
# metrohash64_2            84 byte keys       60.624 c/h        0.722 c/b        1.386 b/c
# metrohash64_2            88 byte keys       59.878 c/h        0.680 c/b        1.470 b/c
# metrohash64_2            92 byte keys       64.977 c/h        0.706 c/b        1.416 b/c
# metrohash64_2            96 byte keys       46.934 c/h        0.489 c/b        2.045 b/c
# metrohash64_2           100 byte keys       50.999 c/h        0.510 c/b        1.961 b/c
# metrohash64_2           104 byte keys       50.930 c/h        0.490 c/b        2.042 b/c
# metrohash64_2           108 byte keys       55.994 c/h        0.518 c/b        1.929 b/c
# metrohash64_2           112 byte keys       57.925 c/h        0.517 c/b        1.934 b/c
# metrohash64_2           116 byte keys       62.979 c/h        0.543 c/b        1.842 b/c
# metrohash64_2           120 byte keys       62.996 c/h        0.525 c/b        1.905 b/c
# metrohash64_2           124 byte keys       67.985 c/h        0.548 c/b        1.824 b/c
#                         Average < 128       38.314 c/h        0.906 c/b        1.104 b/c
# metrohash64_2           128 byte keys       49.983 c/h        0.390 c/b        2.561 b/c
# metrohash64_2           256 byte keys       69.078 c/h        0.270 c/b        3.706 b/c
# metrohash64_2           512 byte keys      117.479 c/h        0.229 c/b        4.358 b/c
# metrohash64_2          1024 byte keys      225.779 c/h        0.220 c/b        4.535 b/c
# metrohash64_2          2048 byte keys      408.537 c/h        0.199 c/b        5.013 b/c
# metrohash64_2          4096 byte keys      776.264 c/h        0.190 c/b        5.277 b/c
# metrohash64_2          8192 byte keys     1511.940 c/h        0.185 c/b        5.418 b/c
# metrohash64_2         16384 byte keys     3005.813 c/h        0.183 c/b        5.451 b/c
# metrohash64_2         32768 byte keys     5971.955 c/h        0.182 c/b        5.487 b/c
# metrohash64_2         65536 byte keys    12005.082 c/h        0.183 c/b        5.459 b/c
#                       Overall Average      398.295 c/h        0.197 c/b        5.071 b/c
ok 7 - Speed (always passes) # metrohash64_2
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 8 - Differential collisions # metrohash64_2
ok 9 - Nothing skipped during differential collision check # metrohash64_2
# 0 total collisions, of which 0 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 11 - Differential collisions # metrohash64_2
ok 12 - Nothing skipped during differential collision check # metrohash64_2
# 0 total collisions, of which 0 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 14 - Differential collisions # metrohash64_2
ok 15 - Nothing skipped during differential collision check # metrohash64_2
# 0 total collisions, of which 0 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # metrohash64_2
### Avalanche Tests ### - seed-bits: 64 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.516% error-ratio: 1.026071e+00
ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.566% error-ratio: 1.029272e+00
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.509% error-ratio: 9.723892e-01
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.493% error-ratio: 1.026164e+00
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.579% error-ratio: 1.014476e+00
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.565% error-ratio: 1.013758e+00
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.534% error-ratio: 9.893179e-01
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.501% error-ratio: 9.928073e-01
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.571% error-ratio: 9.990059e-01
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.535% error-ratio: 1.022731e+00
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.019030e+00
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.562% error-ratio: 9.938684e-01
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.580% error-ratio: 1.022725e+00
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.603% error-ratio: 1.015705e+00
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.526% error-ratio: 9.915229e-01
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.678% error-ratio: 9.841068e-01
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.621% error-ratio: 9.874552e-01
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.552% error-ratio: 9.984222e-01
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.605% error-ratio: 9.960121e-01
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.579% error-ratio: 9.886762e-01
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.572% error-ratio: 9.907022e-01
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.566% error-ratio: 9.855745e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # metrohash64_2
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # metrohash64_2
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # metrohash64_2
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # metrohash64_2
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # metrohash64_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # metrohash64_2
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # metrohash64_2
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # metrohash64_2
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # metrohash64_2
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # metrohash64_2
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # metrohash64_2
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # metrohash64_2
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # metrohash64_2
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # metrohash64_2
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # metrohash64_2
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # metrohash64_2
ok 130 - all tests passed # metrohash64_2
1..130
# All Tests Passed. metrohash64_2 passed all 130 tests run.
# Testing took 1679.836751 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
