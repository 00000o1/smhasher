ok 1 - Found Hash # BeagleHash_64_127
###################################################################
### Testing BeagleHash_64_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_127
# BeagleHash_64_127    - Verification value 0x77E1EF21 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_64_127
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_127
ok 5 - Sanity Test # BeagleHash_64_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.899 bytes/cycle - 5431.95 MiB/sec @ 3 ghz
# Alignment  6 -  1.899 bytes/cycle - 5432.12 MiB/sec @ 3 ghz
# Alignment  5 -  1.899 bytes/cycle - 5432.02 MiB/sec @ 3 ghz
# Alignment  4 -  1.884 bytes/cycle - 5391.07 MiB/sec @ 3 ghz
# Alignment  3 -  1.874 bytes/cycle - 5362.27 MiB/sec @ 3 ghz
# Alignment  2 -  1.830 bytes/cycle - 5236.85 MiB/sec @ 3 ghz
# Alignment  1 -  1.873 bytes/cycle - 5357.85 MiB/sec @ 3 ghz
# Alignment  0 -  1.902 bytes/cycle - 5440.34 MiB/sec @ 3 ghz
# Average      -  1.882 bytes/cycle - 5385.56 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_127         0 byte keys       16.620 c/h
# BeagleHash_64_127         1 byte keys       29.915 c/h       29.915 c/b        0.033 b/c
# BeagleHash_64_127         2 byte keys       33.000 c/h       16.500 c/b        0.061 b/c
# BeagleHash_64_127         3 byte keys       33.000 c/h       11.000 c/b        0.091 b/c
# BeagleHash_64_127         4 byte keys       34.974 c/h        8.744 c/b        0.114 b/c
# BeagleHash_64_127         5 byte keys       35.000 c/h        7.000 c/b        0.143 b/c
# BeagleHash_64_127         6 byte keys       36.228 c/h        6.038 c/b        0.166 b/c
# BeagleHash_64_127         7 byte keys       39.506 c/h        5.644 c/b        0.177 b/c
# BeagleHash_64_127         8 byte keys       35.474 c/h        4.434 c/b        0.226 b/c
# BeagleHash_64_127         9 byte keys       35.000 c/h        3.889 c/b        0.257 b/c
# BeagleHash_64_127        10 byte keys       35.000 c/h        3.500 c/b        0.286 b/c
# BeagleHash_64_127        11 byte keys       35.209 c/h        3.201 c/b        0.312 b/c
# BeagleHash_64_127        12 byte keys       35.000 c/h        2.917 c/b        0.343 b/c
# BeagleHash_64_127        13 byte keys       35.000 c/h        2.692 c/b        0.371 b/c
# BeagleHash_64_127        14 byte keys       35.198 c/h        2.514 c/b        0.398 b/c
# BeagleHash_64_127        15 byte keys       35.000 c/h        2.333 c/b        0.429 b/c
# BeagleHash_64_127        16 byte keys       38.177 c/h        2.386 c/b        0.419 b/c
# BeagleHash_64_127        17 byte keys       38.521 c/h        2.266 c/b        0.441 b/c
# BeagleHash_64_127        18 byte keys       39.210 c/h        2.178 c/b        0.459 b/c
# BeagleHash_64_127        19 byte keys       38.503 c/h        2.026 c/b        0.493 b/c
# BeagleHash_64_127        20 byte keys       39.225 c/h        1.961 c/b        0.510 b/c
# BeagleHash_64_127        21 byte keys       38.430 c/h        1.830 c/b        0.546 b/c
# BeagleHash_64_127        22 byte keys       38.845 c/h        1.766 c/b        0.566 b/c
# BeagleHash_64_127        23 byte keys       38.000 c/h        1.652 c/b        0.605 b/c
# BeagleHash_64_127        24 byte keys       47.981 c/h        1.999 c/b        0.500 b/c
# BeagleHash_64_127        25 byte keys       44.000 c/h        1.760 c/b        0.568 b/c
# BeagleHash_64_127        26 byte keys       44.000 c/h        1.692 c/b        0.591 b/c
# BeagleHash_64_127        27 byte keys       47.016 c/h        1.741 c/b        0.574 b/c
# BeagleHash_64_127        28 byte keys       44.000 c/h        1.571 c/b        0.636 b/c
# BeagleHash_64_127        29 byte keys       44.999 c/h        1.552 c/b        0.644 b/c
# BeagleHash_64_127        30 byte keys       46.426 c/h        1.548 c/b        0.646 b/c
# BeagleHash_64_127        31 byte keys       44.487 c/h        1.435 c/b        0.697 b/c
#                          Average < 32       37.842 c/h        2.441 c/b        0.410 b/c
# BeagleHash_64_127        32 byte keys       47.957 c/h        1.499 c/b        0.667 b/c
# BeagleHash_64_127        36 byte keys       48.319 c/h        1.342 c/b        0.745 b/c
# BeagleHash_64_127        40 byte keys       55.093 c/h        1.377 c/b        0.726 b/c
# BeagleHash_64_127        44 byte keys       55.079 c/h        1.252 c/b        0.799 b/c
# BeagleHash_64_127        48 byte keys       56.871 c/h        1.185 c/b        0.844 b/c
# BeagleHash_64_127        52 byte keys       56.255 c/h        1.082 c/b        0.924 b/c
# BeagleHash_64_127        56 byte keys       62.739 c/h        1.120 c/b        0.893 b/c
# BeagleHash_64_127        60 byte keys       62.052 c/h        1.034 c/b        0.967 b/c
# BeagleHash_64_127        64 byte keys       63.912 c/h        0.999 c/b        1.001 b/c
# BeagleHash_64_127        68 byte keys       63.590 c/h        0.935 c/b        1.069 b/c
# BeagleHash_64_127        72 byte keys       67.985 c/h        0.944 c/b        1.059 b/c
# BeagleHash_64_127        76 byte keys       67.995 c/h        0.895 c/b        1.118 b/c
# BeagleHash_64_127        80 byte keys       70.286 c/h        0.879 c/b        1.138 b/c
# BeagleHash_64_127        84 byte keys       73.342 c/h        0.873 c/b        1.145 b/c
# BeagleHash_64_127        88 byte keys       79.391 c/h        0.902 c/b        1.108 b/c
# BeagleHash_64_127        92 byte keys       76.642 c/h        0.833 c/b        1.200 b/c
# BeagleHash_64_127        96 byte keys       81.426 c/h        0.848 c/b        1.179 b/c
# BeagleHash_64_127       100 byte keys       79.974 c/h        0.800 c/b        1.250 b/c
# BeagleHash_64_127       104 byte keys       86.411 c/h        0.831 c/b        1.204 b/c
# BeagleHash_64_127       108 byte keys       87.012 c/h        0.806 c/b        1.241 b/c
# BeagleHash_64_127       112 byte keys       89.408 c/h        0.798 c/b        1.253 b/c
# BeagleHash_64_127       116 byte keys       88.118 c/h        0.760 c/b        1.316 b/c
# BeagleHash_64_127       120 byte keys       94.939 c/h        0.791 c/b        1.264 b/c
# BeagleHash_64_127       124 byte keys       93.928 c/h        0.757 c/b        1.320 b/c
#                         Average < 128       52.137 c/h        1.233 c/b        0.811 b/c
# BeagleHash_64_127       128 byte keys       96.914 c/h        0.757 c/b        1.321 b/c
# BeagleHash_64_127       256 byte keys      149.829 c/h        0.585 c/b        1.709 b/c
# BeagleHash_64_127       512 byte keys      301.257 c/h        0.588 c/b        1.700 b/c
# BeagleHash_64_127      1024 byte keys      568.602 c/h        0.555 c/b        1.801 b/c
# BeagleHash_64_127      2048 byte keys     1103.268 c/h        0.539 c/b        1.856 b/c
# BeagleHash_64_127      4096 byte keys     2171.198 c/h        0.530 c/b        1.887 b/c
# BeagleHash_64_127      8192 byte keys     4352.430 c/h        0.531 c/b        1.882 b/c
# BeagleHash_64_127     16384 byte keys     8584.402 c/h        0.524 c/b        1.909 b/c
# BeagleHash_64_127     32768 byte keys    17134.942 c/h        0.523 c/b        1.912 b/c
# BeagleHash_64_127     65536 byte keys    34245.923 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1085.279 c/h        0.537 c/b        1.861 b/c
ok 6 - Speed (always passes) # BeagleHash_64_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_127
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_127
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_127
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.024143e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.552% error-ratio: 1.008412e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.606% error-ratio: 9.949688e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 1.009002e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.554% error-ratio: 1.006090e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.622% error-ratio: 1.018912e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.573% error-ratio: 1.005173e+00
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.564% error-ratio: 9.871178e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.550% error-ratio: 9.895173e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.609% error-ratio: 9.924728e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.638% error-ratio: 9.613541e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.538% error-ratio: 1.012239e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.568% error-ratio: 9.991695e-01
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.572% error-ratio: 1.005667e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.555% error-ratio: 9.978036e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.536% error-ratio: 9.970817e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.572% error-ratio: 1.015064e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.573% error-ratio: 1.011760e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 9.993650e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.569% error-ratio: 1.010039e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.551% error-ratio: 9.807807e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.628% error-ratio: 1.005545e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.601% error-ratio: 9.914895e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # BeagleHash_64_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # BeagleHash_64_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # BeagleHash_64_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # BeagleHash_64_127
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # BeagleHash_64_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # BeagleHash_64_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # BeagleHash_64_127
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # BeagleHash_64_127
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # BeagleHash_64_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # BeagleHash_64_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # BeagleHash_64_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # BeagleHash_64_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # BeagleHash_64_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # BeagleHash_64_127
ok 130 - all tests passed # BeagleHash_64_127
1..130
# All Tests Passed. BeagleHash_64_127 passed all 130 tests run.
# Testing took 2115.288652 seconds
# This is SMHasher version v1.0-demerphq-15-geac5db9 - built on Mar 13 2017.
