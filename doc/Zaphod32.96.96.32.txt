ok 1 - Found Hash # Zaphod32
###################################################################
### Testing Zaphod32 - with seed_state
### - Evolved hash with  96-bit state (3x32) - Yves Orton -
### seedbits: 96 statebits: 96 hashbits: 32
###################################################################
ok 2 - Verification code # Zaphod32
# Zaphod32             - Verification value 0x47255D06 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # Zaphod32
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # Zaphod32
ok 5 - Sanity Test # Zaphod32
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.502 bytes/cycle - 4297.83 MiB/sec @ 3 ghz
# Alignment  6 -  1.501 bytes/cycle - 4294.07 MiB/sec @ 3 ghz
# Alignment  5 -  1.502 bytes/cycle - 4297.49 MiB/sec @ 3 ghz
# Alignment  4 -  1.501 bytes/cycle - 4295.69 MiB/sec @ 3 ghz
# Alignment  3 -  1.502 bytes/cycle - 4297.51 MiB/sec @ 3 ghz
# Alignment  2 -  1.502 bytes/cycle - 4295.92 MiB/sec @ 3 ghz
# Alignment  1 -  1.502 bytes/cycle - 4297.41 MiB/sec @ 3 ghz
# Alignment  0 -  1.502 bytes/cycle - 4295.88 MiB/sec @ 3 ghz
# Average      -  1.502 bytes/cycle - 4296.48 MiB/sec @ 3 ghz
## KeySpeed tests
# Zaphod32                  0 byte keys       11.000 c/h
# Zaphod32                  1 byte keys       16.000 c/h       16.000 c/b        0.062 b/c
# Zaphod32                  2 byte keys       18.540 c/h        9.270 c/b        0.108 b/c
# Zaphod32                  3 byte keys       19.284 c/h        6.428 c/b        0.156 b/c
# Zaphod32                  4 byte keys       20.993 c/h        5.248 c/b        0.191 b/c
# Zaphod32                  5 byte keys       20.266 c/h        4.053 c/b        0.247 b/c
# Zaphod32                  6 byte keys       20.000 c/h        3.333 c/b        0.300 b/c
# Zaphod32                  7 byte keys       20.997 c/h        3.000 c/b        0.333 b/c
# Zaphod32                  8 byte keys       21.998 c/h        2.750 c/b        0.364 b/c
# Zaphod32                  9 byte keys       21.668 c/h        2.408 c/b        0.415 b/c
# Zaphod32                 10 byte keys       21.000 c/h        2.100 c/b        0.476 b/c
# Zaphod32                 11 byte keys       21.624 c/h        1.966 c/b        0.509 b/c
# Zaphod32                 12 byte keys       21.999 c/h        1.833 c/b        0.545 b/c
# Zaphod32                 13 byte keys       27.587 c/h        2.122 c/b        0.471 b/c
# Zaphod32                 14 byte keys       27.000 c/h        1.929 c/b        0.519 b/c
# Zaphod32                 15 byte keys       28.000 c/h        1.867 c/b        0.536 b/c
# Zaphod32                 16 byte keys       32.000 c/h        2.000 c/b        0.500 b/c
# Zaphod32                 17 byte keys       32.874 c/h        1.934 c/b        0.517 b/c
# Zaphod32                 18 byte keys       32.872 c/h        1.826 c/b        0.548 b/c
# Zaphod32                 19 byte keys       33.230 c/h        1.749 c/b        0.572 b/c
# Zaphod32                 20 byte keys       33.000 c/h        1.650 c/b        0.606 b/c
# Zaphod32                 21 byte keys       33.000 c/h        1.571 c/b        0.636 b/c
# Zaphod32                 22 byte keys       33.000 c/h        1.500 c/b        0.667 b/c
# Zaphod32                 23 byte keys       33.936 c/h        1.475 c/b        0.678 b/c
# Zaphod32                 24 byte keys       37.838 c/h        1.577 c/b        0.634 b/c
# Zaphod32                 25 byte keys       38.000 c/h        1.520 c/b        0.658 b/c
# Zaphod32                 26 byte keys       38.000 c/h        1.462 c/b        0.684 b/c
# Zaphod32                 27 byte keys       39.000 c/h        1.444 c/b        0.692 b/c
# Zaphod32                 28 byte keys       38.960 c/h        1.391 c/b        0.719 b/c
# Zaphod32                 29 byte keys       38.918 c/h        1.342 c/b        0.745 b/c
# Zaphod32                 30 byte keys       38.866 c/h        1.296 c/b        0.772 b/c
# Zaphod32                 31 byte keys       39.000 c/h        1.258 c/b        0.795 b/c
#                          Average < 32       28.452 c/h        1.836 c/b        0.545 b/c
# Zaphod32                 32 byte keys       43.000 c/h        1.344 c/b        0.744 b/c
# Zaphod32                 36 byte keys       44.000 c/h        1.222 c/b        0.818 b/c
# Zaphod32                 40 byte keys       49.998 c/h        1.250 c/b        0.800 b/c
# Zaphod32                 44 byte keys       49.998 c/h        1.136 c/b        0.880 b/c
# Zaphod32                 48 byte keys       55.423 c/h        1.155 c/b        0.866 b/c
# Zaphod32                 52 byte keys       55.864 c/h        1.074 c/b        0.931 b/c
# Zaphod32                 56 byte keys       62.554 c/h        1.117 c/b        0.895 b/c
# Zaphod32                 60 byte keys       63.967 c/h        1.066 c/b        0.938 b/c
# Zaphod32                 64 byte keys       67.783 c/h        1.059 c/b        0.944 b/c
# Zaphod32                 68 byte keys       69.716 c/h        1.025 c/b        0.975 b/c
# Zaphod32                 72 byte keys       73.554 c/h        1.022 c/b        0.979 b/c
# Zaphod32                 76 byte keys       73.359 c/h        0.965 c/b        1.036 b/c
# Zaphod32                 80 byte keys       77.402 c/h        0.968 c/b        1.034 b/c
# Zaphod32                 84 byte keys       79.083 c/h        0.941 c/b        1.062 b/c
# Zaphod32                 88 byte keys       82.954 c/h        0.943 c/b        1.061 b/c
# Zaphod32                 92 byte keys       84.938 c/h        0.923 c/b        1.083 b/c
# Zaphod32                 96 byte keys       87.910 c/h        0.916 c/b        1.092 b/c
# Zaphod32                100 byte keys       90.894 c/h        0.909 c/b        1.100 b/c
# Zaphod32                104 byte keys       93.337 c/h        0.897 c/b        1.114 b/c
# Zaphod32                108 byte keys       96.697 c/h        0.895 c/b        1.117 b/c
# Zaphod32                112 byte keys       98.973 c/h        0.884 c/b        1.132 b/c
# Zaphod32                116 byte keys      102.412 c/h        0.883 c/b        1.133 b/c
# Zaphod32                120 byte keys      105.162 c/h        0.876 c/b        1.141 b/c
# Zaphod32                124 byte keys      108.202 c/h        0.873 c/b        1.146 b/c
#                         Average < 128       48.708 c/h        1.152 c/b        0.868 b/c
# Zaphod32                128 byte keys      110.476 c/h        0.863 c/b        1.159 b/c
# Zaphod32                256 byte keys      207.293 c/h        0.810 c/b        1.235 b/c
# Zaphod32                512 byte keys      380.738 c/h        0.744 c/b        1.345 b/c
# Zaphod32               1024 byte keys      719.970 c/h        0.703 c/b        1.422 b/c
# Zaphod32               2048 byte keys     1403.479 c/h        0.685 c/b        1.459 b/c
# Zaphod32               4096 byte keys     2768.359 c/h        0.676 c/b        1.480 b/c
# Zaphod32               8192 byte keys     5492.934 c/h        0.671 c/b        1.491 b/c
# Zaphod32              16384 byte keys    11003.334 c/h        0.672 c/b        1.489 b/c
# Zaphod32              32768 byte keys    21860.227 c/h        0.667 c/b        1.499 b/c
# Zaphod32              65536 byte keys    45396.485 c/h        0.693 c/b        1.444 b/c
#                       Overall Average     1395.014 c/h        0.691 c/b        1.448 b/c
ok 6 - Speed (always passes) # Zaphod32
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # Zaphod32
ok 8 - Nothing skipped during differential collision check # Zaphod32
# 5 total collisions, of which 5 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # Zaphod32
ok 11 - Nothing skipped during differential collision check # Zaphod32
# 1 total collisions, of which 1 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # Zaphod32
ok 14 - Nothing skipped during differential collision check # Zaphod32
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # Zaphod32
### Avalanche Tests ### - seed-bits: 96 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.396% error-ratio: 1.019291e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.681% error-ratio: 1.028384e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.758% error-ratio: 1.051079e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.670% error-ratio: 1.049890e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 9.880785e-01
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.440% error-ratio: 1.010229e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.386% error-ratio: 1.022388e+00
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.360% error-ratio: 9.803544e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.382% error-ratio: 1.000609e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.363% error-ratio: 1.020802e+00
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.368% error-ratio: 9.980886e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.345% error-ratio: 1.009976e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.408% error-ratio: 1.015205e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.407% error-ratio: 9.944307e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.371% error-ratio: 1.014571e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 9.687730e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.441% error-ratio: 1.000010e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.395% error-ratio: 1.000631e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.382% error-ratio: 1.013455e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.373% error-ratio: 9.920139e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.438% error-ratio: 9.872275e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.404% error-ratio: 9.812620e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.438% error-ratio: 1.012002e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.412% error-ratio: 1.009088e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
# Testing 520-bit keys.......... ok.     # worst-bit:   0.425% error-ratio: 1.013917e+00
ok 41 - Strict Avalanche Criteria - 520 bit keys
ok 42 - Strict Avalanche Criteria # Zaphod32
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11494 ( 0.99x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11700 ( 1.01x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11818 ( 1.02x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11680 ( 1.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11509 ( 0.99x) - passed
ok 51 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 53 - Keyset 'Cyclic' # Zaphod32
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       53 ( 1.07x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3460 ( 0.99x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40310 ( 1.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227286 ( 1.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866230 ( 0.99x) - passed
ok 62 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 64 - Keyset 'TwoBytes' # Zaphod32
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      158 ( 1.03x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2493 ( 1.01x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      410 ( 0.95x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2074 ( 1.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     8079 ( 1.01x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1392 ( 0.99x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      883 ( 0.97x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      484 ( 0.94x) - passed
ok 79 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 81 - Keyset 'Sparse' # Zaphod32
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected   128.00, actual      130 ( 1.02x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected   128.00, actual      133 ( 1.04x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected   128.00, actual      133 ( 1.04x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 91 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # Zaphod32
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      106 ( 0.83x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected   128.00, actual      112 ( 0.88x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected   128.00, actual      139 ( 1.09x) - passed
ok 101 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # Zaphod32
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected   128.00, actual      105 ( 0.82x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected   128.00, actual      103 ( 0.80x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected   128.00, actual      150 ( 1.17x) - passed
ok 111 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # Zaphod32
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected   128.00, actual      108 ( 0.84x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected   128.00, actual      142 ( 1.11x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected   128.00, actual      116 ( 0.91x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # Zaphod32
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      155 ( 1.21x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected   128.00, actual      150 ( 1.17x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected   128.00, actual      147 ( 1.15x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected   128.00, actual      131 ( 1.02x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 131 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # Zaphod32
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # Zaphod32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # Zaphod32
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42773 ( 1.00x) - passed
ok 142 - Collision Rate for Keyset 'Combination Lowbits'
ok 143 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 144 - Keyset 'Combination Lowbits' # Zaphod32
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42798 ( 1.00x) - passed
ok 145 - Collision Rate for Keyset 'Combination Highbits'
ok 146 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 147 - Keyset 'Combination Highbits' # Zaphod32
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42545 ( 0.99x) - passed
ok 148 - Collision Rate for Keyset 'Combination Highbits2'
ok 149 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 150 - Keyset 'Combination Highbits2' # Zaphod32
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      552 ( 1.08x) - passed
ok 151 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 152 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 153 - Keyset 'Combination HiBit-Null' # Zaphod32
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      499 ( 0.97x) - passed
ok 154 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 155 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 156 - Keyset 'Combination LowBit-Null' # Zaphod32
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17534 ( 1.01x) - passed
ok 157 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 158 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 159 - Keyset 'Combination Hi-Lo' # Zaphod32
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25395 ( 1.00x) - passed
ok 160 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 161 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25311 ( 1.00x) - passed
ok 162 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 163 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25327 ( 1.00x) - passed
ok 164 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 166 - Keyset 'Text' # Zaphod32
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 167 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 168 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 169 - Keyset 'Zeroes' # Zaphod32
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      471 ( 1.01x) - passed
ok 170 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 171 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      456 ( 0.98x) - passed
ok 172 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 173 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      468 ( 1.01x) - passed
ok 174 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 175 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      508 ( 1.09x) - passed
ok 176 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Keyset 'Seed' # Zaphod32
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual        9 ( 1.13x) - passed
ok 179 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 180 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 181 - Keyset 'Effs' # Zaphod32
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual       17 ( 1.65x) - passed
ok 182 - Collision Rate for Keyset 'Words'
ok 183 - Distribution Bias Check for Keyset 'Words'
ok 184 - all tests passed # Zaphod32
1..184
# All Tests Passed. Zaphod32 passed all 184 tests run.
# Testing took 1896.310033 seconds
# This is SMHasher version v1.2-demerphq-0-gd7c9ff3 - built on Mar 18 2017.
