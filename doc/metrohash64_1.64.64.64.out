ok 1 - SelfTest - Verify 89 Hashes
ok 2 - Found Hash # metrohash64_1
###################################################################
### Testing metrohash64_1 - no seed_state
### - MetroHash64_1 for 64-bit -
### seedbits: 64 statebits: 64 hashbits: 64
###################################################################
### Sanity Tests ###
ok 3 - Verification code # metrohash64_1
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # metrohash64_1
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # metrohash64_1
ok 6 - Sanity Test # metrohash64_1
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  5.165 bytes/cycle - 14776.67 MiB/sec @ 3 ghz
# Alignment  6 -  5.165 bytes/cycle - 14776.20 MiB/sec @ 3 ghz
# Alignment  5 -  5.165 bytes/cycle - 14776.10 MiB/sec @ 3 ghz
# Alignment  4 -  5.165 bytes/cycle - 14776.01 MiB/sec @ 3 ghz
# Alignment  3 -  5.165 bytes/cycle - 14776.87 MiB/sec @ 3 ghz
# Alignment  2 -  5.165 bytes/cycle - 14777.50 MiB/sec @ 3 ghz
# Alignment  1 -  5.165 bytes/cycle - 14778.24 MiB/sec @ 3 ghz
# Alignment  0 -  5.370 bytes/cycle - 15362.41 MiB/sec @ 3 ghz
# Average      -  5.190 bytes/cycle - 14850.00 MiB/sec @ 3 ghz
## KeySpeed tests
# metrohash64_1             0 byte keys       13.000 c/h
# metrohash64_1             1 byte keys       15.942 c/h       15.942 c/b        0.063 b/c
# metrohash64_1             2 byte keys       15.954 c/h        7.977 c/b        0.125 b/c
# metrohash64_1             3 byte keys       20.532 c/h        6.844 c/b        0.146 b/c
# metrohash64_1             4 byte keys       15.643 c/h        3.911 c/b        0.256 b/c
# metrohash64_1             5 byte keys       20.987 c/h        4.197 c/b        0.238 b/c
# metrohash64_1             6 byte keys       20.926 c/h        3.488 c/b        0.287 b/c
# metrohash64_1             7 byte keys       25.583 c/h        3.655 c/b        0.274 b/c
# metrohash64_1             8 byte keys       15.941 c/h        1.993 c/b        0.502 b/c
# metrohash64_1             9 byte keys       20.510 c/h        2.279 c/b        0.439 b/c
# metrohash64_1            10 byte keys       20.972 c/h        2.097 c/b        0.477 b/c
# metrohash64_1            11 byte keys       26.032 c/h        2.367 c/b        0.423 b/c
# metrohash64_1            12 byte keys       20.990 c/h        1.749 c/b        0.572 b/c
# metrohash64_1            13 byte keys       25.997 c/h        2.000 c/b        0.500 b/c
# metrohash64_1            14 byte keys       26.274 c/h        1.877 c/b        0.533 b/c
# metrohash64_1            15 byte keys       30.911 c/h        2.061 c/b        0.485 b/c
# metrohash64_1            16 byte keys       22.000 c/h        1.375 c/b        0.727 b/c
# metrohash64_1            17 byte keys       27.103 c/h        1.594 c/b        0.627 b/c
# metrohash64_1            18 byte keys       27.000 c/h        1.500 c/b        0.667 b/c
# metrohash64_1            19 byte keys       32.000 c/h        1.684 c/b        0.594 b/c
# metrohash64_1            20 byte keys       27.000 c/h        1.350 c/b        0.741 b/c
# metrohash64_1            21 byte keys       32.346 c/h        1.540 c/b        0.649 b/c
# metrohash64_1            22 byte keys       32.959 c/h        1.498 c/b        0.667 b/c
# metrohash64_1            23 byte keys       37.419 c/h        1.627 c/b        0.615 b/c
# metrohash64_1            24 byte keys       27.000 c/h        1.125 c/b        0.889 b/c
# metrohash64_1            25 byte keys       32.000 c/h        1.280 c/b        0.781 b/c
# metrohash64_1            26 byte keys       34.297 c/h        1.319 c/b        0.758 b/c
# metrohash64_1            27 byte keys       37.434 c/h        1.386 c/b        0.721 b/c
# metrohash64_1            28 byte keys       32.000 c/h        1.143 c/b        0.875 b/c
# metrohash64_1            29 byte keys       37.000 c/h        1.276 c/b        0.784 b/c
# metrohash64_1            30 byte keys       37.767 c/h        1.259 c/b        0.794 b/c
# metrohash64_1            31 byte keys       42.147 c/h        1.360 c/b        0.736 b/c
#                          Average < 32       26.677 c/h        1.721 c/b        0.581 b/c
# metrohash64_1            32 byte keys       39.000 c/h        1.219 c/b        0.821 b/c
# metrohash64_1            36 byte keys       44.000 c/h        1.222 c/b        0.818 b/c
# metrohash64_1            40 byte keys       45.469 c/h        1.137 c/b        0.880 b/c
# metrohash64_1            44 byte keys       49.395 c/h        1.123 c/b        0.891 b/c
# metrohash64_1            48 byte keys       51.255 c/h        1.068 c/b        0.937 b/c
# metrohash64_1            52 byte keys       56.000 c/h        1.077 c/b        0.929 b/c
# metrohash64_1            56 byte keys       56.000 c/h        1.000 c/b        1.000 b/c
# metrohash64_1            60 byte keys       63.145 c/h        1.052 c/b        0.950 b/c
# metrohash64_1            64 byte keys       42.713 c/h        0.667 c/b        1.498 b/c
# metrohash64_1            68 byte keys       49.265 c/h        0.724 c/b        1.380 b/c
# metrohash64_1            72 byte keys       49.410 c/h        0.686 c/b        1.457 b/c
# metrohash64_1            76 byte keys       56.128 c/h        0.739 c/b        1.354 b/c
# metrohash64_1            80 byte keys       55.837 c/h        0.698 c/b        1.433 b/c
# metrohash64_1            84 byte keys       61.046 c/h        0.727 c/b        1.376 b/c
# metrohash64_1            88 byte keys       60.807 c/h        0.691 c/b        1.447 b/c
# metrohash64_1            92 byte keys       65.419 c/h        0.711 c/b        1.406 b/c
# metrohash64_1            96 byte keys       48.259 c/h        0.503 c/b        1.989 b/c
# metrohash64_1           100 byte keys       52.518 c/h        0.525 c/b        1.904 b/c
# metrohash64_1           104 byte keys       52.702 c/h        0.507 c/b        1.973 b/c
# metrohash64_1           108 byte keys       59.497 c/h        0.551 c/b        1.815 b/c
# metrohash64_1           112 byte keys       58.904 c/h        0.526 c/b        1.901 b/c
# metrohash64_1           116 byte keys       63.383 c/h        0.546 c/b        1.830 b/c
# metrohash64_1           120 byte keys       63.264 c/h        0.527 c/b        1.897 b/c
# metrohash64_1           124 byte keys       68.169 c/h        0.550 c/b        1.819 b/c
#                         Average < 128       38.665 c/h        0.914 c/b        1.094 b/c
# metrohash64_1           128 byte keys       51.885 c/h        0.405 c/b        2.467 b/c
# metrohash64_1           256 byte keys       73.041 c/h        0.285 c/b        3.505 b/c
# metrohash64_1           512 byte keys      121.416 c/h        0.237 c/b        4.217 b/c
# metrohash64_1          1024 byte keys      231.220 c/h        0.226 c/b        4.429 b/c
# metrohash64_1          2048 byte keys      413.112 c/h        0.202 c/b        4.957 b/c
# metrohash64_1          4096 byte keys      780.720 c/h        0.191 c/b        5.246 b/c
# metrohash64_1          8192 byte keys     1526.237 c/h        0.186 c/b        5.367 b/c
# metrohash64_1         16384 byte keys     3018.218 c/h        0.184 c/b        5.428 b/c
# metrohash64_1         32768 byte keys     5973.917 c/h        0.182 c/b        5.485 b/c
# metrohash64_1         65536 byte keys    12006.139 c/h        0.183 c/b        5.459 b/c
#                       Overall Average      399.411 c/h        0.198 c/b        5.057 b/c
ok 7 - Speed (always passes) # metrohash64_1
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 8 - Differential collisions # metrohash64_1
ok 9 - Nothing skipped during differential collision check # metrohash64_1
# 0 total collisions, of which 0 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 11 - Differential collisions # metrohash64_1
ok 12 - Nothing skipped during differential collision check # metrohash64_1
# 0 total collisions, of which 0 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 14 - Differential collisions # metrohash64_1
ok 15 - Nothing skipped during differential collision check # metrohash64_1
# 0 total collisions, of which 0 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # metrohash64_1
### Avalanche Tests ### - seed-bits: 64 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.491% error-ratio: 9.979093e-01
ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.537% error-ratio: 1.006206e+00
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.490% error-ratio: 9.981913e-01
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.531% error-ratio: 1.009038e+00
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.517% error-ratio: 9.993636e-01
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.528% error-ratio: 1.001757e+00
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.481% error-ratio: 9.882609e-01
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.544% error-ratio: 1.002602e+00
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.000283e+00
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.530% error-ratio: 9.847092e-01
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.531% error-ratio: 1.015955e+00
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.651% error-ratio: 9.988708e-01
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.602% error-ratio: 9.894911e-01
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.548% error-ratio: 9.718580e-01
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.549% error-ratio: 9.967076e-01
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.568% error-ratio: 9.802361e-01
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.562% error-ratio: 1.010108e+00
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.570% error-ratio: 1.010207e+00
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.594% error-ratio: 9.907845e-01
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.630% error-ratio: 9.917877e-01
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.538% error-ratio: 1.002959e+00
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.545% error-ratio: 1.006321e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # metrohash64_1
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # metrohash64_1
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # metrohash64_1
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # metrohash64_1
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # metrohash64_1
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # metrohash64_1
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # metrohash64_1
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # metrohash64_1
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # metrohash64_1
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # metrohash64_1
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # metrohash64_1
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # metrohash64_1
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # metrohash64_1
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # metrohash64_1
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # metrohash64_1
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # metrohash64_1
ok 130 - all tests passed # metrohash64_1
1..130
# All Tests Passed. metrohash64_1 passed all 130 tests run.
# Testing took 1676.935284 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
