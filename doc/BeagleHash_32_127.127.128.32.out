ok 1 - Found Hash # BeagleHash_32_127
###################################################################
### Testing BeagleHash_32_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_127
# BeagleHash_32_127    - Verification value 0xA226EF3D : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_127
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_127
ok 5 - Sanity Test # BeagleHash_32_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.859 bytes/cycle - 5317.81 MiB/sec @ 3 ghz
# Alignment  6 -  1.860 bytes/cycle - 5320.49 MiB/sec @ 3 ghz
# Alignment  5 -  1.878 bytes/cycle - 5374.28 MiB/sec @ 3 ghz
# Alignment  4 -  1.881 bytes/cycle - 5380.18 MiB/sec @ 3 ghz
# Alignment  3 -  1.886 bytes/cycle - 5394.55 MiB/sec @ 3 ghz
# Alignment  2 -  1.866 bytes/cycle - 5338.59 MiB/sec @ 3 ghz
# Alignment  1 -  1.882 bytes/cycle - 5385.85 MiB/sec @ 3 ghz
# Alignment  0 -  1.879 bytes/cycle - 5376.60 MiB/sec @ 3 ghz
# Average      -  1.874 bytes/cycle - 5361.04 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_127         0 byte keys       17.000 c/h
# BeagleHash_32_127         1 byte keys       30.251 c/h       30.251 c/b        0.033 b/c
# BeagleHash_32_127         2 byte keys       34.362 c/h       17.181 c/b        0.058 b/c
# BeagleHash_32_127         3 byte keys       34.280 c/h       11.427 c/b        0.088 b/c
# BeagleHash_32_127         4 byte keys       35.000 c/h        8.750 c/b        0.114 b/c
# BeagleHash_32_127         5 byte keys       35.290 c/h        7.058 c/b        0.142 b/c
# BeagleHash_32_127         6 byte keys       35.297 c/h        5.883 c/b        0.170 b/c
# BeagleHash_32_127         7 byte keys       35.000 c/h        5.000 c/b        0.200 b/c
# BeagleHash_32_127         8 byte keys       45.403 c/h        5.675 c/b        0.176 b/c
# BeagleHash_32_127         9 byte keys       46.236 c/h        5.137 c/b        0.195 b/c
# BeagleHash_32_127        10 byte keys       45.000 c/h        4.500 c/b        0.222 b/c
# BeagleHash_32_127        11 byte keys       46.000 c/h        4.182 c/b        0.239 b/c
# BeagleHash_32_127        12 byte keys       45.714 c/h        3.810 c/b        0.263 b/c
# BeagleHash_32_127        13 byte keys       45.958 c/h        3.535 c/b        0.283 b/c
# BeagleHash_32_127        14 byte keys       45.000 c/h        3.214 c/b        0.311 b/c
# BeagleHash_32_127        15 byte keys       45.599 c/h        3.040 c/b        0.329 b/c
# BeagleHash_32_127        16 byte keys       48.683 c/h        3.043 c/b        0.329 b/c
# BeagleHash_32_127        17 byte keys       48.918 c/h        2.878 c/b        0.348 b/c
# BeagleHash_32_127        18 byte keys       48.000 c/h        2.667 c/b        0.375 b/c
# BeagleHash_32_127        19 byte keys       49.200 c/h        2.589 c/b        0.386 b/c
# BeagleHash_32_127        20 byte keys       48.691 c/h        2.435 c/b        0.411 b/c
# BeagleHash_32_127        21 byte keys       48.978 c/h        2.332 c/b        0.429 b/c
# BeagleHash_32_127        22 byte keys       49.209 c/h        2.237 c/b        0.447 b/c
# BeagleHash_32_127        23 byte keys       49.162 c/h        2.137 c/b        0.468 b/c
# BeagleHash_32_127        24 byte keys       55.515 c/h        2.313 c/b        0.432 b/c
# BeagleHash_32_127        25 byte keys       55.586 c/h        2.223 c/b        0.450 b/c
# BeagleHash_32_127        26 byte keys       54.996 c/h        2.115 c/b        0.473 b/c
# BeagleHash_32_127        27 byte keys       55.000 c/h        2.037 c/b        0.491 b/c
# BeagleHash_32_127        28 byte keys       55.000 c/h        1.964 c/b        0.509 b/c
# BeagleHash_32_127        29 byte keys       55.000 c/h        1.897 c/b        0.527 b/c
# BeagleHash_32_127        30 byte keys       56.119 c/h        1.871 c/b        0.535 b/c
# BeagleHash_32_127        31 byte keys       55.000 c/h        1.774 c/b        0.564 b/c
#                          Average < 32       45.451 c/h        2.932 c/b        0.341 b/c
# BeagleHash_32_127        32 byte keys       57.637 c/h        1.801 c/b        0.555 b/c
# BeagleHash_32_127        36 byte keys       57.305 c/h        1.592 c/b        0.628 b/c
# BeagleHash_32_127        40 byte keys       64.245 c/h        1.606 c/b        0.623 b/c
# BeagleHash_32_127        44 byte keys       63.467 c/h        1.442 c/b        0.693 b/c
# BeagleHash_32_127        48 byte keys       64.978 c/h        1.354 c/b        0.739 b/c
# BeagleHash_32_127        52 byte keys       65.284 c/h        1.255 c/b        0.797 b/c
# BeagleHash_32_127        56 byte keys       71.348 c/h        1.274 c/b        0.785 b/c
# BeagleHash_32_127        60 byte keys       69.999 c/h        1.167 c/b        0.857 b/c
# BeagleHash_32_127        64 byte keys       72.511 c/h        1.133 c/b        0.883 b/c
# BeagleHash_32_127        68 byte keys       73.180 c/h        1.076 c/b        0.929 b/c
# BeagleHash_32_127        72 byte keys       79.480 c/h        1.104 c/b        0.906 b/c
# BeagleHash_32_127        76 byte keys       78.233 c/h        1.029 c/b        0.971 b/c
# BeagleHash_32_127        80 byte keys       80.865 c/h        1.011 c/b        0.989 b/c
# BeagleHash_32_127        84 byte keys       81.307 c/h        0.968 c/b        1.033 b/c
# BeagleHash_32_127        88 byte keys       86.978 c/h        0.988 c/b        1.012 b/c
# BeagleHash_32_127        92 byte keys       88.678 c/h        0.964 c/b        1.037 b/c
# BeagleHash_32_127        96 byte keys       89.697 c/h        0.934 c/b        1.070 b/c
# BeagleHash_32_127       100 byte keys       90.633 c/h        0.906 c/b        1.103 b/c
# BeagleHash_32_127       104 byte keys       97.494 c/h        0.937 c/b        1.067 b/c
# BeagleHash_32_127       108 byte keys       98.164 c/h        0.909 c/b        1.100 b/c
# BeagleHash_32_127       112 byte keys      101.182 c/h        0.903 c/b        1.107 b/c
# BeagleHash_32_127       116 byte keys      101.698 c/h        0.877 c/b        1.141 b/c
# BeagleHash_32_127       120 byte keys      107.715 c/h        0.898 c/b        1.114 b/c
# BeagleHash_32_127       124 byte keys      105.214 c/h        0.848 c/b        1.179 b/c
#                         Average < 128       60.745 c/h        1.437 c/b        0.696 b/c
# BeagleHash_32_127       128 byte keys      106.431 c/h        0.831 c/b        1.203 b/c
# BeagleHash_32_127       256 byte keys      151.166 c/h        0.590 c/b        1.694 b/c
# BeagleHash_32_127       512 byte keys      300.712 c/h        0.587 c/b        1.703 b/c
# BeagleHash_32_127      1024 byte keys      567.859 c/h        0.555 c/b        1.803 b/c
# BeagleHash_32_127      2048 byte keys     1129.758 c/h        0.552 c/b        1.813 b/c
# BeagleHash_32_127      4096 byte keys     2211.245 c/h        0.540 c/b        1.852 b/c
# BeagleHash_32_127      8192 byte keys     4347.820 c/h        0.531 c/b        1.884 b/c
# BeagleHash_32_127     16384 byte keys     8695.185 c/h        0.531 c/b        1.884 b/c
# BeagleHash_32_127     32768 byte keys    17135.442 c/h        0.523 c/b        1.912 b/c
# BeagleHash_32_127     65536 byte keys    34679.110 c/h        0.529 c/b        1.890 b/c
#                       Overall Average     1101.916 c/h        0.546 c/b        1.833 b/c
ok 6 - Speed (always passes) # BeagleHash_32_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_127
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_127
# 2 total collisions, of which 2 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_127
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_127
# 3 total collisions, of which 3 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_127
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_127
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 1.009703e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.394% error-ratio: 9.811772e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.424% error-ratio: 1.013815e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.368% error-ratio: 9.767280e-01
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.367% error-ratio: 1.026790e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 1.002302e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.344% error-ratio: 9.865198e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.369% error-ratio: 1.001263e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 1.018667e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.365% error-ratio: 9.911286e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.380% error-ratio: 1.015661e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.355% error-ratio: 9.977784e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 1.003266e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.412% error-ratio: 1.017094e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.448% error-ratio: 9.887718e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.379% error-ratio: 9.920102e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.445% error-ratio: 1.007579e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.398% error-ratio: 1.006677e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.407% error-ratio: 1.021867e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.427% error-ratio: 1.002692e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.405% error-ratio: 9.910152e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.399% error-ratio: 1.004807e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.015592e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.375% error-ratio: 9.944959e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_32_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11558 ( 0.99x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11677 ( 1.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11637 ( 1.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11770 ( 1.01x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11485 ( 0.99x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_32_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       45 ( 0.91x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3437 ( 0.99x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40074 ( 0.99x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227027 ( 1.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866579 ( 0.99x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_32_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      141 ( 0.92x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2411 ( 0.98x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      441 ( 1.02x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2005 ( 0.97x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     8088 ( 1.01x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1343 ( 0.96x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      929 ( 1.02x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      494 ( 0.96x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_32_127
### Keyset 'CRC-MultiCollision' Tests ###
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42311 ( 0.99x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # BeagleHash_32_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42623 ( 1.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # BeagleHash_32_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42267 ( 0.99x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # BeagleHash_32_127
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      468 ( 0.91x) - passed
ok 100 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 101 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 102 - Keyset 'Combination HiBit-Null' # BeagleHash_32_127
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      545 ( 1.06x) - passed
ok 103 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 104 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 105 - Keyset 'Combination LowBit-Null' # BeagleHash_32_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17522 ( 1.01x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # BeagleHash_32_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25179 ( 0.99x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25530 ( 1.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25801 ( 1.02x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # BeagleHash_32_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        6 ( 0.75x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # BeagleHash_32_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      438 ( 0.94x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      485 ( 1.04x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      477 ( 1.02x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      468 ( 1.01x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # BeagleHash_32_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual        9 ( 1.13x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # BeagleHash_32_127
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual       10 ( 0.97x) - passed
ok 131 - Collision Rate for Keyset 'Words'
ok 132 - Distribution Bias Check for Keyset 'Words'
ok 133 - all tests passed # BeagleHash_32_127
1..133
# All Tests Passed. BeagleHash_32_127 passed all 133 tests run.
# Testing took 1879.550113 seconds
# This is SMHasher version v1.1-demerphq-10-g6c61def-dirty - built on Mar 15 2017.
