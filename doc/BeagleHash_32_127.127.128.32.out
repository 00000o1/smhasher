ok 1 - Found Hash # BeagleHash_32_127
###################################################################
### Testing BeagleHash_32_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_127
# BeagleHash_32_127    - Verification value 0x6CB5465F : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_127
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_127
ok 5 - Sanity Test # BeagleHash_32_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.878 bytes/cycle - 5373.69 MiB/sec @ 3 ghz
# Alignment  6 -  1.899 bytes/cycle - 5432.57 MiB/sec @ 3 ghz
# Alignment  5 -  1.872 bytes/cycle - 5357.07 MiB/sec @ 3 ghz
# Alignment  4 -  1.867 bytes/cycle - 5342.47 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5432.49 MiB/sec @ 3 ghz
# Alignment  2 -  1.873 bytes/cycle - 5359.34 MiB/sec @ 3 ghz
# Alignment  1 -  1.882 bytes/cycle - 5385.71 MiB/sec @ 3 ghz
# Alignment  0 -  1.888 bytes/cycle - 5400.40 MiB/sec @ 3 ghz
# Average      -  1.882 bytes/cycle - 5385.47 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_127         0 byte keys       17.000 c/h
# BeagleHash_32_127         1 byte keys       31.266 c/h       31.266 c/b        0.032 b/c
# BeagleHash_32_127         2 byte keys       34.903 c/h       17.452 c/b        0.057 b/c
# BeagleHash_32_127         3 byte keys       35.306 c/h       11.769 c/b        0.085 b/c
# BeagleHash_32_127         4 byte keys       36.000 c/h        9.000 c/b        0.111 b/c
# BeagleHash_32_127         5 byte keys       36.000 c/h        7.200 c/b        0.139 b/c
# BeagleHash_32_127         6 byte keys       36.232 c/h        6.039 c/b        0.166 b/c
# BeagleHash_32_127         7 byte keys       36.255 c/h        5.179 c/b        0.193 b/c
# BeagleHash_32_127         8 byte keys       46.335 c/h        5.792 c/b        0.173 b/c
# BeagleHash_32_127         9 byte keys       46.561 c/h        5.173 c/b        0.193 b/c
# BeagleHash_32_127        10 byte keys       46.000 c/h        4.600 c/b        0.217 b/c
# BeagleHash_32_127        11 byte keys       46.399 c/h        4.218 c/b        0.237 b/c
# BeagleHash_32_127        12 byte keys       46.823 c/h        3.902 c/b        0.256 b/c
# BeagleHash_32_127        13 byte keys       46.000 c/h        3.538 c/b        0.283 b/c
# BeagleHash_32_127        14 byte keys       46.000 c/h        3.286 c/b        0.304 b/c
# BeagleHash_32_127        15 byte keys       46.473 c/h        3.098 c/b        0.323 b/c
# BeagleHash_32_127        16 byte keys       49.879 c/h        3.117 c/b        0.321 b/c
# BeagleHash_32_127        17 byte keys       49.547 c/h        2.915 c/b        0.343 b/c
# BeagleHash_32_127        18 byte keys       49.973 c/h        2.776 c/b        0.360 b/c
# BeagleHash_32_127        19 byte keys       49.941 c/h        2.628 c/b        0.380 b/c
# BeagleHash_32_127        20 byte keys       50.352 c/h        2.518 c/b        0.397 b/c
# BeagleHash_32_127        21 byte keys       49.880 c/h        2.375 c/b        0.421 b/c
# BeagleHash_32_127        22 byte keys       49.983 c/h        2.272 c/b        0.440 b/c
# BeagleHash_32_127        23 byte keys       50.051 c/h        2.176 c/b        0.460 b/c
# BeagleHash_32_127        24 byte keys       56.289 c/h        2.345 c/b        0.426 b/c
# BeagleHash_32_127        25 byte keys       56.660 c/h        2.266 c/b        0.441 b/c
# BeagleHash_32_127        26 byte keys       55.999 c/h        2.154 c/b        0.464 b/c
# BeagleHash_32_127        27 byte keys       55.996 c/h        2.074 c/b        0.482 b/c
# BeagleHash_32_127        28 byte keys       56.000 c/h        2.000 c/b        0.500 b/c
# BeagleHash_32_127        29 byte keys       56.535 c/h        1.949 c/b        0.513 b/c
# BeagleHash_32_127        30 byte keys       57.017 c/h        1.901 c/b        0.526 b/c
# BeagleHash_32_127        31 byte keys       56.501 c/h        1.823 c/b        0.549 b/c
#                          Average < 32       46.380 c/h        2.992 c/b        0.334 b/c
# BeagleHash_32_127        32 byte keys       59.089 c/h        1.847 c/b        0.542 b/c
# BeagleHash_32_127        36 byte keys       58.000 c/h        1.611 c/b        0.621 b/c
# BeagleHash_32_127        40 byte keys       64.000 c/h        1.600 c/b        0.625 b/c
# BeagleHash_32_127        44 byte keys       65.030 c/h        1.478 c/b        0.677 b/c
# BeagleHash_32_127        48 byte keys       66.517 c/h        1.386 c/b        0.722 b/c
# BeagleHash_32_127        52 byte keys       66.204 c/h        1.273 c/b        0.785 b/c
# BeagleHash_32_127        56 byte keys       71.000 c/h        1.268 c/b        0.789 b/c
# BeagleHash_32_127        60 byte keys       71.911 c/h        1.199 c/b        0.834 b/c
# BeagleHash_32_127        64 byte keys       73.844 c/h        1.154 c/b        0.867 b/c
# BeagleHash_32_127        68 byte keys       74.003 c/h        1.088 c/b        0.919 b/c
# BeagleHash_32_127        72 byte keys       79.000 c/h        1.097 c/b        0.911 b/c
# BeagleHash_32_127        76 byte keys       79.563 c/h        1.047 c/b        0.955 b/c
# BeagleHash_32_127        80 byte keys       80.999 c/h        1.012 c/b        0.988 b/c
# BeagleHash_32_127        84 byte keys       81.764 c/h        0.973 c/b        1.027 b/c
# BeagleHash_32_127        88 byte keys       87.837 c/h        0.998 c/b        1.002 b/c
# BeagleHash_32_127        92 byte keys       87.951 c/h        0.956 c/b        1.046 b/c
# BeagleHash_32_127        96 byte keys       89.996 c/h        0.937 c/b        1.067 b/c
# BeagleHash_32_127       100 byte keys       91.251 c/h        0.913 c/b        1.096 b/c
# BeagleHash_32_127       104 byte keys       96.972 c/h        0.932 c/b        1.072 b/c
# BeagleHash_32_127       108 byte keys       96.990 c/h        0.898 c/b        1.114 b/c
# BeagleHash_32_127       112 byte keys      101.386 c/h        0.905 c/b        1.105 b/c
# BeagleHash_32_127       116 byte keys      100.506 c/h        0.866 c/b        1.154 b/c
# BeagleHash_32_127       120 byte keys      106.445 c/h        0.887 c/b        1.127 b/c
# BeagleHash_32_127       124 byte keys      104.923 c/h        0.846 c/b        1.182 b/c
#                         Average < 128       61.417 c/h        1.452 c/b        0.689 b/c
# BeagleHash_32_127       128 byte keys      107.041 c/h        0.836 c/b        1.196 b/c
# BeagleHash_32_127       256 byte keys      149.175 c/h        0.583 c/b        1.716 b/c
# BeagleHash_32_127       512 byte keys      298.300 c/h        0.583 c/b        1.716 b/c
# BeagleHash_32_127      1024 byte keys      573.353 c/h        0.560 c/b        1.786 b/c
# BeagleHash_32_127      2048 byte keys     1128.967 c/h        0.551 c/b        1.814 b/c
# BeagleHash_32_127      4096 byte keys     2167.273 c/h        0.529 c/b        1.890 b/c
# BeagleHash_32_127      8192 byte keys     4305.190 c/h        0.526 c/b        1.903 b/c
# BeagleHash_32_127     16384 byte keys     8661.324 c/h        0.529 c/b        1.892 b/c
# BeagleHash_32_127     32768 byte keys    17273.538 c/h        0.527 c/b        1.897 b/c
# BeagleHash_32_127     65536 byte keys    34242.580 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1096.153 c/h        0.543 c/b        1.843 b/c
ok 6 - Speed (always passes) # BeagleHash_32_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_127
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_127
# 3 total collisions, of which 3 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_127
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_127
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_127
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_127
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.377% error-ratio: 1.013091e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.947874e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 9.824059e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.418% error-ratio: 1.017329e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.348% error-ratio: 1.042581e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.358% error-ratio: 1.011667e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.366% error-ratio: 9.961233e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.400% error-ratio: 9.737935e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.362% error-ratio: 9.755914e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.390% error-ratio: 9.878771e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.396% error-ratio: 9.803004e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.392% error-ratio: 1.005696e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.400% error-ratio: 1.018540e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.405% error-ratio: 9.876589e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.361% error-ratio: 9.794296e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.408% error-ratio: 1.003295e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.410% error-ratio: 1.020521e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.431% error-ratio: 9.887011e-01
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.454% error-ratio: 9.843423e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.406% error-ratio: 9.819578e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.359% error-ratio: 1.001594e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.390% error-ratio: 1.018860e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 1.022792e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.433% error-ratio: 1.002784e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_32_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11655 ( 1.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11551 ( 0.99x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11628 ( 1.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11485 ( 0.99x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11706 ( 1.01x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_32_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       60 ( 1.21x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3484 ( 1.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40119 ( 0.99x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   226964 ( 1.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   865677 ( 0.99x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_32_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      166 ( 1.08x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2534 ( 1.03x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      418 ( 0.97x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2120 ( 1.02x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     7951 ( 0.99x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1374 ( 0.98x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      807 ( 0.89x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      533 ( 1.04x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_32_127
### Keyset 'CRC-MultiCollision' Tests ###
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      144 ( 1.13x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    43023 ( 1.01x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # BeagleHash_32_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42656 ( 1.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # BeagleHash_32_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42636 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # BeagleHash_32_127
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      506 ( 0.99x) - passed
ok 100 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 101 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 102 - Keyset 'Combination HiBit-Null' # BeagleHash_32_127
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      521 ( 1.02x) - passed
ok 103 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 104 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 105 - Keyset 'Combination LowBit-Null' # BeagleHash_32_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    16978 ( 0.98x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # BeagleHash_32_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25369 ( 1.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25283 ( 0.99x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25269 ( 0.99x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # BeagleHash_32_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # BeagleHash_32_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      490 ( 1.05x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      445 ( 0.96x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      452 ( 0.97x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      446 ( 0.96x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # BeagleHash_32_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual       12 ( 1.50x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # BeagleHash_32_127
### Keyset 'Words' Tests ###
# Read 99171 lines from /usr/share/dict/words
# Testing collisions   - Expected     1.14, actual        3 ( 2.62x) - failed
not ok 131 - Collision Rate for Keyset 'Words'
ok 132 - Distribution Bias Check for Keyset 'Words'
not ok 133 - all tests passed # BeagleHash_32_127
1..133
# Tests Failed. BeagleHash_32_127 failed 2 of 133 tests.
# Testing took 1867.338279 seconds
# This is SMHasher version v1.1-demerphq-5-ged9ad7f - built on Mar 14 2017.
