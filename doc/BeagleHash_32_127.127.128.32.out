ok 1 - SelfTest - Verify 89 Hashes
ok 2 - Found Hash # BeagleHash_32_127
###################################################################
### Testing BeagleHash_32_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 32
###################################################################
### Sanity Tests ###
ok 3 - Verification code # BeagleHash_32_127
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # BeagleHash_32_127
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # BeagleHash_32_127
ok 6 - Sanity Test # BeagleHash_32_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.899 bytes/cycle - 5432.51 MiB/sec @ 3 ghz
# Alignment  6 -  1.899 bytes/cycle - 5432.50 MiB/sec @ 3 ghz
# Alignment  5 -  1.899 bytes/cycle - 5432.40 MiB/sec @ 3 ghz
# Alignment  4 -  1.899 bytes/cycle - 5432.44 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5432.33 MiB/sec @ 3 ghz
# Alignment  2 -  1.899 bytes/cycle - 5432.45 MiB/sec @ 3 ghz
# Alignment  1 -  1.899 bytes/cycle - 5432.40 MiB/sec @ 3 ghz
# Alignment  0 -  1.915 bytes/cycle - 5479.38 MiB/sec @ 3 ghz
# Average      -  1.901 bytes/cycle - 5438.30 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_127         0 byte keys       17.000 c/h
# BeagleHash_32_127         1 byte keys       31.230 c/h       31.230 c/b        0.032 b/c
# BeagleHash_32_127         2 byte keys       34.612 c/h       17.306 c/b        0.058 b/c
# BeagleHash_32_127         3 byte keys       35.000 c/h       11.667 c/b        0.086 b/c
# BeagleHash_32_127         4 byte keys       36.000 c/h        9.000 c/b        0.111 b/c
# BeagleHash_32_127         5 byte keys       36.000 c/h        7.200 c/b        0.139 b/c
# BeagleHash_32_127         6 byte keys       36.000 c/h        6.000 c/b        0.167 b/c
# BeagleHash_32_127         7 byte keys       36.000 c/h        5.143 c/b        0.194 b/c
# BeagleHash_32_127         8 byte keys       46.602 c/h        5.825 c/b        0.172 b/c
# BeagleHash_32_127         9 byte keys       46.000 c/h        5.111 c/b        0.196 b/c
# BeagleHash_32_127        10 byte keys       46.000 c/h        4.600 c/b        0.217 b/c
# BeagleHash_32_127        11 byte keys       46.000 c/h        4.182 c/b        0.239 b/c
# BeagleHash_32_127        12 byte keys       46.000 c/h        3.833 c/b        0.261 b/c
# BeagleHash_32_127        13 byte keys       46.000 c/h        3.538 c/b        0.283 b/c
# BeagleHash_32_127        14 byte keys       46.000 c/h        3.286 c/b        0.304 b/c
# BeagleHash_32_127        15 byte keys       46.000 c/h        3.067 c/b        0.326 b/c
# BeagleHash_32_127        16 byte keys       49.603 c/h        3.100 c/b        0.323 b/c
# BeagleHash_32_127        17 byte keys       49.000 c/h        2.882 c/b        0.347 b/c
# BeagleHash_32_127        18 byte keys       49.897 c/h        2.772 c/b        0.361 b/c
# BeagleHash_32_127        19 byte keys       49.660 c/h        2.614 c/b        0.383 b/c
# BeagleHash_32_127        20 byte keys       49.906 c/h        2.495 c/b        0.401 b/c
# BeagleHash_32_127        21 byte keys       49.912 c/h        2.377 c/b        0.421 b/c
# BeagleHash_32_127        22 byte keys       49.893 c/h        2.268 c/b        0.441 b/c
# BeagleHash_32_127        23 byte keys       49.921 c/h        2.170 c/b        0.461 b/c
# BeagleHash_32_127        24 byte keys       56.485 c/h        2.354 c/b        0.425 b/c
# BeagleHash_32_127        25 byte keys       55.884 c/h        2.235 c/b        0.447 b/c
# BeagleHash_32_127        26 byte keys       55.990 c/h        2.153 c/b        0.464 b/c
# BeagleHash_32_127        27 byte keys       55.995 c/h        2.074 c/b        0.482 b/c
# BeagleHash_32_127        28 byte keys       55.991 c/h        2.000 c/b        0.500 b/c
# BeagleHash_32_127        29 byte keys       56.000 c/h        1.931 c/b        0.518 b/c
# BeagleHash_32_127        30 byte keys       55.996 c/h        1.867 c/b        0.536 b/c
# BeagleHash_32_127        31 byte keys       55.999 c/h        1.806 c/b        0.554 b/c
#                          Average < 32       46.143 c/h        2.977 c/b        0.336 b/c
# BeagleHash_32_127        32 byte keys       57.996 c/h        1.812 c/b        0.552 b/c
# BeagleHash_32_127        36 byte keys       58.000 c/h        1.611 c/b        0.621 b/c
# BeagleHash_32_127        40 byte keys       64.000 c/h        1.600 c/b        0.625 b/c
# BeagleHash_32_127        44 byte keys       64.340 c/h        1.462 c/b        0.684 b/c
# BeagleHash_32_127        48 byte keys       65.562 c/h        1.366 c/b        0.732 b/c
# BeagleHash_32_127        52 byte keys       65.577 c/h        1.261 c/b        0.793 b/c
# BeagleHash_32_127        56 byte keys       71.000 c/h        1.268 c/b        0.789 b/c
# BeagleHash_32_127        60 byte keys       70.999 c/h        1.183 c/b        0.845 b/c
# BeagleHash_32_127        64 byte keys       72.999 c/h        1.141 c/b        0.877 b/c
# BeagleHash_32_127        68 byte keys       73.000 c/h        1.074 c/b        0.932 b/c
# BeagleHash_32_127        72 byte keys       79.311 c/h        1.102 c/b        0.908 b/c
# BeagleHash_32_127        76 byte keys       79.000 c/h        1.039 c/b        0.962 b/c
# BeagleHash_32_127        80 byte keys       81.142 c/h        1.014 c/b        0.986 b/c
# BeagleHash_32_127        84 byte keys       81.758 c/h        0.973 c/b        1.027 b/c
# BeagleHash_32_127        88 byte keys       87.837 c/h        0.998 c/b        1.002 b/c
# BeagleHash_32_127        92 byte keys       87.952 c/h        0.956 c/b        1.046 b/c
# BeagleHash_32_127        96 byte keys       89.994 c/h        0.937 c/b        1.067 b/c
# BeagleHash_32_127       100 byte keys       90.838 c/h        0.908 c/b        1.101 b/c
# BeagleHash_32_127       104 byte keys       97.097 c/h        0.934 c/b        1.071 b/c
# BeagleHash_32_127       108 byte keys       97.228 c/h        0.900 c/b        1.111 b/c
# BeagleHash_32_127       112 byte keys       99.925 c/h        0.892 c/b        1.121 b/c
# BeagleHash_32_127       116 byte keys       99.621 c/h        0.859 c/b        1.164 b/c
# BeagleHash_32_127       120 byte keys      105.363 c/h        0.878 c/b        1.139 b/c
# BeagleHash_32_127       124 byte keys      105.040 c/h        0.847 c/b        1.181 b/c
#                         Average < 128       61.110 c/h        1.445 c/b        0.692 b/c
# BeagleHash_32_127       128 byte keys      110.939 c/h        0.867 c/b        1.154 b/c
# BeagleHash_32_127       256 byte keys      156.303 c/h        0.611 c/b        1.638 b/c
# BeagleHash_32_127       512 byte keys      310.436 c/h        0.606 c/b        1.649 b/c
# BeagleHash_32_127      1024 byte keys      567.637 c/h        0.554 c/b        1.804 b/c
# BeagleHash_32_127      2048 byte keys     1102.526 c/h        0.538 c/b        1.858 b/c
# BeagleHash_32_127      4096 byte keys     2170.445 c/h        0.530 c/b        1.887 b/c
# BeagleHash_32_127      8192 byte keys     4308.559 c/h        0.526 c/b        1.901 b/c
# BeagleHash_32_127     16384 byte keys     8583.650 c/h        0.524 c/b        1.909 b/c
# BeagleHash_32_127     32768 byte keys    17133.520 c/h        0.523 c/b        1.913 b/c
# BeagleHash_32_127     65536 byte keys    34244.196 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1092.581 c/h        0.541 c/b        1.849 b/c
ok 7 - Speed (always passes) # BeagleHash_32_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 8 - Differential collisions # BeagleHash_32_127
ok 9 - Nothing skipped during differential collision check # BeagleHash_32_127
# 3 total collisions, of which 3 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 11 - Differential collisions # BeagleHash_32_127
ok 12 - Nothing skipped during differential collision check # BeagleHash_32_127
# 4 total collisions, of which 4 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 14 - Differential collisions # BeagleHash_32_127
ok 15 - Nothing skipped during differential collision check # BeagleHash_32_127
# 1 total collisions, of which 1 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # BeagleHash_32_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 9.995278e-01
ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.334% error-ratio: 1.009047e+00
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.344% error-ratio: 9.755533e-01
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.470% error-ratio: 9.568360e-01
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.873992e-01
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.359% error-ratio: 1.021871e+00
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.036222e+00
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.380% error-ratio: 9.892515e-01
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.404% error-ratio: 9.898370e-01
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.433% error-ratio: 9.663284e-01
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 9.971962e-01
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.365% error-ratio: 9.855934e-01
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.436% error-ratio: 1.003972e+00
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.446% error-ratio: 9.673473e-01
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.824731e-01
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.023159e+00
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.938452e-01
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.388% error-ratio: 9.993992e-01
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.387% error-ratio: 9.882318e-01
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 9.911055e-01
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 1.012195e+00
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.394% error-ratio: 9.865119e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # BeagleHash_32_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11587 ( 1.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11695 ( 1.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11676 ( 1.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11743 ( 1.01x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11932 ( 1.02x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # BeagleHash_32_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       60 ( 1.21x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3484 ( 1.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40119 ( 0.99x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   226964 ( 1.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   865677 ( 0.99x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # BeagleHash_32_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      174 ( 1.13x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2584 ( 1.05x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      382 ( 0.89x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2146 ( 1.04x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     7993 ( 1.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1409 ( 1.01x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      915 ( 1.01x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      541 ( 1.06x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # BeagleHash_32_127
# Keyset 'CRC-MultiCollision' - 100000 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     1.16, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        2 ( 1.72x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        1 ( 0.86x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        1 ( 0.86x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        2 ( 1.72x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        1 ( 0.86x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        1 ( 0.86x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        1 ( 0.86x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected     1.16, actual        2 ( 1.72x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42720 ( 1.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # BeagleHash_32_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42938 ( 1.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # BeagleHash_32_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42626 ( 1.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # BeagleHash_32_127
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      511 ( 1.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # BeagleHash_32_127
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      536 ( 1.05x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # BeagleHash_32_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17340 ( 1.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # BeagleHash_32_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25636 ( 1.01x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25757 ( 1.01x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25386 ( 1.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # BeagleHash_32_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        6 ( 0.75x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # BeagleHash_32_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      510 ( 1.10x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      489 ( 1.05x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      474 ( 1.02x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      473 ( 1.02x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # BeagleHash_32_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # BeagleHash_32_127
ok 130 - all tests passed # BeagleHash_32_127
1..130
# All Tests Passed. BeagleHash_32_127 passed all 130 tests run.
# Testing took 1699.201887 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
