ok 1 - Self Test - Verify 87 Hashes
ok 2 - Found Hash # BeagleHash_64_127
###################################################################
### Testing BeagleHash_64_127 (Yves Orton's hash for 64-bit (127 bit seed).)
###################################################################
### Sanity Tests ###
ok 3 - Verification code # BeagleHash_64_127
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # BeagleHash_64_127
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # BeagleHash_64_127
ok 6 - Sanity Test # BeagleHash_64_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.899 bytes/cycle - 5432.67 MiB/sec @ 3 ghz
# Alignment  6 -  1.899 bytes/cycle - 5432.67 MiB/sec @ 3 ghz
# Alignment  5 -  1.899 bytes/cycle - 5432.19 MiB/sec @ 3 ghz
# Alignment  4 -  1.899 bytes/cycle - 5432.56 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5432.52 MiB/sec @ 3 ghz
# Alignment  2 -  1.899 bytes/cycle - 5432.42 MiB/sec @ 3 ghz
# Alignment  1 -  1.899 bytes/cycle - 5432.58 MiB/sec @ 3 ghz
# Alignment  0 -  1.915 bytes/cycle - 5479.62 MiB/sec @ 3 ghz
# Average      -  1.901 bytes/cycle - 5438.40 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_127         0 byte keys       16.157 c/h
# BeagleHash_64_127         1 byte keys       30.071 c/h       30.071 c/b        0.033 b/c
# BeagleHash_64_127         2 byte keys       33.000 c/h       16.500 c/b        0.061 b/c
# BeagleHash_64_127         3 byte keys       33.000 c/h       11.000 c/b        0.091 b/c
# BeagleHash_64_127         4 byte keys       34.423 c/h        8.606 c/b        0.116 b/c
# BeagleHash_64_127         5 byte keys       35.000 c/h        7.000 c/b        0.143 b/c
# BeagleHash_64_127         6 byte keys       36.997 c/h        6.166 c/b        0.162 b/c
# BeagleHash_64_127         7 byte keys       37.000 c/h        5.286 c/b        0.189 b/c
# BeagleHash_64_127         8 byte keys       34.999 c/h        4.375 c/b        0.229 b/c
# BeagleHash_64_127         9 byte keys       35.000 c/h        3.889 c/b        0.257 b/c
# BeagleHash_64_127        10 byte keys       35.000 c/h        3.500 c/b        0.286 b/c
# BeagleHash_64_127        11 byte keys       34.999 c/h        3.182 c/b        0.314 b/c
# BeagleHash_64_127        12 byte keys       35.000 c/h        2.917 c/b        0.343 b/c
# BeagleHash_64_127        13 byte keys       35.000 c/h        2.692 c/b        0.371 b/c
# BeagleHash_64_127        14 byte keys       35.000 c/h        2.500 c/b        0.400 b/c
# BeagleHash_64_127        15 byte keys       35.000 c/h        2.333 c/b        0.429 b/c
# BeagleHash_64_127        16 byte keys       37.926 c/h        2.370 c/b        0.422 b/c
# BeagleHash_64_127        17 byte keys       38.000 c/h        2.235 c/b        0.447 b/c
# BeagleHash_64_127        18 byte keys       38.553 c/h        2.142 c/b        0.467 b/c
# BeagleHash_64_127        19 byte keys       37.996 c/h        2.000 c/b        0.500 b/c
# BeagleHash_64_127        20 byte keys       38.000 c/h        1.900 c/b        0.526 b/c
# BeagleHash_64_127        21 byte keys       39.269 c/h        1.870 c/b        0.535 b/c
# BeagleHash_64_127        22 byte keys       38.000 c/h        1.727 c/b        0.579 b/c
# BeagleHash_64_127        23 byte keys       38.000 c/h        1.652 c/b        0.605 b/c
# BeagleHash_64_127        24 byte keys       44.000 c/h        1.833 c/b        0.545 b/c
# BeagleHash_64_127        25 byte keys       44.000 c/h        1.760 c/b        0.568 b/c
# BeagleHash_64_127        26 byte keys       44.000 c/h        1.692 c/b        0.591 b/c
# BeagleHash_64_127        27 byte keys       44.238 c/h        1.638 c/b        0.610 b/c
# BeagleHash_64_127        28 byte keys       44.553 c/h        1.591 c/b        0.628 b/c
# BeagleHash_64_127        29 byte keys       44.839 c/h        1.546 c/b        0.647 b/c
# BeagleHash_64_127        30 byte keys       44.347 c/h        1.478 c/b        0.676 b/c
# BeagleHash_64_127        31 byte keys       44.000 c/h        1.419 c/b        0.705 b/c
#                          Average < 32       37.355 c/h        2.410 c/b        0.415 b/c
# BeagleHash_64_127        32 byte keys       45.889 c/h        1.434 c/b        0.697 b/c
# BeagleHash_64_127        36 byte keys       46.000 c/h        1.278 c/b        0.783 b/c
# BeagleHash_64_127        40 byte keys       52.000 c/h        1.300 c/b        0.769 b/c
# BeagleHash_64_127        44 byte keys       54.300 c/h        1.234 c/b        0.810 b/c
# BeagleHash_64_127        48 byte keys       54.943 c/h        1.145 c/b        0.874 b/c
# BeagleHash_64_127        52 byte keys       53.999 c/h        1.038 c/b        0.963 b/c
# BeagleHash_64_127        56 byte keys       60.444 c/h        1.079 c/b        0.926 b/c
# BeagleHash_64_127        60 byte keys       60.000 c/h        1.000 c/b        1.000 b/c
# BeagleHash_64_127        64 byte keys       61.948 c/h        0.968 c/b        1.033 b/c
# BeagleHash_64_127        68 byte keys       61.986 c/h        0.912 c/b        1.097 b/c
# BeagleHash_64_127        72 byte keys       68.478 c/h        0.951 c/b        1.051 b/c
# BeagleHash_64_127        76 byte keys       67.996 c/h        0.895 c/b        1.118 b/c
# BeagleHash_64_127        80 byte keys       69.924 c/h        0.874 c/b        1.144 b/c
# BeagleHash_64_127        84 byte keys       69.999 c/h        0.833 c/b        1.200 b/c
# BeagleHash_64_127        88 byte keys       77.492 c/h        0.881 c/b        1.136 b/c
# BeagleHash_64_127        92 byte keys       76.587 c/h        0.832 c/b        1.201 b/c
# BeagleHash_64_127        96 byte keys       78.887 c/h        0.822 c/b        1.217 b/c
# BeagleHash_64_127       100 byte keys       78.968 c/h        0.790 c/b        1.266 b/c
# BeagleHash_64_127       104 byte keys       85.979 c/h        0.827 c/b        1.210 b/c
# BeagleHash_64_127       108 byte keys       85.705 c/h        0.794 c/b        1.260 b/c
# BeagleHash_64_127       112 byte keys       89.007 c/h        0.795 c/b        1.258 b/c
# BeagleHash_64_127       116 byte keys       88.111 c/h        0.760 c/b        1.317 b/c
# BeagleHash_64_127       120 byte keys       97.301 c/h        0.811 c/b        1.233 b/c
# BeagleHash_64_127       124 byte keys       93.913 c/h        0.757 c/b        1.320 b/c
#                         Average < 128       51.343 c/h        1.214 c/b        0.824 b/c
# BeagleHash_64_127       128 byte keys       95.931 c/h        0.749 c/b        1.334 b/c
# BeagleHash_64_127       256 byte keys      151.557 c/h        0.592 c/b        1.689 b/c
# BeagleHash_64_127       512 byte keys      301.018 c/h        0.588 c/b        1.701 b/c
# BeagleHash_64_127      1024 byte keys      570.796 c/h        0.557 c/b        1.794 b/c
# BeagleHash_64_127      2048 byte keys     1103.059 c/h        0.539 c/b        1.857 b/c
# BeagleHash_64_127      4096 byte keys     2171.910 c/h        0.530 c/b        1.886 b/c
# BeagleHash_64_127      8192 byte keys     4374.625 c/h        0.534 c/b        1.873 b/c
# BeagleHash_64_127     16384 byte keys     8584.506 c/h        0.524 c/b        1.909 b/c
# BeagleHash_64_127     32768 byte keys    17135.433 c/h        0.523 c/b        1.912 b/c
# BeagleHash_64_127     65536 byte keys    34243.649 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1084.965 c/h        0.537 c/b        1.862 b/c
ok 7 - Speed (always passes) # BeagleHash_64_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 8 - Differential collisions # BeagleHash_64_127
ok 9 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 11 - Differential collisions # BeagleHash_64_127
ok 12 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 14 - Differential collisions # BeagleHash_64_127
ok 15 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # BeagleHash_64_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.564% error-ratio: 1.026327e+00
ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.571% error-ratio: 1.032121e+00
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.566% error-ratio: 1.008720e+00
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.646% error-ratio: 1.004332e+00
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.538% error-ratio: 9.981334e-01
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.536% error-ratio: 9.538985e-01
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 9.938719e-01
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.560% error-ratio: 9.924110e-01
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.582% error-ratio: 9.882717e-01
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.567% error-ratio: 9.978067e-01
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.655% error-ratio: 1.021690e+00
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.581% error-ratio: 9.792740e-01
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.631% error-ratio: 9.827480e-01
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.557% error-ratio: 1.010791e+00
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.507% error-ratio: 1.007906e+00
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.557% error-ratio: 9.928186e-01
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.492% error-ratio: 9.870499e-01
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.580% error-ratio: 9.898822e-01
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.598% error-ratio: 1.004523e+00
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 1.012026e+00
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.582% error-ratio: 9.815216e-01
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.579% error-ratio: 9.950304e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # BeagleHash_64_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # BeagleHash_64_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # BeagleHash_64_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # BeagleHash_64_127
# Keyset 'CRC-MultiCollision' - 100000 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # BeagleHash_64_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # BeagleHash_64_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # BeagleHash_64_127
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # BeagleHash_64_127
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # BeagleHash_64_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # BeagleHash_64_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # BeagleHash_64_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # BeagleHash_64_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # BeagleHash_64_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # BeagleHash_64_127
ok 130 - all tests passed # BeagleHash_64_127
1..130
# All tests passed. Self-Test passed 130 tests.
# Testing took 1986.704574 seconds
