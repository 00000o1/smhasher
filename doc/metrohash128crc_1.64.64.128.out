ok 1 - SelfTest - Verify 89 Hashes
ok 2 - Found Hash # metrohash128crc_1
###################################################################
### Testing metrohash128crc_1 - no seed_state
### - MetroHash128crc_1 for x64 -
### seedbits: 64 statebits: 64 hashbits: 128
###################################################################
### Sanity Tests ###
ok 3 - Verification code # metrohash128crc_1
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # metrohash128crc_1
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # metrohash128crc_1
ok 6 - Sanity Test # metrohash128crc_1
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  6.318 bytes/cycle - 18075.47 MiB/sec @ 3 ghz
# Alignment  6 -  6.318 bytes/cycle - 18076.32 MiB/sec @ 3 ghz
# Alignment  5 -  6.317 bytes/cycle - 18074.41 MiB/sec @ 3 ghz
# Alignment  4 -  6.318 bytes/cycle - 18075.27 MiB/sec @ 3 ghz
# Alignment  3 -  6.318 bytes/cycle - 18075.43 MiB/sec @ 3 ghz
# Alignment  2 -  6.318 bytes/cycle - 18075.64 MiB/sec @ 3 ghz
# Alignment  1 -  6.318 bytes/cycle - 18076.27 MiB/sec @ 3 ghz
# Alignment  0 -  6.335 bytes/cycle - 18124.72 MiB/sec @ 3 ghz
# Average      -  6.320 bytes/cycle - 18081.69 MiB/sec @ 3 ghz
## KeySpeed tests
# metrohash128crc_1         0 byte keys       20.000 c/h
# metrohash128crc_1         1 byte keys       22.000 c/h       22.000 c/b        0.045 b/c
# metrohash128crc_1         2 byte keys       23.000 c/h       11.500 c/b        0.087 b/c
# metrohash128crc_1         3 byte keys       32.000 c/h       10.667 c/b        0.094 b/c
# metrohash128crc_1         4 byte keys       22.033 c/h        5.508 c/b        0.182 b/c
# metrohash128crc_1         5 byte keys       29.000 c/h        5.800 c/b        0.172 b/c
# metrohash128crc_1         6 byte keys       34.000 c/h        5.667 c/b        0.176 b/c
# metrohash128crc_1         7 byte keys       43.000 c/h        6.143 c/b        0.163 b/c
# metrohash128crc_1         8 byte keys       26.320 c/h        3.290 c/b        0.304 b/c
# metrohash128crc_1         9 byte keys       35.967 c/h        3.996 c/b        0.250 b/c
# metrohash128crc_1        10 byte keys       35.000 c/h        3.500 c/b        0.286 b/c
# metrohash128crc_1        11 byte keys       43.000 c/h        3.909 c/b        0.256 b/c
# metrohash128crc_1        12 byte keys       35.000 c/h        2.917 c/b        0.343 b/c
# metrohash128crc_1        13 byte keys       43.536 c/h        3.349 c/b        0.299 b/c
# metrohash128crc_1        14 byte keys       48.931 c/h        3.495 c/b        0.286 b/c
# metrohash128crc_1        15 byte keys       56.804 c/h        3.787 c/b        0.264 b/c
# metrohash128crc_1        16 byte keys       30.000 c/h        1.875 c/b        0.533 b/c
# metrohash128crc_1        17 byte keys       38.000 c/h        2.235 c/b        0.447 b/c
# metrohash128crc_1        18 byte keys       43.000 c/h        2.389 c/b        0.419 b/c
# metrohash128crc_1        19 byte keys       51.000 c/h        2.684 c/b        0.373 b/c
# metrohash128crc_1        20 byte keys       38.545 c/h        1.927 c/b        0.519 b/c
# metrohash128crc_1        21 byte keys       46.000 c/h        2.190 c/b        0.457 b/c
# metrohash128crc_1        22 byte keys       51.228 c/h        2.329 c/b        0.429 b/c
# metrohash128crc_1        23 byte keys       60.000 c/h        2.609 c/b        0.383 b/c
# metrohash128crc_1        24 byte keys       40.000 c/h        1.667 c/b        0.600 b/c
# metrohash128crc_1        25 byte keys       48.560 c/h        1.942 c/b        0.515 b/c
# metrohash128crc_1        26 byte keys       48.000 c/h        1.846 c/b        0.542 b/c
# metrohash128crc_1        27 byte keys       56.726 c/h        2.101 c/b        0.476 b/c
# metrohash128crc_1        28 byte keys       48.000 c/h        1.714 c/b        0.583 b/c
# metrohash128crc_1        29 byte keys       56.812 c/h        1.959 c/b        0.510 b/c
# metrohash128crc_1        30 byte keys       63.680 c/h        2.123 c/b        0.471 b/c
# metrohash128crc_1        31 byte keys       70.000 c/h        2.258 c/b        0.443 b/c
#                          Average < 32       41.848 c/h        2.700 c/b        0.370 b/c
# metrohash128crc_1        32 byte keys       45.784 c/h        1.431 c/b        0.699 b/c
# metrohash128crc_1        36 byte keys       52.000 c/h        1.444 c/b        0.692 b/c
# metrohash128crc_1        40 byte keys       54.000 c/h        1.350 c/b        0.741 b/c
# metrohash128crc_1        44 byte keys       60.993 c/h        1.386 c/b        0.721 b/c
# metrohash128crc_1        48 byte keys       60.937 c/h        1.270 c/b        0.788 b/c
# metrohash128crc_1        52 byte keys       67.886 c/h        1.306 c/b        0.766 b/c
# metrohash128crc_1        56 byte keys       69.859 c/h        1.247 c/b        0.802 b/c
# metrohash128crc_1        60 byte keys       72.000 c/h        1.200 c/b        0.833 b/c
# metrohash128crc_1        64 byte keys       44.999 c/h        0.703 c/b        1.422 b/c
# metrohash128crc_1        68 byte keys       53.000 c/h        0.779 c/b        1.283 b/c
# metrohash128crc_1        72 byte keys       55.000 c/h        0.764 c/b        1.309 b/c
# metrohash128crc_1        76 byte keys       63.803 c/h        0.840 c/b        1.191 b/c
# metrohash128crc_1        80 byte keys       59.000 c/h        0.738 c/b        1.356 b/c
# metrohash128crc_1        84 byte keys       67.738 c/h        0.806 c/b        1.240 b/c
# metrohash128crc_1        88 byte keys       69.000 c/h        0.784 c/b        1.275 b/c
# metrohash128crc_1        92 byte keys       77.947 c/h        0.847 c/b        1.180 b/c
# metrohash128crc_1        96 byte keys       50.000 c/h        0.521 c/b        1.920 b/c
# metrohash128crc_1       100 byte keys       57.720 c/h        0.577 c/b        1.732 b/c
# metrohash128crc_1       104 byte keys       60.574 c/h        0.582 c/b        1.717 b/c
# metrohash128crc_1       108 byte keys       69.000 c/h        0.639 c/b        1.565 b/c
# metrohash128crc_1       112 byte keys       64.000 c/h        0.571 c/b        1.750 b/c
# metrohash128crc_1       116 byte keys       72.984 c/h        0.629 c/b        1.589 b/c
# metrohash128crc_1       120 byte keys       74.000 c/h        0.617 c/b        1.622 b/c
# metrohash128crc_1       124 byte keys       82.673 c/h        0.667 c/b        1.500 b/c
#                         Average < 128       50.786 c/h        1.201 c/b        0.833 b/c
# metrohash128crc_1       128 byte keys       55.991 c/h        0.437 c/b        2.286 b/c
# metrohash128crc_1       256 byte keys       68.683 c/h        0.268 c/b        3.727 b/c
# metrohash128crc_1       512 byte keys      104.672 c/h        0.204 c/b        4.891 b/c
# metrohash128crc_1      1024 byte keys      192.315 c/h        0.188 c/b        5.325 b/c
# metrohash128crc_1      2048 byte keys      338.043 c/h        0.165 c/b        6.058 b/c
# metrohash128crc_1      4096 byte keys      631.807 c/h        0.154 c/b        6.483 b/c
# metrohash128crc_1      8192 byte keys     1218.572 c/h        0.149 c/b        6.723 b/c
# metrohash128crc_1     16384 byte keys     2392.790 c/h        0.146 c/b        6.847 b/c
# metrohash128crc_1     32768 byte keys     4742.696 c/h        0.145 c/b        6.909 b/c
# metrohash128crc_1     65536 byte keys     9449.335 c/h        0.144 c/b        6.936 b/c
#                       Overall Average      333.923 c/h        0.165 c/b        6.049 b/c
ok 7 - Speed (always passes) # metrohash128crc_1
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 128 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 8 - Differential collisions # metrohash128crc_1
ok 9 - Nothing skipped during differential collision check # metrohash128crc_1
# 0 total collisions, of which 0 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 128 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 11 - Differential collisions # metrohash128crc_1
ok 12 - Nothing skipped during differential collision check # metrohash128crc_1
# 0 total collisions, of which 0 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 128 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 14 - Differential collisions # metrohash128crc_1
ok 15 - Nothing skipped during differential collision check # metrohash128crc_1
# 0 total collisions, of which 0 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # metrohash128crc_1
### Avalanche Tests ### - seed-bits: 64 hash-bits: 128
# Samples 250000, expected error 0.00102400, confidence level 99.99994267%
# Testing   0-bit keys.......... not ok! # worst-bit:   0.730% error-ratio: 1.013133e+00
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |pct diff from 50%: abs((0.5-(changed/reps))*2) *100|
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |................................................................|
# seed     0.1 |.1..............................................................|
# seed     1.0 |.............1..................................................|
# seed     1.1 |..........1.....................................................|
# seed     2.0 |...............11...............................................|
# seed     2.1 |........................1..................1....................|
# seed     3.0 |.............................1..................................|
# seed     3.1 |.........................................1......................|
# seed     4.0 |................................................................| x 2
# seed     4.1 |................................................................| x 2
# seed     6.0 |...............................1................................|
# seed     6.1 |...................1............................................|
# seed     7.0 |................................................................|
# seed     7.1 |.......1...........1............................................|
# seed     8.0 |...............1................................................|
# seed     8.1 |.....1....1.........1................1..........................|
# seed     9.0 |...........................1.1..................................|
# seed     9.1 |................................1...............................|
# seed    10.0 |.......1........................................................|
# seed    10.1 |................................................................| x 2
# seed    11.0 |................................................................| x 7
# seed    12.1 |..........1...............1.....................................|
# seed    13.1 |................1................1..............................|
# seed    14.1 |.....................1..........................................|
# seed    15.1 |................................................................| x 2
# seed    17.1 |.......1........................1.......................1.......|
# seed    18.0 |.............................1..................................|
# seed    18.1 |........................1..........................1............|
# seed    19.0 |.......1........................................................|
# seed    19.1 |.................1......1.....................1.................|
# seed    20.0 |................................................................|
# seed    20.1 |........................1..1............................1.......|
# seed    21.0 |....1...........................................................|
# seed    21.1 |........................1.......................................|
# seed    22.0 |................................................................| x 4
# seed    22.1 |..........1........................................1............|
# seed    23.1 |..........1.....................................................|
# seed    24.1 |.........................................1......................|
# seed    25.1 |................................................................|
# seed    26.0 |.............................1..................................|
# seed    26.1 |..........................1.....................................|
# seed    27.0 |................................................................| x 2
# seed    27.1 |..............................1.................................|
# seed    28.1 |........................1.......................................| x 2
# seed    29.0 |......1.........................................................|
# seed    30.0 |.............1..............1...................................|
# seed    30.1 |...1......................11..............1.....................|
# seed    31.0 |...............1....................1...........................|
# seed    31.1 |..........................1.....1...............................|
# seed    32.0 |...............1.....................................1..........|
# seed    32.1 |................................................................| x 2
# seed    33.0 |...........1....................................................|
# seed    34.0 |................................................................|
# seed    34.1 |................................................1...............|
# seed    35.0 |....................1...........................................|
# seed    35.1 |..........1......................1..............................|
# seed    36.0 |................................................................| x 2
# seed    36.1 |................................................................| x 2
# seed    38.0 |....................1...........................................|
# seed    38.1 |........................................................1.......|
# seed    39.0 |...........................1....................................|
# seed    39.1 |..........1.....................................................|
# seed    40.0 |................................................................| x 3
# seed    40.1 |................................................................|
# seed    41.1 |..........1.....................................................|
# seed    42.1 |................................................................| x 2
# seed    43.0 |.....1..........................................................|
# seed    44.0 |................................................................| x 2
# seed    44.1 |..........1..................1..................................|
# seed    45.1 |................................................................|
# seed    46.0 |.......1.............................................1..........|
# seed    46.1 |.................................1..............................|
# seed    47.0 |...............1................................................|
# seed    47.1 |..........1.....................................................|
# seed    48.0 |................................................................| x 2
# seed    48.1 |....1...................1.......................................|
# seed    49.1 |........................1.......................................|
# seed    50.0 |...............1................................................|
# seed    50.1 |................................................................| x 2
# seed    51.0 |................................................................| x 13
# seed    52.1 |..........1.....................................................|
# seed    53.1 |................................................................| x 2
# seed    55.1 |...........................................................1....|
# seed    56.1 |....1.....1...............1.....................................|
# seed    57.1 |................................................................|
# seed    58.1 |...................1............................................|
# seed    59.1 |................................................................|
# seed    60.1 |................1...............................................|
# seed    61.1 |...........1....................................................|
# seed    62.1 |.1..............................................................|
# seed    63.1 |................................................................|
#              +-------------------------------------------------------------------+
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |scaled p-value above confidence level (zero is ok) |
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |................................................................| x 64
# seed     0.1 |................................................................| x 64
#              +-------------------------------------------------------------------+
# 0 of 8192 bits failed (0.00%) failed at 99.999943 confidence
#     g-test: 0.000000%
#     sum-error-square: 0.00103745
#     hash bit-level errors: 2/128
#     - hash bit 7 gtest-prob not-random: 100.0000 (7989069/8010931)
#     - hash bit 29 gtest-prob not-random: 100.0000 (8010245/7989755)
not ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.777% error-ratio: 9.900580e-01
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.784% error-ratio: 9.991025e-01
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.818% error-ratio: 1.014187e+00
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.798% error-ratio: 9.912741e-01
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.747% error-ratio: 1.011758e+00
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.724% error-ratio: 9.910332e-01
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.891% error-ratio: 9.859526e-01
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.863% error-ratio: 1.009900e+00
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.791% error-ratio: 1.010037e+00
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.756% error-ratio: 1.000914e+00
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.808% error-ratio: 1.015476e+00
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.787% error-ratio: 9.972564e-01
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.837% error-ratio: 1.020558e+00
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.828% error-ratio: 9.750091e-01
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.790% error-ratio: 1.004341e+00
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.799% error-ratio: 1.016676e+00
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.776% error-ratio: 1.009349e+00
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.778% error-ratio: 9.920940e-01
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.850% error-ratio: 9.913122e-01
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.801% error-ratio: 1.005978e+00
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.900% error-ratio: 1.002471e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
not ok 40 - Strict Avalanche Criteria # metrohash128crc_1
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # metrohash128crc_1
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # metrohash128crc_1
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # metrohash128crc_1
# Keyset 'CRC-MultiCollision' - 100000 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # metrohash128crc_1
# Testing collisions   - Expected     0.00, actual    99999 - ALL keys were in collision - failed
not ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # metrohash128crc_1
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # metrohash128crc_1
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # metrohash128crc_1
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # metrohash128crc_1
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # metrohash128crc_1
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # metrohash128crc_1
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # metrohash128crc_1
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # metrohash128crc_1
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # metrohash128crc_1
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # metrohash128crc_1
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # metrohash128crc_1
not ok 130 - all tests passed # metrohash128crc_1
1..130
# Tests Failed. metrohash128crc_1 failed 13 of 130 tests.
# Testing took 2580.992299 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
