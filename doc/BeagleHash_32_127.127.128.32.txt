ok 1 - Found Hash # BeagleHash_32_127
###################################################################
### Testing BeagleHash_32_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_127
# BeagleHash_32_127    - Verification value 0xA226EF3D : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_127
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_127
ok 5 - Sanity Test # BeagleHash_32_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.901 bytes/cycle - 5440.19 MiB/sec @ 3 ghz
# Alignment  6 -  1.902 bytes/cycle - 5440.48 MiB/sec @ 3 ghz
# Alignment  5 -  1.902 bytes/cycle - 5440.75 MiB/sec @ 3 ghz
# Alignment  4 -  1.901 bytes/cycle - 5439.91 MiB/sec @ 3 ghz
# Alignment  3 -  1.901 bytes/cycle - 5440.18 MiB/sec @ 3 ghz
# Alignment  2 -  1.901 bytes/cycle - 5439.85 MiB/sec @ 3 ghz
# Alignment  1 -  1.790 bytes/cycle - 5121.84 MiB/sec @ 3 ghz
# Alignment  0 -  1.921 bytes/cycle - 5495.19 MiB/sec @ 3 ghz
# Average      -  1.890 bytes/cycle - 5407.30 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_127         0 byte keys       19.956 c/h
# BeagleHash_32_127         1 byte keys       32.237 c/h       32.237 c/b        0.031 b/c
# BeagleHash_32_127         2 byte keys       36.000 c/h       18.000 c/b        0.056 b/c
# BeagleHash_32_127         3 byte keys       37.000 c/h       12.333 c/b        0.081 b/c
# BeagleHash_32_127         4 byte keys       38.000 c/h        9.500 c/b        0.105 b/c
# BeagleHash_32_127         5 byte keys       38.000 c/h        7.600 c/b        0.132 b/c
# BeagleHash_32_127         6 byte keys       38.000 c/h        6.333 c/b        0.158 b/c
# BeagleHash_32_127         7 byte keys       38.000 c/h        5.429 c/b        0.184 b/c
# BeagleHash_32_127         8 byte keys       47.924 c/h        5.991 c/b        0.167 b/c
# BeagleHash_32_127         9 byte keys       48.195 c/h        5.355 c/b        0.187 b/c
# BeagleHash_32_127        10 byte keys       47.899 c/h        4.790 c/b        0.209 b/c
# BeagleHash_32_127        11 byte keys       47.696 c/h        4.336 c/b        0.231 b/c
# BeagleHash_32_127        12 byte keys       47.541 c/h        3.962 c/b        0.252 b/c
# BeagleHash_32_127        13 byte keys       47.769 c/h        3.675 c/b        0.272 b/c
# BeagleHash_32_127        14 byte keys       47.000 c/h        3.357 c/b        0.298 b/c
# BeagleHash_32_127        15 byte keys       47.000 c/h        3.133 c/b        0.319 b/c
# BeagleHash_32_127        16 byte keys       50.000 c/h        3.125 c/b        0.320 b/c
# BeagleHash_32_127        17 byte keys       50.682 c/h        2.981 c/b        0.335 b/c
# BeagleHash_32_127        18 byte keys       50.840 c/h        2.824 c/b        0.354 b/c
# BeagleHash_32_127        19 byte keys       50.000 c/h        2.632 c/b        0.380 b/c
# BeagleHash_32_127        20 byte keys       50.000 c/h        2.500 c/b        0.400 b/c
# BeagleHash_32_127        21 byte keys       50.622 c/h        2.411 c/b        0.415 b/c
# BeagleHash_32_127        22 byte keys       50.555 c/h        2.298 c/b        0.435 b/c
# BeagleHash_32_127        23 byte keys       50.000 c/h        2.174 c/b        0.460 b/c
# BeagleHash_32_127        24 byte keys       57.307 c/h        2.388 c/b        0.419 b/c
# BeagleHash_32_127        25 byte keys       56.755 c/h        2.270 c/b        0.440 b/c
# BeagleHash_32_127        26 byte keys       56.851 c/h        2.187 c/b        0.457 b/c
# BeagleHash_32_127        27 byte keys       56.000 c/h        2.074 c/b        0.482 b/c
# BeagleHash_32_127        28 byte keys       56.929 c/h        2.033 c/b        0.492 b/c
# BeagleHash_32_127        29 byte keys       56.395 c/h        1.945 c/b        0.514 b/c
# BeagleHash_32_127        30 byte keys       56.442 c/h        1.881 c/b        0.532 b/c
# BeagleHash_32_127        31 byte keys       55.985 c/h        1.806 c/b        0.554 b/c
#                          Average < 32       47.299 c/h        3.052 c/b        0.328 b/c
# BeagleHash_32_127        32 byte keys       59.216 c/h        1.851 c/b        0.540 b/c
# BeagleHash_32_127        36 byte keys       59.141 c/h        1.643 c/b        0.609 b/c
# BeagleHash_32_127        40 byte keys       65.534 c/h        1.638 c/b        0.610 b/c
# BeagleHash_32_127        44 byte keys       65.432 c/h        1.487 c/b        0.672 b/c
# BeagleHash_32_127        48 byte keys       67.000 c/h        1.396 c/b        0.716 b/c
# BeagleHash_32_127        52 byte keys       66.730 c/h        1.283 c/b        0.779 b/c
# BeagleHash_32_127        56 byte keys       71.959 c/h        1.285 c/b        0.778 b/c
# BeagleHash_32_127        60 byte keys       72.000 c/h        1.200 c/b        0.833 b/c
# BeagleHash_32_127        64 byte keys       73.991 c/h        1.156 c/b        0.865 b/c
# BeagleHash_32_127        68 byte keys       74.789 c/h        1.100 c/b        0.909 b/c
# BeagleHash_32_127        72 byte keys       79.995 c/h        1.111 c/b        0.900 b/c
# BeagleHash_32_127        76 byte keys       79.917 c/h        1.052 c/b        0.951 b/c
# BeagleHash_32_127        80 byte keys       82.252 c/h        1.028 c/b        0.973 b/c
# BeagleHash_32_127        84 byte keys       81.999 c/h        0.976 c/b        1.024 b/c
# BeagleHash_32_127        88 byte keys       88.539 c/h        1.006 c/b        0.994 b/c
# BeagleHash_32_127        92 byte keys       89.265 c/h        0.970 c/b        1.031 b/c
# BeagleHash_32_127        96 byte keys       91.998 c/h        0.958 c/b        1.044 b/c
# BeagleHash_32_127       100 byte keys       91.750 c/h        0.917 c/b        1.090 b/c
# BeagleHash_32_127       104 byte keys       97.930 c/h        0.942 c/b        1.062 b/c
# BeagleHash_32_127       108 byte keys       98.787 c/h        0.915 c/b        1.093 b/c
# BeagleHash_32_127       112 byte keys      100.933 c/h        0.901 c/b        1.110 b/c
# BeagleHash_32_127       116 byte keys      100.009 c/h        0.862 c/b        1.160 b/c
# BeagleHash_32_127       120 byte keys      106.366 c/h        0.886 c/b        1.128 b/c
# BeagleHash_32_127       124 byte keys      107.482 c/h        0.867 c/b        1.154 b/c
#                         Average < 128       62.261 c/h        1.472 c/b        0.679 b/c
# BeagleHash_32_127       128 byte keys      110.958 c/h        0.867 c/b        1.154 b/c
# BeagleHash_32_127       256 byte keys      153.593 c/h        0.600 c/b        1.667 b/c
# BeagleHash_32_127       512 byte keys      302.353 c/h        0.591 c/b        1.693 b/c
# BeagleHash_32_127      1024 byte keys      570.174 c/h        0.557 c/b        1.796 b/c
# BeagleHash_32_127      2048 byte keys     1105.927 c/h        0.540 c/b        1.852 b/c
# BeagleHash_32_127      4096 byte keys     2167.633 c/h        0.529 c/b        1.890 b/c
# BeagleHash_32_127      8192 byte keys     4299.915 c/h        0.525 c/b        1.905 b/c
# BeagleHash_32_127     16384 byte keys     8562.477 c/h        0.523 c/b        1.913 b/c
# BeagleHash_32_127     32768 byte keys    17105.463 c/h        0.522 c/b        1.916 b/c
# BeagleHash_32_127     65536 byte keys    34149.462 c/h        0.521 c/b        1.919 b/c
#                       Overall Average     1091.130 c/h        0.540 c/b        1.851 b/c
ok 6 - Speed (always passes) # BeagleHash_32_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_127
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_127
# 2 total collisions, of which 2 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_127
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_127
# 3 total collisions, of which 3 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_127
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_127
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 1.009703e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.394% error-ratio: 9.811772e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.424% error-ratio: 1.013815e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.368% error-ratio: 9.767280e-01
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.367% error-ratio: 1.026790e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 1.002302e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.344% error-ratio: 9.865198e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.369% error-ratio: 1.001263e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 1.018667e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.365% error-ratio: 9.911286e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.380% error-ratio: 1.015661e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.355% error-ratio: 9.977784e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 1.003266e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.412% error-ratio: 1.017094e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.448% error-ratio: 9.887718e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.379% error-ratio: 9.920102e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.445% error-ratio: 1.007579e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.398% error-ratio: 1.006677e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.407% error-ratio: 1.021867e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.427% error-ratio: 1.002692e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.405% error-ratio: 9.910152e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.399% error-ratio: 1.004807e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.015592e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.375% error-ratio: 9.944959e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
# Testing 520-bit keys.......... ok.     # worst-bit:   0.416% error-ratio: 1.016630e+00
ok 41 - Strict Avalanche Criteria - 520 bit keys
ok 42 - Strict Avalanche Criteria # BeagleHash_32_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11558 ( 0.99x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11677 ( 1.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11637 ( 1.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11770 ( 1.01x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11485 ( 0.99x) - passed
ok 51 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 53 - Keyset 'Cyclic' # BeagleHash_32_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       45 ( 0.91x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3437 ( 0.99x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40074 ( 0.99x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227027 ( 1.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866579 ( 0.99x) - passed
ok 62 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 64 - Keyset 'TwoBytes' # BeagleHash_32_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      141 ( 0.92x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2411 ( 0.98x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      441 ( 1.02x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2005 ( 0.97x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     8088 ( 1.01x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1343 ( 0.96x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      929 ( 1.02x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      494 ( 0.96x) - passed
ok 79 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 81 - Keyset 'Sparse' # BeagleHash_32_127
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 91 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_32_127
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      133 ( 1.04x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      144 ( 1.13x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 101 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      146 ( 1.14x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      112 ( 0.88x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      104 ( 0.81x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 111 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      155 ( 1.21x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      148 ( 1.16x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      118 ( 0.92x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 131 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_32_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_32_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42311 ( 0.99x) - passed
ok 142 - Collision Rate for Keyset 'Combination Lowbits'
ok 143 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 144 - Keyset 'Combination Lowbits' # BeagleHash_32_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42623 ( 1.00x) - passed
ok 145 - Collision Rate for Keyset 'Combination Highbits'
ok 146 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 147 - Keyset 'Combination Highbits' # BeagleHash_32_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42267 ( 0.99x) - passed
ok 148 - Collision Rate for Keyset 'Combination Highbits2'
ok 149 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 150 - Keyset 'Combination Highbits2' # BeagleHash_32_127
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      468 ( 0.91x) - passed
ok 151 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 152 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 153 - Keyset 'Combination HiBit-Null' # BeagleHash_32_127
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      545 ( 1.06x) - passed
ok 154 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 155 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 156 - Keyset 'Combination LowBit-Null' # BeagleHash_32_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17522 ( 1.01x) - passed
ok 157 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 158 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 159 - Keyset 'Combination Hi-Lo' # BeagleHash_32_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25179 ( 0.99x) - passed
ok 160 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 161 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25530 ( 1.00x) - passed
ok 162 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 163 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25801 ( 1.02x) - passed
ok 164 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 166 - Keyset 'Text' # BeagleHash_32_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        6 ( 0.75x) - passed
ok 167 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 168 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 169 - Keyset 'Zeroes' # BeagleHash_32_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      438 ( 0.94x) - passed
ok 170 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 171 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      485 ( 1.04x) - passed
ok 172 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 173 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      477 ( 1.02x) - passed
ok 174 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 175 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      468 ( 1.01x) - passed
ok 176 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Keyset 'Seed' # BeagleHash_32_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual        9 ( 1.13x) - passed
ok 179 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 180 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 181 - Keyset 'Effs' # BeagleHash_32_127
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual       10 ( 0.97x) - passed
ok 182 - Collision Rate for Keyset 'Words'
ok 183 - Distribution Bias Check for Keyset 'Words'
ok 184 - all tests passed # BeagleHash_32_127
1..184
# All Tests Passed. BeagleHash_32_127 passed all 184 tests run.
# Testing took 2094.243948 seconds
# This is SMHasher version v1.1-demerphq-39-g8a22d76 - built on Mar 17 2017.
