ok 1 - Found Hash # BeagleHash_64_127
###################################################################
### Testing BeagleHash_64_127 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 127 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_127
# BeagleHash_64_127    - Verification value 0x8B14262C : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency - hashbytes=8..........
ok 3 - SanityTest # BeagleHash_64_127
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_127
ok 5 - Sanity Test # BeagleHash_64_127
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.873 bytes/cycle - 5357.98 MiB/sec @ 3 ghz
# Alignment  6 -  1.873 bytes/cycle - 5357.79 MiB/sec @ 3 ghz
# Alignment  5 -  1.873 bytes/cycle - 5357.59 MiB/sec @ 3 ghz
# Alignment  4 -  1.873 bytes/cycle - 5357.92 MiB/sec @ 3 ghz
# Alignment  3 -  1.873 bytes/cycle - 5357.73 MiB/sec @ 3 ghz
# Alignment  2 -  1.868 bytes/cycle - 5345.60 MiB/sec @ 3 ghz
# Alignment  1 -  1.873 bytes/cycle - 5357.73 MiB/sec @ 3 ghz
# Alignment  0 -  1.887 bytes/cycle - 5399.95 MiB/sec @ 3 ghz
# Average      -  1.874 bytes/cycle - 5361.54 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_127         0 byte keys       19.000 c/h
# BeagleHash_64_127         1 byte keys       31.245 c/h       31.245 c/b        0.032 b/c
# BeagleHash_64_127         2 byte keys       34.998 c/h       17.499 c/b        0.057 b/c
# BeagleHash_64_127         3 byte keys       36.000 c/h       12.000 c/b        0.083 b/c
# BeagleHash_64_127         4 byte keys       37.000 c/h        9.250 c/b        0.108 b/c
# BeagleHash_64_127         5 byte keys       38.000 c/h        7.600 c/b        0.132 b/c
# BeagleHash_64_127         6 byte keys       39.962 c/h        6.660 c/b        0.150 b/c
# BeagleHash_64_127         7 byte keys       40.000 c/h        5.714 c/b        0.175 b/c
# BeagleHash_64_127         8 byte keys       37.000 c/h        4.625 c/b        0.216 b/c
# BeagleHash_64_127         9 byte keys       37.285 c/h        4.143 c/b        0.241 b/c
# BeagleHash_64_127        10 byte keys       37.000 c/h        3.700 c/b        0.270 b/c
# BeagleHash_64_127        11 byte keys       37.000 c/h        3.364 c/b        0.297 b/c
# BeagleHash_64_127        12 byte keys       37.000 c/h        3.083 c/b        0.324 b/c
# BeagleHash_64_127        13 byte keys       37.000 c/h        2.846 c/b        0.351 b/c
# BeagleHash_64_127        14 byte keys       37.000 c/h        2.643 c/b        0.378 b/c
# BeagleHash_64_127        15 byte keys       37.172 c/h        2.478 c/b        0.404 b/c
# BeagleHash_64_127        16 byte keys       39.000 c/h        2.438 c/b        0.410 b/c
# BeagleHash_64_127        17 byte keys       39.000 c/h        2.294 c/b        0.436 b/c
# BeagleHash_64_127        18 byte keys       39.000 c/h        2.167 c/b        0.462 b/c
# BeagleHash_64_127        19 byte keys       39.000 c/h        2.053 c/b        0.487 b/c
# BeagleHash_64_127        20 byte keys       39.000 c/h        1.950 c/b        0.513 b/c
# BeagleHash_64_127        21 byte keys       39.000 c/h        1.857 c/b        0.538 b/c
# BeagleHash_64_127        22 byte keys       39.388 c/h        1.790 c/b        0.559 b/c
# BeagleHash_64_127        23 byte keys       39.000 c/h        1.696 c/b        0.590 b/c
# BeagleHash_64_127        24 byte keys       45.304 c/h        1.888 c/b        0.530 b/c
# BeagleHash_64_127        25 byte keys       45.997 c/h        1.840 c/b        0.544 b/c
# BeagleHash_64_127        26 byte keys       45.776 c/h        1.761 c/b        0.568 b/c
# BeagleHash_64_127        27 byte keys       45.874 c/h        1.699 c/b        0.589 b/c
# BeagleHash_64_127        28 byte keys       45.990 c/h        1.643 c/b        0.609 b/c
# BeagleHash_64_127        29 byte keys       46.000 c/h        1.586 c/b        0.630 b/c
# BeagleHash_64_127        30 byte keys       45.998 c/h        1.533 c/b        0.652 b/c
# BeagleHash_64_127        31 byte keys       45.978 c/h        1.483 c/b        0.674 b/c
#                          Average < 32       39.124 c/h        2.524 c/b        0.396 b/c
# BeagleHash_64_127        32 byte keys       47.952 c/h        1.498 c/b        0.667 b/c
# BeagleHash_64_127        36 byte keys       47.996 c/h        1.333 c/b        0.750 b/c
# BeagleHash_64_127        40 byte keys       54.000 c/h        1.350 c/b        0.741 b/c
# BeagleHash_64_127        44 byte keys       53.953 c/h        1.226 c/b        0.816 b/c
# BeagleHash_64_127        48 byte keys       56.519 c/h        1.177 c/b        0.849 b/c
# BeagleHash_64_127        52 byte keys       55.961 c/h        1.076 c/b        0.929 b/c
# BeagleHash_64_127        56 byte keys       62.097 c/h        1.109 c/b        0.902 b/c
# BeagleHash_64_127        60 byte keys       61.969 c/h        1.033 c/b        0.968 b/c
# BeagleHash_64_127        64 byte keys       63.191 c/h        0.987 c/b        1.013 b/c
# BeagleHash_64_127        68 byte keys       63.964 c/h        0.941 c/b        1.063 b/c
# BeagleHash_64_127        72 byte keys       69.880 c/h        0.971 c/b        1.030 b/c
# BeagleHash_64_127        76 byte keys       70.719 c/h        0.931 c/b        1.075 b/c
# BeagleHash_64_127        80 byte keys       71.569 c/h        0.895 c/b        1.118 b/c
# BeagleHash_64_127        84 byte keys       72.868 c/h        0.867 c/b        1.153 b/c
# BeagleHash_64_127        88 byte keys       78.947 c/h        0.897 c/b        1.115 b/c
# BeagleHash_64_127        92 byte keys       78.516 c/h        0.853 c/b        1.172 b/c
# BeagleHash_64_127        96 byte keys       80.881 c/h        0.843 c/b        1.187 b/c
# BeagleHash_64_127       100 byte keys       80.904 c/h        0.809 c/b        1.236 b/c
# BeagleHash_64_127       104 byte keys       86.996 c/h        0.836 c/b        1.195 b/c
# BeagleHash_64_127       108 byte keys       89.177 c/h        0.826 c/b        1.211 b/c
# BeagleHash_64_127       112 byte keys       89.876 c/h        0.802 c/b        1.246 b/c
# BeagleHash_64_127       116 byte keys       90.056 c/h        0.776 c/b        1.288 b/c
# BeagleHash_64_127       120 byte keys       96.395 c/h        0.803 c/b        1.245 b/c
# BeagleHash_64_127       124 byte keys       95.899 c/h        0.773 c/b        1.293 b/c
#                         Average < 128       53.076 c/h        1.255 c/b        0.797 b/c
# BeagleHash_64_127       128 byte keys       98.290 c/h        0.768 c/b        1.302 b/c
# BeagleHash_64_127       256 byte keys      148.846 c/h        0.581 c/b        1.720 b/c
# BeagleHash_64_127       512 byte keys      283.923 c/h        0.555 c/b        1.803 b/c
# BeagleHash_64_127      1024 byte keys      555.146 c/h        0.542 c/b        1.845 b/c
# BeagleHash_64_127      2048 byte keys     1117.069 c/h        0.545 c/b        1.833 b/c
# BeagleHash_64_127      4096 byte keys     2201.627 c/h        0.538 c/b        1.860 b/c
# BeagleHash_64_127      8192 byte keys     4370.340 c/h        0.533 c/b        1.874 b/c
# BeagleHash_64_127     16384 byte keys     8708.850 c/h        0.532 c/b        1.881 b/c
# BeagleHash_64_127     32768 byte keys    17388.236 c/h        0.531 c/b        1.884 b/c
# BeagleHash_64_127     65536 byte keys    34759.584 c/h        0.530 c/b        1.885 b/c
#                       Overall Average     1100.063 c/h        0.545 c/b        1.836 b/c
ok 6 - Speed (always passes) # BeagleHash_64_127
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_127
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_127
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_127
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_127
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_127
### Avalanche Tests ### - seed-bits: 127 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.602% error-ratio: 9.976487e-01
ok 17 - Strict Avalanche Criteria - 0 bit/0 byte keys # BeagleHash_64_127
# Testing   8-bit keys.......... ok.     # worst-bit:   0.536% error-ratio: 9.988755e-01
ok 18 - Strict Avalanche Criteria - 8 bit/1 byte keys # BeagleHash_64_127
# Testing  16-bit keys.......... ok.     # worst-bit:   0.642% error-ratio: 9.884613e-01
ok 19 - Strict Avalanche Criteria - 16 bit/2 byte keys # BeagleHash_64_127
# Testing  24-bit keys.......... ok.     # worst-bit:   0.531% error-ratio: 1.004460e+00
ok 20 - Strict Avalanche Criteria - 24 bit/3 byte keys # BeagleHash_64_127
# Testing  32-bit keys.......... ok.     # worst-bit:   0.524% error-ratio: 9.974631e-01
ok 21 - Strict Avalanche Criteria - 32 bit/4 byte keys # BeagleHash_64_127
# Testing  40-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.014295e+00
ok 22 - Strict Avalanche Criteria - 40 bit/5 byte keys # BeagleHash_64_127
# Testing  48-bit keys.......... ok.     # worst-bit:   0.546% error-ratio: 9.985563e-01
ok 23 - Strict Avalanche Criteria - 48 bit/6 byte keys # BeagleHash_64_127
# Testing  56-bit keys.......... ok.     # worst-bit:   0.679% error-ratio: 9.933946e-01
ok 24 - Strict Avalanche Criteria - 56 bit/7 byte keys # BeagleHash_64_127
# Testing  64-bit keys.......... ok.     # worst-bit:   0.516% error-ratio: 9.864569e-01
ok 25 - Strict Avalanche Criteria - 64 bit/8 byte keys # BeagleHash_64_127
# Testing  72-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.011565e+00
ok 26 - Strict Avalanche Criteria - 72 bit/9 byte keys # BeagleHash_64_127
# Testing  80-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 1.002614e+00
ok 27 - Strict Avalanche Criteria - 80 bit/10 byte keys # BeagleHash_64_127
# Testing  88-bit keys.......... ok.     # worst-bit:   0.515% error-ratio: 1.003103e+00
ok 28 - Strict Avalanche Criteria - 88 bit/11 byte keys # BeagleHash_64_127
# Testing  96-bit keys.......... ok.     # worst-bit:   0.574% error-ratio: 1.019961e+00
ok 29 - Strict Avalanche Criteria - 96 bit/12 byte keys # BeagleHash_64_127
# Testing 104-bit keys.......... ok.     # worst-bit:   0.654% error-ratio: 9.785906e-01
ok 30 - Strict Avalanche Criteria - 104 bit/13 byte keys # BeagleHash_64_127
# Testing 112-bit keys.......... ok.     # worst-bit:   0.566% error-ratio: 1.015415e+00
ok 31 - Strict Avalanche Criteria - 112 bit/14 byte keys # BeagleHash_64_127
# Testing 120-bit keys.......... ok.     # worst-bit:   0.541% error-ratio: 9.985964e-01
ok 32 - Strict Avalanche Criteria - 120 bit/15 byte keys # BeagleHash_64_127
# Testing 128-bit keys.......... ok.     # worst-bit:   0.543% error-ratio: 1.010173e+00
ok 33 - Strict Avalanche Criteria - 128 bit/16 byte keys # BeagleHash_64_127
# Testing 136-bit keys.......... ok.     # worst-bit:   0.604% error-ratio: 1.015565e+00
ok 34 - Strict Avalanche Criteria - 136 bit/17 byte keys # BeagleHash_64_127
# Testing 144-bit keys.......... ok.     # worst-bit:   0.548% error-ratio: 9.894717e-01
ok 35 - Strict Avalanche Criteria - 144 bit/18 byte keys # BeagleHash_64_127
# Testing 152-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.005023e+00
ok 36 - Strict Avalanche Criteria - 152 bit/19 byte keys # BeagleHash_64_127
# Testing 152-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 9.869635e-01
ok 37 - Strict Avalanche Criteria - 152 bit/19 byte keys # BeagleHash_64_127
# Testing 200-bit keys.......... ok.     # worst-bit:   0.572% error-ratio: 9.873293e-01
ok 38 - Strict Avalanche Criteria - 200 bit/25 byte keys # BeagleHash_64_127
# Testing 256-bit keys.......... ok.     # worst-bit:   0.628% error-ratio: 9.962527e-01
ok 39 - Strict Avalanche Criteria - 256 bit/32 byte keys # BeagleHash_64_127
# Testing 512-bit keys.......... ok.     # worst-bit:   0.585% error-ratio: 9.923327e-01
ok 40 - Strict Avalanche Criteria - 512 bit/64 byte keys # BeagleHash_64_127
# Testing 520-bit keys.......... ok.     # worst-bit:   0.569% error-ratio: 1.002958e+00
ok 41 - Strict Avalanche Criteria - 520 bit/65 byte keys # BeagleHash_64_127
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_64_127
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_64_127
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_64_127
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_64_127
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 131 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_64_127
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_64_127
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'Combination Lowbits'
ok 142 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 143 - Keyset 'Combination Lowbits' # BeagleHash_64_127
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 144 - Collision Rate for Keyset 'Combination Highbits'
ok 145 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 146 - Keyset 'Combination Highbits' # BeagleHash_64_127
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 147 - Collision Rate for Keyset 'Combination Highbits2'
ok 148 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 149 - Keyset 'Combination Highbits2' # BeagleHash_64_127
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 150 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 151 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 152 - Keyset 'Combination HiBit-Null' # BeagleHash_64_127
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 153 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 154 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 155 - Keyset 'Combination LowBit-Null' # BeagleHash_64_127
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 156 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 157 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 158 - Keyset 'Combination Hi-Lo' # BeagleHash_64_127
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 159 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 160 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 161 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 162 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 163 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 164 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Keyset 'Text' # BeagleHash_64_127
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys, zero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 166 - Collision Rate for Keyset 'Zeroes' - 262144 keys, zero seed
ok 167 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys, zero seed
# Keyset 'Zeroes' - 262144 keys, nonzero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 168 - Collision Rate for Keyset 'Zeroes' - 262144 keys, nonzero seed
ok 169 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys, nonzero seed
ok 170 - Keyset 'Zeroes' # BeagleHash_64_127
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 171 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 172 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 173 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 174 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 175 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 176 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 177 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 179 - Keyset 'Seed' # BeagleHash_64_127
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys, zero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 180 - Collision Rate for Keyset 'Effs' - 262144 keys, zero seed
ok 181 - Distribution Bias Check for Keyset 'Effs' - 262144 keys, zero seed
# Keyset 'Effs' - 262144 keys, nonzero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 182 - Collision Rate for Keyset 'Effs' - 262144 keys, nonzero seed
ok 183 - Distribution Bias Check for Keyset 'Effs' - 262144 keys, nonzero seed
ok 184 - Keyset 'Effs' # BeagleHash_64_127
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 185 - Collision Rate for Keyset 'Words'
ok 186 - Distribution Bias Check for Keyset 'Words'
ok 187 - all tests passed # BeagleHash_64_127
1..187
# All Tests Passed. BeagleHash_64_127 passed all 187 tests run.
# Testing took 2248.443654 seconds
# This is SMHasher version v1.3-demerphq-7-geee7fbf - built on Dec 15 2017.
