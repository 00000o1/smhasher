ok 1 - Found Hash # Zaphod64
###################################################################
### Testing Zaphod64 - with seed_state
### - Evolved hash with 192-bit state (3x64) - Yves Orton -
### seedbits: 191 statebits: 192 hashbits: 64
###################################################################
ok 2 - Verification code # Zaphod64
# Zaphod64             - Verification value 0xDD90BE2E : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # Zaphod64
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # Zaphod64
ok 5 - Sanity Test # Zaphod64
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  2.232 bytes/cycle - 6386.88 MiB/sec @ 3 ghz
# Alignment  6 -  2.244 bytes/cycle - 6420.36 MiB/sec @ 3 ghz
# Alignment  5 -  2.244 bytes/cycle - 6420.25 MiB/sec @ 3 ghz
# Alignment  4 -  2.244 bytes/cycle - 6420.15 MiB/sec @ 3 ghz
# Alignment  3 -  2.244 bytes/cycle - 6420.20 MiB/sec @ 3 ghz
# Alignment  2 -  2.225 bytes/cycle - 6366.04 MiB/sec @ 3 ghz
# Alignment  1 -  2.225 bytes/cycle - 6365.33 MiB/sec @ 3 ghz
# Alignment  0 -  2.244 bytes/cycle - 6420.70 MiB/sec @ 3 ghz
# Average      -  2.238 bytes/cycle - 6402.49 MiB/sec @ 3 ghz
## KeySpeed tests
# Zaphod64                  0 byte keys       18.000 c/h
# Zaphod64                  1 byte keys       24.734 c/h       24.734 c/b        0.040 b/c
# Zaphod64                  2 byte keys       24.804 c/h       12.402 c/b        0.081 b/c
# Zaphod64                  3 byte keys       27.000 c/h        9.000 c/b        0.111 b/c
# Zaphod64                  4 byte keys       24.000 c/h        6.000 c/b        0.167 b/c
# Zaphod64                  5 byte keys       27.000 c/h        5.400 c/b        0.185 b/c
# Zaphod64                  6 byte keys       29.163 c/h        4.861 c/b        0.206 b/c
# Zaphod64                  7 byte keys       30.305 c/h        4.329 c/b        0.231 b/c
# Zaphod64                  8 byte keys       24.000 c/h        3.000 c/b        0.333 b/c
# Zaphod64                  9 byte keys       24.000 c/h        2.667 c/b        0.375 b/c
# Zaphod64                 10 byte keys       24.000 c/h        2.400 c/b        0.417 b/c
# Zaphod64                 11 byte keys       24.687 c/h        2.244 c/b        0.446 b/c
# Zaphod64                 12 byte keys       24.000 c/h        2.000 c/b        0.500 b/c
# Zaphod64                 13 byte keys       24.384 c/h        1.876 c/b        0.533 b/c
# Zaphod64                 14 byte keys       24.873 c/h        1.777 c/b        0.563 b/c
# Zaphod64                 15 byte keys       24.000 c/h        1.600 c/b        0.625 b/c
# Zaphod64                 16 byte keys       31.979 c/h        1.999 c/b        0.500 b/c
# Zaphod64                 17 byte keys       32.287 c/h        1.899 c/b        0.527 b/c
# Zaphod64                 18 byte keys       32.000 c/h        1.778 c/b        0.563 b/c
# Zaphod64                 19 byte keys       33.347 c/h        1.755 c/b        0.570 b/c
# Zaphod64                 20 byte keys       32.941 c/h        1.647 c/b        0.607 b/c
# Zaphod64                 21 byte keys       33.218 c/h        1.582 c/b        0.632 b/c
# Zaphod64                 22 byte keys       33.867 c/h        1.539 c/b        0.650 b/c
# Zaphod64                 23 byte keys       34.000 c/h        1.478 c/b        0.676 b/c
# Zaphod64                 24 byte keys       31.998 c/h        1.333 c/b        0.750 b/c
# Zaphod64                 25 byte keys       31.907 c/h        1.276 c/b        0.784 b/c
# Zaphod64                 26 byte keys       31.948 c/h        1.229 c/b        0.814 b/c
# Zaphod64                 27 byte keys       32.998 c/h        1.222 c/b        0.818 b/c
# Zaphod64                 28 byte keys       32.000 c/h        1.143 c/b        0.875 b/c
# Zaphod64                 29 byte keys       32.669 c/h        1.127 c/b        0.888 b/c
# Zaphod64                 30 byte keys       34.401 c/h        1.147 c/b        0.872 b/c
# Zaphod64                 31 byte keys       34.000 c/h        1.097 c/b        0.912 b/c
#                          Average < 32       28.891 c/h        1.864 c/b        0.537 b/c
# Zaphod64                 32 byte keys       39.054 c/h        1.220 c/b        0.819 b/c
# Zaphod64                 36 byte keys       38.987 c/h        1.083 c/b        0.923 b/c
# Zaphod64                 40 byte keys       39.000 c/h        0.975 c/b        1.026 b/c
# Zaphod64                 44 byte keys       39.000 c/h        0.886 c/b        1.128 b/c
# Zaphod64                 48 byte keys       45.994 c/h        0.958 c/b        1.044 b/c
# Zaphod64                 52 byte keys       46.857 c/h        0.901 c/b        1.110 b/c
# Zaphod64                 56 byte keys       46.000 c/h        0.821 c/b        1.217 b/c
# Zaphod64                 60 byte keys       46.532 c/h        0.776 c/b        1.289 b/c
# Zaphod64                 64 byte keys       53.523 c/h        0.836 c/b        1.196 b/c
# Zaphod64                 68 byte keys       53.000 c/h        0.779 c/b        1.283 b/c
# Zaphod64                 72 byte keys       54.692 c/h        0.760 c/b        1.316 b/c
# Zaphod64                 76 byte keys       54.000 c/h        0.711 c/b        1.407 b/c
# Zaphod64                 80 byte keys       61.383 c/h        0.767 c/b        1.303 b/c
# Zaphod64                 84 byte keys       61.323 c/h        0.730 c/b        1.370 b/c
# Zaphod64                 88 byte keys       60.941 c/h        0.693 c/b        1.444 b/c
# Zaphod64                 92 byte keys       60.954 c/h        0.663 c/b        1.509 b/c
# Zaphod64                 96 byte keys       67.251 c/h        0.701 c/b        1.427 b/c
# Zaphod64                100 byte keys       67.000 c/h        0.670 c/b        1.493 b/c
# Zaphod64                104 byte keys       68.460 c/h        0.658 c/b        1.519 b/c
# Zaphod64                108 byte keys       69.182 c/h        0.641 c/b        1.561 b/c
# Zaphod64                112 byte keys       74.947 c/h        0.669 c/b        1.494 b/c
# Zaphod64                116 byte keys       74.975 c/h        0.646 c/b        1.547 b/c
# Zaphod64                120 byte keys       74.945 c/h        0.625 c/b        1.601 b/c
# Zaphod64                124 byte keys       74.987 c/h        0.605 c/b        1.654 b/c
#                         Average < 128       41.027 c/h        0.970 c/b        1.031 b/c
# Zaphod64                128 byte keys       81.970 c/h        0.640 c/b        1.562 b/c
# Zaphod64                256 byte keys      133.828 c/h        0.523 c/b        1.913 b/c
# Zaphod64                512 byte keys      262.506 c/h        0.513 c/b        1.950 b/c
# Zaphod64               1024 byte keys      492.892 c/h        0.481 c/b        2.078 b/c
# Zaphod64               2048 byte keys      969.517 c/h        0.473 c/b        2.112 b/c
# Zaphod64               4096 byte keys     1871.435 c/h        0.457 c/b        2.189 b/c
# Zaphod64               8192 byte keys     3683.768 c/h        0.450 c/b        2.224 b/c
# Zaphod64              16384 byte keys     7333.117 c/h        0.448 c/b        2.234 b/c
# Zaphod64              32768 byte keys    14628.887 c/h        0.446 c/b        2.240 b/c
# Zaphod64              65536 byte keys    29231.372 c/h        0.446 c/b        2.242 b/c
#                       Overall Average      924.042 c/h        0.457 c/b        2.186 b/c
ok 6 - Speed (always passes) # Zaphod64
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # Zaphod64
ok 8 - Nothing skipped during differential collision check # Zaphod64
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # Zaphod64
ok 11 - Nothing skipped during differential collision check # Zaphod64
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # Zaphod64
ok 14 - Nothing skipped during differential collision check # Zaphod64
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # Zaphod64
### Avalanche Tests ### - seed-bits: 191 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.582% error-ratio: 1.010940e+00
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.533% error-ratio: 1.007021e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.544% error-ratio: 9.856959e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.602% error-ratio: 1.010177e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.645% error-ratio: 1.011300e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.535% error-ratio: 1.001801e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.682% error-ratio: 9.920478e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.638% error-ratio: 9.956713e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.546% error-ratio: 1.011468e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.580% error-ratio: 9.926066e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.645% error-ratio: 9.994973e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.611% error-ratio: 1.007095e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.553% error-ratio: 1.000740e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.560% error-ratio: 1.002099e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.551% error-ratio: 9.837543e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.587% error-ratio: 1.004636e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.595% error-ratio: 1.029508e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.534% error-ratio: 9.960968e-01
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.571% error-ratio: 1.002247e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.604% error-ratio: 9.777263e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.580% error-ratio: 9.998804e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.557% error-ratio: 1.000179e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.548% error-ratio: 9.955472e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.613% error-ratio: 9.977721e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # Zaphod64
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # Zaphod64
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # Zaphod64
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # Zaphod64
### Keyset 'CRC-MultiCollision' Tests ###
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # Zaphod64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # Zaphod64
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # Zaphod64
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # Zaphod64
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # Zaphod64
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 101 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 102 - Keyset 'Combination HiBit-Null' # Zaphod64
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 104 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 105 - Keyset 'Combination LowBit-Null' # Zaphod64
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # Zaphod64
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # Zaphod64
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # Zaphod64
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # Zaphod64
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # Zaphod64
### Keyset 'Words' Tests ###
# Read 99171 lines from /usr/share/dict/words
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 131 - Collision Rate for Keyset 'Words'
ok 132 - Distribution Bias Check for Keyset 'Words'
ok 133 - all tests passed # Zaphod64
1..133
# All Tests Passed. Zaphod64 passed all 133 tests run.
# Testing took 2319.353426 seconds
# This is SMHasher version v1.1-demerphq-5-ged9ad7f - built on Mar 14 2017.
