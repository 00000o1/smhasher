ok 1 - Found Hash # BeagleHash_32_64
###################################################################
### Testing BeagleHash_32_64 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 64 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_64
# BeagleHash_32_64     - Verification value 0x19497BA9 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_64
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_64
ok 5 - Sanity Test # BeagleHash_32_64
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.869 bytes/cycle - 5348.68 MiB/sec @ 3 ghz
# Alignment  6 -  1.877 bytes/cycle - 5369.42 MiB/sec @ 3 ghz
# Alignment  5 -  1.867 bytes/cycle - 5341.20 MiB/sec @ 3 ghz
# Alignment  4 -  1.876 bytes/cycle - 5366.36 MiB/sec @ 3 ghz
# Alignment  3 -  1.882 bytes/cycle - 5383.81 MiB/sec @ 3 ghz
# Alignment  2 -  1.880 bytes/cycle - 5379.06 MiB/sec @ 3 ghz
# Alignment  1 -  1.877 bytes/cycle - 5370.31 MiB/sec @ 3 ghz
# Alignment  0 -  1.892 bytes/cycle - 5411.74 MiB/sec @ 3 ghz
# Average      -  1.877 bytes/cycle - 5371.32 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_64          0 byte keys       17.522 c/h
# BeagleHash_32_64          1 byte keys       31.879 c/h       31.879 c/b        0.031 b/c
# BeagleHash_32_64          2 byte keys       35.718 c/h       17.859 c/b        0.056 b/c
# BeagleHash_32_64          3 byte keys       35.723 c/h       11.908 c/b        0.084 b/c
# BeagleHash_32_64          4 byte keys       36.496 c/h        9.124 c/b        0.110 b/c
# BeagleHash_32_64          5 byte keys       36.291 c/h        7.258 c/b        0.138 b/c
# BeagleHash_32_64          6 byte keys       36.489 c/h        6.082 c/b        0.164 b/c
# BeagleHash_32_64          7 byte keys       36.280 c/h        5.183 c/b        0.193 b/c
# BeagleHash_32_64          8 byte keys       46.000 c/h        5.750 c/b        0.174 b/c
# BeagleHash_32_64          9 byte keys       46.000 c/h        5.111 c/b        0.196 b/c
# BeagleHash_32_64         10 byte keys       46.000 c/h        4.600 c/b        0.217 b/c
# BeagleHash_32_64         11 byte keys       47.321 c/h        4.302 c/b        0.232 b/c
# BeagleHash_32_64         12 byte keys       46.608 c/h        3.884 c/b        0.257 b/c
# BeagleHash_32_64         13 byte keys       47.098 c/h        3.623 c/b        0.276 b/c
# BeagleHash_32_64         14 byte keys       46.000 c/h        3.286 c/b        0.304 b/c
# BeagleHash_32_64         15 byte keys       46.000 c/h        3.067 c/b        0.326 b/c
# BeagleHash_32_64         16 byte keys       49.867 c/h        3.117 c/b        0.321 b/c
# BeagleHash_32_64         17 byte keys       49.000 c/h        2.882 c/b        0.347 b/c
# BeagleHash_32_64         18 byte keys       50.874 c/h        2.826 c/b        0.354 b/c
# BeagleHash_32_64         19 byte keys       50.364 c/h        2.651 c/b        0.377 b/c
# BeagleHash_32_64         20 byte keys       49.936 c/h        2.497 c/b        0.401 b/c
# BeagleHash_32_64         21 byte keys       50.232 c/h        2.392 c/b        0.418 b/c
# BeagleHash_32_64         22 byte keys       50.520 c/h        2.296 c/b        0.435 b/c
# BeagleHash_32_64         23 byte keys       50.860 c/h        2.211 c/b        0.452 b/c
# BeagleHash_32_64         24 byte keys       56.901 c/h        2.371 c/b        0.422 b/c
# BeagleHash_32_64         25 byte keys       56.852 c/h        2.274 c/b        0.440 b/c
# BeagleHash_32_64         26 byte keys       57.005 c/h        2.192 c/b        0.456 b/c
# BeagleHash_32_64         27 byte keys       55.996 c/h        2.074 c/b        0.482 b/c
# BeagleHash_32_64         28 byte keys       57.196 c/h        2.043 c/b        0.490 b/c
# BeagleHash_32_64         29 byte keys       56.000 c/h        1.931 c/b        0.518 b/c
# BeagleHash_32_64         30 byte keys       56.592 c/h        1.886 c/b        0.530 b/c
# BeagleHash_32_64         31 byte keys       55.998 c/h        1.806 c/b        0.554 b/c
#                          Average < 32       46.613 c/h        3.007 c/b        0.333 b/c
# BeagleHash_32_64         32 byte keys       58.864 c/h        1.839 c/b        0.544 b/c
# BeagleHash_32_64         36 byte keys       58.879 c/h        1.636 c/b        0.611 b/c
# BeagleHash_32_64         40 byte keys       65.256 c/h        1.631 c/b        0.613 b/c
# BeagleHash_32_64         44 byte keys       65.400 c/h        1.486 c/b        0.673 b/c
# BeagleHash_32_64         48 byte keys       65.573 c/h        1.366 c/b        0.732 b/c
# BeagleHash_32_64         52 byte keys       66.615 c/h        1.281 c/b        0.781 b/c
# BeagleHash_32_64         56 byte keys       71.000 c/h        1.268 c/b        0.789 b/c
# BeagleHash_32_64         60 byte keys       72.052 c/h        1.201 c/b        0.833 b/c
# BeagleHash_32_64         64 byte keys       74.459 c/h        1.163 c/b        0.860 b/c
# BeagleHash_32_64         68 byte keys       74.770 c/h        1.100 c/b        0.909 b/c
# BeagleHash_32_64         72 byte keys       79.000 c/h        1.097 c/b        0.911 b/c
# BeagleHash_32_64         76 byte keys       81.152 c/h        1.068 c/b        0.937 b/c
# BeagleHash_32_64         80 byte keys       80.999 c/h        1.012 c/b        0.988 b/c
# BeagleHash_32_64         84 byte keys       83.452 c/h        0.993 c/b        1.007 b/c
# BeagleHash_32_64         88 byte keys       88.612 c/h        1.007 c/b        0.993 b/c
# BeagleHash_32_64         92 byte keys       89.672 c/h        0.975 c/b        1.026 b/c
# BeagleHash_32_64         96 byte keys       91.811 c/h        0.956 c/b        1.046 b/c
# BeagleHash_32_64        100 byte keys       92.582 c/h        0.926 c/b        1.080 b/c
# BeagleHash_32_64        104 byte keys       99.343 c/h        0.955 c/b        1.047 b/c
# BeagleHash_32_64        108 byte keys       96.991 c/h        0.898 c/b        1.114 b/c
# BeagleHash_32_64        112 byte keys      101.839 c/h        0.909 c/b        1.100 b/c
# BeagleHash_32_64        116 byte keys       99.597 c/h        0.859 c/b        1.165 b/c
# BeagleHash_32_64        120 byte keys      106.336 c/h        0.886 c/b        1.128 b/c
# BeagleHash_32_64        124 byte keys      105.037 c/h        0.847 c/b        1.181 b/c
#                         Average < 128       61.802 c/h        1.462 c/b        0.684 b/c
# BeagleHash_32_64        128 byte keys      110.774 c/h        0.865 c/b        1.156 b/c
# BeagleHash_32_64        256 byte keys      156.664 c/h        0.612 c/b        1.634 b/c
# BeagleHash_32_64        512 byte keys      300.409 c/h        0.587 c/b        1.704 b/c
# BeagleHash_32_64       1024 byte keys      563.452 c/h        0.550 c/b        1.817 b/c
# BeagleHash_32_64       2048 byte keys     1099.305 c/h        0.537 c/b        1.863 b/c
# BeagleHash_32_64       4096 byte keys     2208.877 c/h        0.539 c/b        1.854 b/c
# BeagleHash_32_64       8192 byte keys     4409.991 c/h        0.538 c/b        1.858 b/c
# BeagleHash_32_64      16384 byte keys     8783.883 c/h        0.536 c/b        1.865 b/c
# BeagleHash_32_64      32768 byte keys    17509.506 c/h        0.534 c/b        1.871 b/c
# BeagleHash_32_64      65536 byte keys    34991.994 c/h        0.534 c/b        1.873 b/c
#                       Overall Average     1115.087 c/h        0.552 c/b        1.811 b/c
ok 6 - Speed (always passes) # BeagleHash_32_64
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_64
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_64
# 2 total collisions, of which 2 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_64
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_64
# 6 total collisions, of which 6 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_64
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_64
# 3 total collisions, of which 3 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_64
### Avalanche Tests ### - seed-bits: 64 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.353% error-ratio: 9.834115e-01
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 9.402381e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.391% error-ratio: 1.013266e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.493% error-ratio: 9.989325e-01
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.344% error-ratio: 9.489146e-01
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.344% error-ratio: 9.945335e-01
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.453% error-ratio: 1.006855e+00
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.383% error-ratio: 1.000872e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.411% error-ratio: 9.981055e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.367% error-ratio: 9.725213e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.367% error-ratio: 9.926779e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.355% error-ratio: 9.819824e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.431% error-ratio: 1.017310e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.420% error-ratio: 9.998923e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.388% error-ratio: 9.999100e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.419% error-ratio: 9.968037e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.356% error-ratio: 9.839144e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.349% error-ratio: 1.007488e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.356% error-ratio: 9.885715e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.378% error-ratio: 1.016171e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 9.892494e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.399% error-ratio: 9.986119e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.427% error-ratio: 1.008449e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.992209e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_32_64
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11594 ( 1.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11590 ( 1.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11513 ( 0.99x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11766 ( 1.01x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11745 ( 1.01x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_32_64
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       60 ( 1.21x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3484 ( 1.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40119 ( 0.99x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   226964 ( 1.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   865677 ( 0.99x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_32_64
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      131 ( 0.85x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2471 ( 1.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      480 ( 1.11x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2094 ( 1.01x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     7984 ( 0.99x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1435 ( 1.02x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      868 ( 0.95x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      520 ( 1.01x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_32_64
### Keyset 'CRC-MultiCollision' Tests ###
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      141 ( 1.10x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      157 ( 1.23x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      156 ( 1.22x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      118 ( 0.92x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42938 ( 1.00x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # BeagleHash_32_64
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42771 ( 1.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # BeagleHash_32_64
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42913 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # BeagleHash_32_64
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      511 ( 1.00x) - passed
ok 100 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 101 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 102 - Keyset 'Combination HiBit-Null' # BeagleHash_32_64
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      513 ( 1.00x) - passed
ok 103 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 104 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 105 - Keyset 'Combination LowBit-Null' # BeagleHash_32_64
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17278 ( 1.00x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # BeagleHash_32_64
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25482 ( 1.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25129 ( 0.99x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25344 ( 1.00x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # BeagleHash_32_64
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # BeagleHash_32_64
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      463 ( 0.99x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      461 ( 0.99x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      427 ( 0.92x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      480 ( 1.03x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # BeagleHash_32_64
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual        5 ( 0.63x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # BeagleHash_32_64
### Keyset 'Words' Tests ###
# Read 99171 lines from /usr/share/dict/words
# Testing collisions   - Expected     1.14, actual        3 ( 2.62x) - failed
not ok 131 - Collision Rate for Keyset 'Words'
ok 132 - Distribution Bias Check for Keyset 'Words'
not ok 133 - all tests passed # BeagleHash_32_64
1..133
# Tests Failed. BeagleHash_32_64 failed 2 of 133 tests.
# Testing took 1598.123692 seconds
# This is SMHasher version v1.1-demerphq-5-ged9ad7f - built on Mar 14 2017.
