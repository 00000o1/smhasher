ok 1 - Found Hash # BeagleHash_32_64
###################################################################
### Testing BeagleHash_32_64 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 64 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_64
# BeagleHash_32_64     - Verification value 0xB8AC089B : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_64
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_64
ok 5 - Sanity Test # BeagleHash_32_64
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.826 bytes/cycle - 5224.86 MiB/sec @ 3 ghz
# Alignment  6 -  1.709 bytes/cycle - 4889.38 MiB/sec @ 3 ghz
# Alignment  5 -  1.827 bytes/cycle - 5227.99 MiB/sec @ 3 ghz
# Alignment  4 -  1.869 bytes/cycle - 5347.33 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5432.16 MiB/sec @ 3 ghz
# Alignment  2 -  1.712 bytes/cycle - 4897.19 MiB/sec @ 3 ghz
# Alignment  1 -  1.857 bytes/cycle - 5314.14 MiB/sec @ 3 ghz
# Alignment  0 -  1.777 bytes/cycle - 5084.30 MiB/sec @ 3 ghz
# Average      -  1.810 bytes/cycle - 5177.17 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_64          0 byte keys       17.625 c/h
# BeagleHash_32_64          1 byte keys       31.004 c/h       31.004 c/b        0.032 b/c
# BeagleHash_32_64          2 byte keys       34.949 c/h       17.475 c/b        0.057 b/c
# BeagleHash_32_64          3 byte keys       35.683 c/h       11.894 c/b        0.084 b/c
# BeagleHash_32_64          4 byte keys       36.059 c/h        9.015 c/b        0.111 b/c
# BeagleHash_32_64          5 byte keys       38.811 c/h        7.762 c/b        0.129 b/c
# BeagleHash_32_64          6 byte keys       37.853 c/h        6.309 c/b        0.159 b/c
# BeagleHash_32_64          7 byte keys       35.981 c/h        5.140 c/b        0.195 b/c
# BeagleHash_32_64          8 byte keys       46.968 c/h        5.871 c/b        0.170 b/c
# BeagleHash_32_64          9 byte keys       46.986 c/h        5.221 c/b        0.192 b/c
# BeagleHash_32_64         10 byte keys       47.026 c/h        4.703 c/b        0.213 b/c
# BeagleHash_32_64         11 byte keys       47.068 c/h        4.279 c/b        0.234 b/c
# BeagleHash_32_64         12 byte keys       46.263 c/h        3.855 c/b        0.259 b/c
# BeagleHash_32_64         13 byte keys       48.173 c/h        3.706 c/b        0.270 b/c
# BeagleHash_32_64         14 byte keys       47.949 c/h        3.425 c/b        0.292 b/c
# BeagleHash_32_64         15 byte keys       46.974 c/h        3.132 c/b        0.319 b/c
# BeagleHash_32_64         16 byte keys       50.051 c/h        3.128 c/b        0.320 b/c
# BeagleHash_32_64         17 byte keys       50.226 c/h        2.954 c/b        0.338 b/c
# BeagleHash_32_64         18 byte keys       51.888 c/h        2.883 c/b        0.347 b/c
# BeagleHash_32_64         19 byte keys       50.211 c/h        2.643 c/b        0.378 b/c
# BeagleHash_32_64         20 byte keys       50.831 c/h        2.542 c/b        0.393 b/c
# BeagleHash_32_64         21 byte keys       50.102 c/h        2.386 c/b        0.419 b/c
# BeagleHash_32_64         22 byte keys       53.017 c/h        2.410 c/b        0.415 b/c
# BeagleHash_32_64         23 byte keys       50.428 c/h        2.193 c/b        0.456 b/c
# BeagleHash_32_64         24 byte keys       56.597 c/h        2.358 c/b        0.424 b/c
# BeagleHash_32_64         25 byte keys       56.176 c/h        2.247 c/b        0.445 b/c
# BeagleHash_32_64         26 byte keys       57.134 c/h        2.197 c/b        0.455 b/c
# BeagleHash_32_64         27 byte keys       57.498 c/h        2.130 c/b        0.470 b/c
# BeagleHash_32_64         28 byte keys       57.614 c/h        2.058 c/b        0.486 b/c
# BeagleHash_32_64         29 byte keys       55.963 c/h        1.930 c/b        0.518 b/c
# BeagleHash_32_64         30 byte keys       56.207 c/h        1.874 c/b        0.534 b/c
# BeagleHash_32_64         31 byte keys       58.070 c/h        1.873 c/b        0.534 b/c
#                          Average < 32       47.106 c/h        3.039 c/b        0.329 b/c
# BeagleHash_32_64         32 byte keys       57.000 c/h        1.781 c/b        0.561 b/c
# BeagleHash_32_64         36 byte keys       58.243 c/h        1.618 c/b        0.618 b/c
# BeagleHash_32_64         40 byte keys       64.211 c/h        1.605 c/b        0.623 b/c
# BeagleHash_32_64         44 byte keys       64.438 c/h        1.465 c/b        0.683 b/c
# BeagleHash_32_64         48 byte keys       64.975 c/h        1.354 c/b        0.739 b/c
# BeagleHash_32_64         52 byte keys       65.918 c/h        1.268 c/b        0.789 b/c
# BeagleHash_32_64         56 byte keys       70.678 c/h        1.262 c/b        0.792 b/c
# BeagleHash_32_64         60 byte keys       71.855 c/h        1.198 c/b        0.835 b/c
# BeagleHash_32_64         64 byte keys       74.196 c/h        1.159 c/b        0.863 b/c
# BeagleHash_32_64         68 byte keys       75.630 c/h        1.112 c/b        0.899 b/c
# BeagleHash_32_64         72 byte keys       81.769 c/h        1.136 c/b        0.881 b/c
# BeagleHash_32_64         76 byte keys       84.628 c/h        1.114 c/b        0.898 b/c
# BeagleHash_32_64         80 byte keys       81.749 c/h        1.022 c/b        0.979 b/c
# BeagleHash_32_64         84 byte keys       82.302 c/h        0.980 c/b        1.021 b/c
# BeagleHash_32_64         88 byte keys       88.288 c/h        1.003 c/b        0.997 b/c
# BeagleHash_32_64         92 byte keys       89.340 c/h        0.971 c/b        1.030 b/c
# BeagleHash_32_64         96 byte keys       89.000 c/h        0.927 c/b        1.079 b/c
# BeagleHash_32_64        100 byte keys       91.053 c/h        0.911 c/b        1.098 b/c
# BeagleHash_32_64        104 byte keys       96.410 c/h        0.927 c/b        1.079 b/c
# BeagleHash_32_64        108 byte keys       99.221 c/h        0.919 c/b        1.088 b/c
# BeagleHash_32_64        112 byte keys       98.966 c/h        0.884 c/b        1.132 b/c
# BeagleHash_32_64        116 byte keys      100.863 c/h        0.870 c/b        1.150 b/c
# BeagleHash_32_64        120 byte keys      107.085 c/h        0.892 c/b        1.121 b/c
# BeagleHash_32_64        124 byte keys      107.660 c/h        0.868 c/b        1.152 b/c
#                         Average < 128       62.015 c/h        1.467 c/b        0.682 b/c
# BeagleHash_32_64        128 byte keys      109.040 c/h        0.852 c/b        1.174 b/c
# BeagleHash_32_64        256 byte keys      154.795 c/h        0.605 c/b        1.654 b/c
# BeagleHash_32_64        512 byte keys      303.914 c/h        0.594 c/b        1.685 b/c
# BeagleHash_32_64       1024 byte keys      573.865 c/h        0.560 c/b        1.784 b/c
# BeagleHash_32_64       2048 byte keys     1110.379 c/h        0.542 c/b        1.844 b/c
# BeagleHash_32_64       4096 byte keys     2191.580 c/h        0.535 c/b        1.869 b/c
# BeagleHash_32_64       8192 byte keys     4357.154 c/h        0.532 c/b        1.880 b/c
# BeagleHash_32_64      16384 byte keys     8696.571 c/h        0.531 c/b        1.884 b/c
# BeagleHash_32_64      32768 byte keys    17369.798 c/h        0.530 c/b        1.886 b/c
# BeagleHash_32_64      65536 byte keys    34809.248 c/h        0.531 c/b        1.883 b/c
#                       Overall Average     1108.321 c/h        0.549 c/b        1.822 b/c
ok 6 - Speed (always passes) # BeagleHash_32_64
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_64
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_64
# 3 total collisions, of which 3 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_64
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_64
# 4 total collisions, of which 4 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_64
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_64
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_64
### Avalanche Tests ### - seed-bits: 64 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.331% error-ratio: 9.395031e-01
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.380% error-ratio: 9.801575e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.409% error-ratio: 1.049054e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.364% error-ratio: 1.011214e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.367% error-ratio: 1.004933e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 1.011400e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.331% error-ratio: 9.523066e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.408% error-ratio: 1.025149e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.400% error-ratio: 1.020933e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.407% error-ratio: 9.876571e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.365% error-ratio: 1.014876e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.375% error-ratio: 9.974205e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.378% error-ratio: 1.006545e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.397% error-ratio: 1.027482e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.420% error-ratio: 9.925154e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.388% error-ratio: 1.023237e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.337% error-ratio: 9.943641e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.395% error-ratio: 9.998334e-01
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.388% error-ratio: 1.011987e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.371% error-ratio: 1.000035e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.362% error-ratio: 1.037045e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.390% error-ratio: 9.991732e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.390% error-ratio: 9.936547e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.412% error-ratio: 1.001558e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_32_64
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11796 ( 1.01x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11687 ( 1.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11599 ( 1.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11954 ( 1.03x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11646 ( 1.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_32_64
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       45 ( 0.91x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3437 ( 0.99x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40074 ( 0.99x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227027 ( 1.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866579 ( 0.99x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_32_64
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      142 ( 0.92x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2579 ( 1.05x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      406 ( 0.94x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2098 ( 1.01x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     8203 ( 1.02x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1351 ( 0.96x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      886 ( 0.97x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      558 ( 1.09x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_32_64
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 81 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      137 ( 1.07x) - passed
ok 82 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      144 ( 1.13x) - passed
ok 83 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      111 ( 0.87x) - passed
ok 84 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 85 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 86 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 87 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      131 ( 1.02x) - passed
ok 88 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 89 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      109 ( 0.85x) - passed
ok 90 - Collision Rate for Keyset 'Crc-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 91 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual       98 ( 0.77x) - passed
ok 92 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 93 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual       96 ( 0.75x) - passed
ok 94 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      109 ( 0.85x) - passed
ok 95 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 96 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 97 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 98 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 99 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      112 ( 0.88x) - passed
ok 100 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 101 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      155 ( 1.21x) - passed
ok 102 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 103 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      115 ( 0.90x) - passed
ok 104 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      144 ( 1.13x) - passed
ok 105 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 106 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 107 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 108 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 109 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      112 ( 0.88x) - passed
ok 110 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      143 ( 1.12x) - passed
ok 111 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      139 ( 1.09x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      130 ( 1.02x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected   128.00, actual      133 ( 1.04x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 129 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_32_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 130 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_32_64
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42880 ( 1.00x) - passed
ok 131 - Collision Rate for Keyset 'Combination Lowbits'
ok 132 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 133 - Keyset 'Combination Lowbits' # BeagleHash_32_64
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42801 ( 1.00x) - passed
ok 134 - Collision Rate for Keyset 'Combination Highbits'
ok 135 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 136 - Keyset 'Combination Highbits' # BeagleHash_32_64
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42683 ( 1.00x) - passed
ok 137 - Collision Rate for Keyset 'Combination Highbits2'
ok 138 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 139 - Keyset 'Combination Highbits2' # BeagleHash_32_64
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      535 ( 1.04x) - passed
ok 140 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 141 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 142 - Keyset 'Combination HiBit-Null' # BeagleHash_32_64
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      509 ( 0.99x) - passed
ok 143 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 144 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 145 - Keyset 'Combination LowBit-Null' # BeagleHash_32_64
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17589 ( 1.01x) - passed
ok 146 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 147 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 148 - Keyset 'Combination Hi-Lo' # BeagleHash_32_64
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25114 ( 0.99x) - passed
ok 149 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 150 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25310 ( 1.00x) - passed
ok 151 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 152 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25431 ( 1.00x) - passed
ok 153 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 154 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 155 - Keyset 'Text' # BeagleHash_32_64
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        6 ( 0.75x) - passed
ok 156 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 157 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 158 - Keyset 'Zeroes' # BeagleHash_32_64
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      473 ( 1.02x) - passed
ok 159 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 160 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      459 ( 0.99x) - passed
ok 161 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 162 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      481 ( 1.03x) - passed
ok 163 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 164 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      481 ( 1.03x) - passed
ok 165 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 166 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 167 - Keyset 'Seed' # BeagleHash_32_64
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual        8 ( 1.00x) - passed
ok 168 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 169 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 170 - Keyset 'Effs' # BeagleHash_32_64
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual        9 ( 0.87x) - passed
ok 171 - Collision Rate for Keyset 'Words'
ok 172 - Distribution Bias Check for Keyset 'Words'
ok 173 - all tests passed # BeagleHash_32_64
1..173
# All Tests Passed. BeagleHash_32_64 passed all 173 tests run.
# Testing took 1605.046432 seconds
# This is SMHasher version v1.1-demerphq-15-g69ed3ed - built on Mar 15 2017.
