ok 1 - SelfTest - Verify 89 Hashes
ok 2 - Found Hash # BeagleHash_64_112
###################################################################
### Testing BeagleHash_64_112 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 112 statebits: 128 hashbits: 64
###################################################################
### Sanity Tests ###
ok 3 - Verification code # BeagleHash_64_112
# Sanity check simple key bit flips and consistency..........
ok 4 - SanityTest # BeagleHash_64_112
# Sanity check null suffixes change the hash (simple)..........
ok 5 - Appended Zeroes Test # BeagleHash_64_112
ok 6 - Sanity Test # BeagleHash_64_112
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.899 bytes/cycle - 5432.13 MiB/sec @ 3 ghz
# Alignment  6 -  1.899 bytes/cycle - 5432.05 MiB/sec @ 3 ghz
# Alignment  5 -  1.899 bytes/cycle - 5431.97 MiB/sec @ 3 ghz
# Alignment  4 -  1.899 bytes/cycle - 5432.09 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5431.92 MiB/sec @ 3 ghz
# Alignment  2 -  1.899 bytes/cycle - 5431.90 MiB/sec @ 3 ghz
# Alignment  1 -  1.899 bytes/cycle - 5432.11 MiB/sec @ 3 ghz
# Alignment  0 -  1.915 bytes/cycle - 5479.11 MiB/sec @ 3 ghz
# Average      -  1.901 bytes/cycle - 5437.91 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_112         0 byte keys       16.907 c/h
# BeagleHash_64_112         1 byte keys       29.910 c/h       29.910 c/b        0.033 b/c
# BeagleHash_64_112         2 byte keys       33.000 c/h       16.500 c/b        0.061 b/c
# BeagleHash_64_112         3 byte keys       33.000 c/h       11.000 c/b        0.091 b/c
# BeagleHash_64_112         4 byte keys       35.043 c/h        8.761 c/b        0.114 b/c
# BeagleHash_64_112         5 byte keys       35.000 c/h        7.000 c/b        0.143 b/c
# BeagleHash_64_112         6 byte keys       36.000 c/h        6.000 c/b        0.167 b/c
# BeagleHash_64_112         7 byte keys       37.000 c/h        5.286 c/b        0.189 b/c
# BeagleHash_64_112         8 byte keys       34.998 c/h        4.375 c/b        0.229 b/c
# BeagleHash_64_112         9 byte keys       35.000 c/h        3.889 c/b        0.257 b/c
# BeagleHash_64_112        10 byte keys       35.000 c/h        3.500 c/b        0.286 b/c
# BeagleHash_64_112        11 byte keys       34.999 c/h        3.182 c/b        0.314 b/c
# BeagleHash_64_112        12 byte keys       35.000 c/h        2.917 c/b        0.343 b/c
# BeagleHash_64_112        13 byte keys       35.000 c/h        2.692 c/b        0.371 b/c
# BeagleHash_64_112        14 byte keys       35.511 c/h        2.536 c/b        0.394 b/c
# BeagleHash_64_112        15 byte keys       35.000 c/h        2.333 c/b        0.429 b/c
# BeagleHash_64_112        16 byte keys       37.989 c/h        2.374 c/b        0.421 b/c
# BeagleHash_64_112        17 byte keys       38.000 c/h        2.235 c/b        0.447 b/c
# BeagleHash_64_112        18 byte keys       38.000 c/h        2.111 c/b        0.474 b/c
# BeagleHash_64_112        19 byte keys       38.000 c/h        2.000 c/b        0.500 b/c
# BeagleHash_64_112        20 byte keys       38.000 c/h        1.900 c/b        0.526 b/c
# BeagleHash_64_112        21 byte keys       38.000 c/h        1.810 c/b        0.553 b/c
# BeagleHash_64_112        22 byte keys       38.000 c/h        1.727 c/b        0.579 b/c
# BeagleHash_64_112        23 byte keys       38.000 c/h        1.652 c/b        0.605 b/c
# BeagleHash_64_112        24 byte keys       45.054 c/h        1.877 c/b        0.533 b/c
# BeagleHash_64_112        25 byte keys       44.000 c/h        1.760 c/b        0.568 b/c
# BeagleHash_64_112        26 byte keys       44.000 c/h        1.692 c/b        0.591 b/c
# BeagleHash_64_112        27 byte keys       44.877 c/h        1.662 c/b        0.602 b/c
# BeagleHash_64_112        28 byte keys       44.000 c/h        1.571 c/b        0.636 b/c
# BeagleHash_64_112        29 byte keys       44.765 c/h        1.544 c/b        0.648 b/c
# BeagleHash_64_112        30 byte keys       44.000 c/h        1.467 c/b        0.682 b/c
# BeagleHash_64_112        31 byte keys       44.799 c/h        1.445 c/b        0.692 b/c
#                          Average < 32       37.370 c/h        2.411 c/b        0.415 b/c
# BeagleHash_64_112        32 byte keys       46.878 c/h        1.465 c/b        0.683 b/c
# BeagleHash_64_112        36 byte keys       46.000 c/h        1.278 c/b        0.783 b/c
# BeagleHash_64_112        40 byte keys       54.280 c/h        1.357 c/b        0.737 b/c
# BeagleHash_64_112        44 byte keys       52.988 c/h        1.204 c/b        0.830 b/c
# BeagleHash_64_112        48 byte keys       54.726 c/h        1.140 c/b        0.877 b/c
# BeagleHash_64_112        52 byte keys       53.998 c/h        1.038 c/b        0.963 b/c
# BeagleHash_64_112        56 byte keys       60.894 c/h        1.087 c/b        0.920 b/c
# BeagleHash_64_112        60 byte keys       60.000 c/h        1.000 c/b        1.000 b/c
# BeagleHash_64_112        64 byte keys       61.986 c/h        0.969 c/b        1.032 b/c
# BeagleHash_64_112        68 byte keys       61.981 c/h        0.911 c/b        1.097 b/c
# BeagleHash_64_112        72 byte keys       67.992 c/h        0.944 c/b        1.059 b/c
# BeagleHash_64_112        76 byte keys       68.624 c/h        0.903 c/b        1.107 b/c
# BeagleHash_64_112        80 byte keys       70.258 c/h        0.878 c/b        1.139 b/c
# BeagleHash_64_112        84 byte keys       69.998 c/h        0.833 c/b        1.200 b/c
# BeagleHash_64_112        88 byte keys       76.702 c/h        0.872 c/b        1.147 b/c
# BeagleHash_64_112        92 byte keys       76.555 c/h        0.832 c/b        1.202 b/c
# BeagleHash_64_112        96 byte keys       81.797 c/h        0.852 c/b        1.174 b/c
# BeagleHash_64_112       100 byte keys       78.961 c/h        0.790 c/b        1.266 b/c
# BeagleHash_64_112       104 byte keys       86.286 c/h        0.830 c/b        1.205 b/c
# BeagleHash_64_112       108 byte keys       85.656 c/h        0.793 c/b        1.261 b/c
# BeagleHash_64_112       112 byte keys       89.337 c/h        0.798 c/b        1.254 b/c
# BeagleHash_64_112       116 byte keys       88.063 c/h        0.759 c/b        1.317 b/c
# BeagleHash_64_112       120 byte keys       95.073 c/h        0.792 c/b        1.262 b/c
# BeagleHash_64_112       124 byte keys       93.873 c/h        0.757 c/b        1.321 b/c
#                         Average < 128       51.406 c/h        1.216 c/b        0.823 b/c
# BeagleHash_64_112       128 byte keys       96.888 c/h        0.757 c/b        1.321 b/c
# BeagleHash_64_112       256 byte keys      148.515 c/h        0.580 c/b        1.724 b/c
# BeagleHash_64_112       512 byte keys      298.224 c/h        0.582 c/b        1.717 b/c
# BeagleHash_64_112      1024 byte keys      565.725 c/h        0.552 c/b        1.810 b/c
# BeagleHash_64_112      2048 byte keys     1100.497 c/h        0.537 c/b        1.861 b/c
# BeagleHash_64_112      4096 byte keys     2169.233 c/h        0.530 c/b        1.888 b/c
# BeagleHash_64_112      8192 byte keys     4306.590 c/h        0.526 c/b        1.902 b/c
# BeagleHash_64_112     16384 byte keys     8581.831 c/h        0.524 c/b        1.909 b/c
# BeagleHash_64_112     32768 byte keys    17134.884 c/h        0.523 c/b        1.912 b/c
# BeagleHash_64_112     65536 byte keys    34243.340 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1083.704 c/h        0.537 c/b        1.864 b/c
ok 7 - Speed (always passes) # BeagleHash_64_112
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 8 - Differential collisions # BeagleHash_64_112
ok 9 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 10 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 11 - Differential collisions # BeagleHash_64_112
ok 12 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 13 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 14 - Differential collisions # BeagleHash_64_112
ok 15 - Nothing skipped during differential collision check # BeagleHash_64_112
# 0 total collisions, of which 0 single collisions were ignored
ok 16 - ProcessDifferentials
ok 17 - Differential # BeagleHash_64_112
### Avalanche Tests ### - seed-bits: 112 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.566% error-ratio: 1.011293e+00
ok 18 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.540% error-ratio: 1.043408e+00
ok 19 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 9.839027e-01
ok 20 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.526% error-ratio: 9.834376e-01
ok 21 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.578% error-ratio: 1.038367e+00
ok 22 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.585% error-ratio: 1.008461e+00
ok 23 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.592% error-ratio: 9.848511e-01
ok 24 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.610% error-ratio: 9.840930e-01
ok 25 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.614% error-ratio: 9.898095e-01
ok 26 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.630% error-ratio: 9.982247e-01
ok 27 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.604% error-ratio: 9.770595e-01
ok 28 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.616% error-ratio: 9.846032e-01
ok 29 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.618% error-ratio: 1.022281e+00
ok 30 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.511% error-ratio: 1.009406e+00
ok 31 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.554% error-ratio: 9.878224e-01
ok 32 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.556% error-ratio: 1.004096e+00
ok 33 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.540% error-ratio: 1.004715e+00
ok 34 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.588% error-ratio: 1.005586e+00
ok 35 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.605% error-ratio: 1.011367e+00
ok 36 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.675% error-ratio: 9.926865e-01
ok 37 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.558% error-ratio: 1.012777e+00
ok 38 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.683% error-ratio: 1.002077e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
ok 40 - Strict Avalanche Criteria # BeagleHash_64_112
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 41 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 42 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Keyset 'Cyclic' # BeagleHash_64_112
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 52 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 53 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Keyset 'TwoBytes' # BeagleHash_64_112
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 63 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 64 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Keyset 'Sparse' # BeagleHash_64_112
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_64_112
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_64_112
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Combination Lowbits'
ok 91 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 92 - Keyset 'Combination Lowbits' # BeagleHash_64_112
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Combination Highbits'
ok 94 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 95 - Keyset 'Combination Highbits' # BeagleHash_64_112
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Combination Highbits2'
ok 97 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 98 - Keyset 'Combination Highbits2' # BeagleHash_64_112
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Combination 0x80000000'
ok 100 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 101 - Keyset 'Combination 0x80000000' # BeagleHash_64_112
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Combination 0x00000001'
ok 103 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 104 - Keyset 'Combination 0x00000001' # BeagleHash_64_112
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 106 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 107 - Keyset 'Combination Hi-Lo' # BeagleHash_64_112
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 109 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 111 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Keyset 'Text' # BeagleHash_64_112
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 116 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 117 - Keyset 'Zeroes' # BeagleHash_64_112
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 119 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 121 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 123 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Keyset 'Seed' # BeagleHash_64_112
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 128 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 129 - Keyset 'Effs' # BeagleHash_64_112
ok 130 - all tests passed # BeagleHash_64_112
1..130
# All Tests Passed. BeagleHash_64_112 passed all 130 tests run.
# Testing took 2016.576343 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
