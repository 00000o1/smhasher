ok 1 - Found Hash # fasthash32
###################################################################
### Testing fasthash32 - no seed_state
### - fast-hash 32bit -
### seedbits: 32 statebits: 32 hashbits: 32
###################################################################
ok 2 - Verification code # fasthash32
# fasthash32           - Verification value 0x4651528E : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # fasthash32
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # fasthash32
ok 5 - Sanity Test # fasthash32
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.918 bytes/cycle - 5487.63 MiB/sec @ 3 ghz
# Alignment  6 -  1.918 bytes/cycle - 5487.59 MiB/sec @ 3 ghz
# Alignment  5 -  1.918 bytes/cycle - 5487.63 MiB/sec @ 3 ghz
# Alignment  4 -  1.918 bytes/cycle - 5487.59 MiB/sec @ 3 ghz
# Alignment  3 -  1.918 bytes/cycle - 5487.63 MiB/sec @ 3 ghz
# Alignment  2 -  1.918 bytes/cycle - 5487.60 MiB/sec @ 3 ghz
# Alignment  1 -  1.918 bytes/cycle - 5487.63 MiB/sec @ 3 ghz
# Alignment  0 -  1.918 bytes/cycle - 5487.61 MiB/sec @ 3 ghz
# Average      -  1.918 bytes/cycle - 5487.61 MiB/sec @ 3 ghz
## KeySpeed tests
# fasthash32                0 byte keys       13.713 c/h
# fasthash32                1 byte keys       17.912 c/h       17.912 c/b        0.056 b/c
# fasthash32                2 byte keys       22.000 c/h       11.000 c/b        0.091 b/c
# fasthash32                3 byte keys       23.997 c/h        7.999 c/b        0.125 b/c
# fasthash32                4 byte keys       24.776 c/h        6.194 c/b        0.161 b/c
# fasthash32                5 byte keys       24.643 c/h        4.929 c/b        0.203 b/c
# fasthash32                6 byte keys       24.000 c/h        4.000 c/b        0.250 b/c
# fasthash32                7 byte keys       24.272 c/h        3.467 c/b        0.288 b/c
# fasthash32                8 byte keys       28.000 c/h        3.500 c/b        0.286 b/c
# fasthash32                9 byte keys       32.000 c/h        3.556 c/b        0.281 b/c
# fasthash32               10 byte keys       32.621 c/h        3.262 c/b        0.307 b/c
# fasthash32               11 byte keys       33.000 c/h        3.000 c/b        0.333 b/c
# fasthash32               12 byte keys       32.000 c/h        2.667 c/b        0.375 b/c
# fasthash32               13 byte keys       32.837 c/h        2.526 c/b        0.396 b/c
# fasthash32               14 byte keys       32.999 c/h        2.357 c/b        0.424 b/c
# fasthash32               15 byte keys       32.994 c/h        2.200 c/b        0.455 b/c
# fasthash32               16 byte keys       32.913 c/h        2.057 c/b        0.486 b/c
# fasthash32               17 byte keys       37.000 c/h        2.176 c/b        0.459 b/c
# fasthash32               18 byte keys       37.000 c/h        2.056 c/b        0.486 b/c
# fasthash32               19 byte keys       37.242 c/h        1.960 c/b        0.510 b/c
# fasthash32               20 byte keys       37.000 c/h        1.850 c/b        0.541 b/c
# fasthash32               21 byte keys       37.000 c/h        1.762 c/b        0.568 b/c
# fasthash32               22 byte keys       37.000 c/h        1.682 c/b        0.595 b/c
# fasthash32               23 byte keys       37.000 c/h        1.609 c/b        0.622 b/c
# fasthash32               24 byte keys       36.987 c/h        1.541 c/b        0.649 b/c
# fasthash32               25 byte keys       41.000 c/h        1.640 c/b        0.610 b/c
# fasthash32               26 byte keys       41.177 c/h        1.584 c/b        0.631 b/c
# fasthash32               27 byte keys       41.000 c/h        1.519 c/b        0.659 b/c
# fasthash32               28 byte keys       41.000 c/h        1.464 c/b        0.683 b/c
# fasthash32               29 byte keys       41.000 c/h        1.414 c/b        0.707 b/c
# fasthash32               30 byte keys       41.000 c/h        1.367 c/b        0.732 b/c
# fasthash32               31 byte keys       41.000 c/h        1.323 c/b        0.756 b/c
#                          Average < 32       32.753 c/h        2.113 c/b        0.473 b/c
# fasthash32               32 byte keys       41.000 c/h        1.281 c/b        0.780 b/c
# fasthash32               36 byte keys       46.164 c/h        1.282 c/b        0.780 b/c
# fasthash32               40 byte keys       45.000 c/h        1.125 c/b        0.889 b/c
# fasthash32               44 byte keys       49.000 c/h        1.114 c/b        0.898 b/c
# fasthash32               48 byte keys       49.000 c/h        1.021 c/b        0.980 b/c
# fasthash32               52 byte keys       53.999 c/h        1.038 c/b        0.963 b/c
# fasthash32               56 byte keys       53.577 c/h        0.957 c/b        1.045 b/c
# fasthash32               60 byte keys       58.000 c/h        0.967 c/b        1.034 b/c
# fasthash32               64 byte keys       57.711 c/h        0.902 c/b        1.109 b/c
# fasthash32               68 byte keys       62.000 c/h        0.912 c/b        1.097 b/c
# fasthash32               72 byte keys       61.999 c/h        0.861 c/b        1.161 b/c
# fasthash32               76 byte keys       65.999 c/h        0.868 c/b        1.152 b/c
# fasthash32               80 byte keys       66.000 c/h        0.825 c/b        1.212 b/c
# fasthash32               84 byte keys       70.000 c/h        0.833 c/b        1.200 b/c
# fasthash32               88 byte keys       70.000 c/h        0.795 c/b        1.257 b/c
# fasthash32               92 byte keys       74.000 c/h        0.804 c/b        1.243 b/c
# fasthash32               96 byte keys       74.967 c/h        0.781 c/b        1.281 b/c
# fasthash32              100 byte keys       78.840 c/h        0.788 c/b        1.268 b/c
# fasthash32              104 byte keys       78.376 c/h        0.754 c/b        1.327 b/c
# fasthash32              108 byte keys       82.000 c/h        0.759 c/b        1.317 b/c
# fasthash32              112 byte keys       82.771 c/h        0.739 c/b        1.353 b/c
# fasthash32              116 byte keys       87.000 c/h        0.750 c/b        1.333 b/c
# fasthash32              120 byte keys       86.492 c/h        0.721 c/b        1.387 b/c
# fasthash32              124 byte keys       91.000 c/h        0.734 c/b        1.363 b/c
#                         Average < 128       47.017 c/h        1.112 c/b        0.899 b/c
# fasthash32              128 byte keys       91.000 c/h        0.711 c/b        1.407 b/c
# fasthash32              256 byte keys      163.560 c/h        0.639 c/b        1.565 b/c
# fasthash32              512 byte keys      296.997 c/h        0.580 c/b        1.724 b/c
# fasthash32             1024 byte keys      563.864 c/h        0.551 c/b        1.816 b/c
# fasthash32             2048 byte keys     1098.014 c/h        0.536 c/b        1.865 b/c
# fasthash32             4096 byte keys     2165.350 c/h        0.529 c/b        1.892 b/c
# fasthash32             8192 byte keys     4300.670 c/h        0.525 c/b        1.905 b/c
# fasthash32            16384 byte keys     8570.905 c/h        0.523 c/b        1.912 b/c
# fasthash32            32768 byte keys    17110.891 c/h        0.522 c/b        1.915 b/c
# fasthash32            65536 byte keys    34195.072 c/h        0.522 c/b        1.917 b/c
#                       Overall Average     1078.626 c/h        0.534 c/b        1.873 b/c
ok 6 - Speed (always passes) # fasthash32
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # fasthash32
ok 8 - Nothing skipped during differential collision check # fasthash32
# 3 total collisions, of which 3 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # fasthash32
ok 11 - Nothing skipped during differential collision check # fasthash32
# 3 total collisions, of which 3 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # fasthash32
ok 14 - Nothing skipped during differential collision check # fasthash32
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # fasthash32
### Avalanche Tests ### - seed-bits: 32 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... not ok! # worst-bit:  97.992% error-ratio: 1.432932e+05
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |pct diff from 50%: abs((0.5-(changed/reps))*2) *100|
#              +--------------------------------+
#              |0         1         2         3 |
#              |01234567890123456789012345678901|
#              +--------------------------------+
# seed     0.0 |z...92525t217z214fyoäuOËø4AnKiêt|
# seed     1.0 |fã.e143525t317z2.42ûoäuOËø4AnKië|
# seed     2.0 |äfj.k123525t317z21û1üoãuOËø4AnKi|
# seed     3.0 |5ä0j.a152525t318z2ñV1ÿoäuOËø4AnK|
# seed     4.0 |r6v0j.b152525t317zNÊø1üoäuOËø4An|
# seed     5.0 |1s5v0j.c152525t217üXÛ©1ÿoäuOËø4A|
# seed     6.0 |D1r5v0j.b153525t31ëTÔ*¶1üoãuOËø4|
# seed     7.0 |hD1q5v0j.d152525s2wPË¤¶%1ÿoäuOËø|
# seed     8.0 |xgå1p5v0j.d153525tnyPÑ¤¶%1ÿoäuOË|
# seed     9.0 |3xaz1p5v0j.d152525wtyPÑ¤¶%1üoäuO|
# seed    10.0 |ï3saz1p5v0j.d14252håtyPÑ¤¶%1üoäu|
# seed    11.0 |7ï3saz1p5v0j.d1435îkåtyPÑ¤¶%1üoä|
# seed    12.0 |17ë3saz1p5v0j.e142bEkåtyQÑ¤¶%1üo|
# seed    13.0 |ê17å2saz1p5v0j.d15ãeGkåtyPÑ¤¶%1ÿ|
# seed    14.0 |gê17å2saz1p5v0j.d.zPeGkåtyPÑ¤¶%1|
# seed    15.0 |Ggê17å2saz1p5v0j.dgäRfGkåtyQÑ¤¶%|
# seed    16.0 |mGgê.7å3saz1p5v0j.ãnäReGkåtyPÑ¤¶|
# seed    17.0 |rmFgê17å2saz1p5v0j4AnäReGkåtyPÑ¤|
# seed    18.0 |3rmEgê17å2saz1p5v0D5AnäReGkåtyPÑ|
# seed    19.0 |z3rmEgê.7å3saz1p5vOË5AnäRfGkåtyP|
# seed    20.0 |3z3qlEgê17å2saz1p5ÿXÛ5AnäReGkåty|
# seed    21.0 |53n3plEgê.7å2saz1poLÅø4AnäRfGkêt|
# seed    22.0 |U52n3plEgê17å2saz1ïpLÊø5AnäRfGkå|
# seed    23.0 |y..857f267217k181e6mouOË54nnKeêk|
# seed    24.0 |3y.2028g267217k18315opuOË54nnKfë|
# seed    25.0 |73u.2b18g267217k18ü15opuOË54nnKe|
# seed    26.0 |q72r.1038f267217k1ïU15opuOË54nnK|
# seed    27.0 |ap72r.1038g267217kiHÄ15opuOË54nn|
# seed    28.0 |ÿap83r.1038g267217ãkJÄ15opuOË54n|
# seed    29.0 |0ÿ4p83r.1038g267228BkJÄ15opuOË54|
# seed    30.0 |h0å4p83r.1028g2672qeFkJÄ15opuOË5|
# seed    31.0 |gh0ã4p83r.1028g267fyeFkJÄ15opuOË|
#              +--------------------------------+
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |scaled p-value above confidence level (zero is ok) |
#              +--------------------------------+
#              |0         1         2         3 |
#              |01234567890123456789012345678901|
#              +--------------------------------+
# seed     0.0 |#...###########@################|
# seed     1.0 |##.#############.###############|
# seed     2.0 |###.#############@##############|
# seed     3.0 |####.#@#########################|
# seed     4.0 |#####.#Õ########################|
# seed     5.0 |######.#W#######################|
# seed     6.0 |#@#####.#@######################|
# seed     7.0 |##@#####.#@#####################|
# seed     8.0 |#########.#@####################|
# seed     9.0 |##########.#%###################|
# seed    10.0 |###########.#@##################|
# seed    11.0 |############.#@#################|
# seed    12.0 |@############.#@################|
# seed    13.0 |########@#####.#m###############|
# seed    14.0 |##@############.#.##############|
# seed    15.0 |###@######@#####.###############|
# seed    16.0 |####.############.##############|
# seed    17.0 |#####&##########################|
# seed    18.0 |######©#########################|
# seed    19.0 |#######.######@#################|
# seed    20.0 |########@######@################|
# seed    21.0 |#########.######################|
# seed    22.0 |##########@#####################|
# seed    23.0 |#..########@####################|
# seed    24.0 |##.#########@##@################|
# seed    25.0 |###.#########@##################|
# seed    26.0 |####.#########@##@##############|
# seed    27.0 |#####.@########ã################|
# seed    28.0 |######.#########################|
# seed    29.0 |#######.@#######################|
# seed    30.0 |########.@######################|
# seed    31.0 |#########.@#####################|
#              +--------------------------------+
# 990 of 1024 bits failed (96.68%) failed at 99.999943 confidence
#     g-test: 100.000000%
#     sum-error-square: 36.68306382
#     key/seed errors: 31/32
#     - seed bit 0 gtest probability not random: 100.0000 (16093797/15906203)
#     - seed bit 1 gtest probability not random: 100.0000 (16420957/15579043)
#     - with 29 more seed errors not described above.
#     hash bit-level errors: 31/32
#     - hash bit 0 gtest-prob not-random: 100.0000 (16535368/15464632)
#     - hash bit 1 gtest-prob not-random: 100.0000 (16257696/15742304)
#     - hash bit 2 gtest-prob not-random: 100.0000 (16273532/15726468)
#     - with 28 more hash bit errors not described above.
not ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.323% error-ratio: 9.700124e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.005115e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.385% error-ratio: 1.019219e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.315% error-ratio: 1.019461e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.387% error-ratio: 1.042746e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.360% error-ratio: 9.904922e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.462% error-ratio: 9.703938e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.369% error-ratio: 1.013974e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.395% error-ratio: 1.001355e+00
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.382% error-ratio: 1.012596e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.391% error-ratio: 9.970106e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.379% error-ratio: 1.011151e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.385% error-ratio: 9.720837e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.361% error-ratio: 1.008676e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.404% error-ratio: 1.005156e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.957460e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.003815e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.352% error-ratio: 9.958491e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.426% error-ratio: 9.995259e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.004287e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.437% error-ratio: 1.002106e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.336% error-ratio: 9.844158e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.442% error-ratio: 9.997656e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
# Testing 520-bit keys.......... ok.     # worst-bit:   0.409% error-ratio: 9.906825e-01
ok 41 - Strict Avalanche Criteria - 520 bit keys
not ok 42 - Strict Avalanche Criteria # fasthash32
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11549 ( 0.99x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11607 ( 1.00x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11590 ( 1.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11485 ( 0.99x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11686 ( 1.00x) - passed
ok 51 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 53 - Keyset 'Cyclic' # fasthash32
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       48 ( 0.97x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3520 ( 1.01x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40265 ( 1.00x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227756 ( 1.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866122 ( 0.99x) - passed
ok 62 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 64 - Keyset 'TwoBytes' # fasthash32
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      150 ( 0.98x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2457 ( 1.00x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      437 ( 1.01x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2104 ( 1.02x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     7945 ( 0.99x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1398 ( 1.00x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      959 ( 1.05x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      474 ( 0.92x) - passed
ok 79 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 81 - Keyset 'Sparse' # fasthash32
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      152 ( 1.19x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      118 ( 0.92x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      143 ( 1.12x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 91 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # fasthash32
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      116 ( 0.91x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      147 ( 1.15x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      148 ( 1.16x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 101 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # fasthash32
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      114 ( 0.89x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      137 ( 1.07x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      112 ( 0.88x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      139 ( 1.09x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 111 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # fasthash32
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      149 ( 1.16x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      109 ( 0.85x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      120 ( 0.94x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      106 ( 0.83x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      110 ( 0.86x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # fasthash32
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      146 ( 1.14x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      156 ( 1.22x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      131 ( 1.02x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      113 ( 0.88x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 131 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # fasthash32
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # fasthash32
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42757 ( 1.00x) - passed
ok 142 - Collision Rate for Keyset 'Combination Lowbits'
ok 143 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 144 - Keyset 'Combination Lowbits' # fasthash32
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42773 ( 1.00x) - passed
ok 145 - Collision Rate for Keyset 'Combination Highbits'
ok 146 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 147 - Keyset 'Combination Highbits' # fasthash32
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42798 ( 1.00x) - passed
ok 148 - Collision Rate for Keyset 'Combination Highbits2'
ok 149 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 150 - Keyset 'Combination Highbits2' # fasthash32
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      535 ( 1.04x) - passed
ok 151 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 152 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 153 - Keyset 'Combination HiBit-Null' # fasthash32
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      535 ( 1.04x) - passed
ok 154 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 155 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 156 - Keyset 'Combination LowBit-Null' # fasthash32
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17445 ( 1.01x) - passed
ok 157 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 158 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 159 - Keyset 'Combination Hi-Lo' # fasthash32
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25572 ( 1.01x) - passed
ok 160 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 161 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25405 ( 1.00x) - passed
ok 162 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 163 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25095 ( 0.99x) - passed
ok 164 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 166 - Keyset 'Text' # fasthash32
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        5 ( 0.63x) - passed
ok 167 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 168 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 169 - Keyset 'Zeroes' # fasthash32
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.46, actual      481 ( 1.03x) - passed
ok 170 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 171 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.44, actual      487 ( 1.05x) - passed
ok 172 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 173 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.46, actual      462 ( 0.99x) - passed
ok 174 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 175 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.45, actual      466 ( 1.00x) - passed
ok 176 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Keyset 'Seed' # fasthash32
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 179 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 180 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 181 - Keyset 'Effs' # fasthash32
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual       17 ( 1.65x) - passed
ok 182 - Collision Rate for Keyset 'Words'
ok 183 - Distribution Bias Check for Keyset 'Words'
not ok 184 - all tests passed # fasthash32
1..184
# Tests Failed. fasthash32 failed 3 of 184 tests.
# Testing took 1436.826528 seconds
# This is SMHasher version v1.1-demerphq-39-g8a22d76 - built on Mar 17 2017.
