ok 1 - Found Hash # fasthash32
###################################################################
### Testing fasthash32 - no seed_state
### - fast-hash 32bit -
### seedbits: 32 statebits: 32 hashbits: 32
###################################################################
ok 2 - Verification code # fasthash32
# fasthash32           - Verification value 0x4651528E : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # fasthash32
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # fasthash32
ok 5 - Sanity Test # fasthash32
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  2.255 bytes/cycle - 6452.89 MiB/sec @ 3 ghz
# Alignment  6 -  2.261 bytes/cycle - 6467.41 MiB/sec @ 3 ghz
# Alignment  5 -  2.256 bytes/cycle - 6455.04 MiB/sec @ 3 ghz
# Alignment  4 -  2.265 bytes/cycle - 6479.19 MiB/sec @ 3 ghz
# Alignment  3 -  2.247 bytes/cycle - 6429.70 MiB/sec @ 3 ghz
# Alignment  2 -  2.249 bytes/cycle - 6434.87 MiB/sec @ 3 ghz
# Alignment  1 -  2.250 bytes/cycle - 6436.93 MiB/sec @ 3 ghz
# Alignment  0 -  2.259 bytes/cycle - 6462.52 MiB/sec @ 3 ghz
# Average      -  2.255 bytes/cycle - 6452.32 MiB/sec @ 3 ghz
## KeySpeed tests
# fasthash32                0 byte keys       14.000 c/h
# fasthash32                1 byte keys       19.479 c/h       19.479 c/b        0.051 b/c
# fasthash32                2 byte keys       22.443 c/h       11.222 c/b        0.089 b/c
# fasthash32                3 byte keys       23.293 c/h        7.764 c/b        0.129 b/c
# fasthash32                4 byte keys       24.268 c/h        6.067 c/b        0.165 b/c
# fasthash32                5 byte keys       24.938 c/h        4.988 c/b        0.200 b/c
# fasthash32                6 byte keys       24.236 c/h        4.039 c/b        0.248 b/c
# fasthash32                7 byte keys       24.630 c/h        3.519 c/b        0.284 b/c
# fasthash32                8 byte keys       29.241 c/h        3.655 c/b        0.274 b/c
# fasthash32                9 byte keys       33.000 c/h        3.667 c/b        0.273 b/c
# fasthash32               10 byte keys       33.159 c/h        3.316 c/b        0.302 b/c
# fasthash32               11 byte keys       33.000 c/h        3.000 c/b        0.333 b/c
# fasthash32               12 byte keys       33.000 c/h        2.750 c/b        0.364 b/c
# fasthash32               13 byte keys       33.000 c/h        2.538 c/b        0.394 b/c
# fasthash32               14 byte keys       33.295 c/h        2.378 c/b        0.420 b/c
# fasthash32               15 byte keys       33.676 c/h        2.245 c/b        0.445 b/c
# fasthash32               16 byte keys       32.238 c/h        2.015 c/b        0.496 b/c
# fasthash32               17 byte keys       37.224 c/h        2.190 c/b        0.457 b/c
# fasthash32               18 byte keys       36.821 c/h        2.046 c/b        0.489 b/c
# fasthash32               19 byte keys       36.000 c/h        1.895 c/b        0.528 b/c
# fasthash32               20 byte keys       36.685 c/h        1.834 c/b        0.545 b/c
# fasthash32               21 byte keys       36.000 c/h        1.714 c/b        0.583 b/c
# fasthash32               22 byte keys       37.164 c/h        1.689 c/b        0.592 b/c
# fasthash32               23 byte keys       37.225 c/h        1.618 c/b        0.618 b/c
# fasthash32               24 byte keys       36.285 c/h        1.512 c/b        0.661 b/c
# fasthash32               25 byte keys       40.000 c/h        1.600 c/b        0.625 b/c
# fasthash32               26 byte keys       40.679 c/h        1.565 c/b        0.639 b/c
# fasthash32               27 byte keys       40.000 c/h        1.481 c/b        0.675 b/c
# fasthash32               28 byte keys       40.294 c/h        1.439 c/b        0.695 b/c
# fasthash32               29 byte keys       40.241 c/h        1.388 c/b        0.721 b/c
# fasthash32               30 byte keys       40.551 c/h        1.352 c/b        0.740 b/c
# fasthash32               31 byte keys       40.493 c/h        1.306 c/b        0.766 b/c
#                          Average < 32       32.705 c/h        2.110 c/b        0.474 b/c
# fasthash32               32 byte keys       39.000 c/h        1.219 c/b        0.821 b/c
# fasthash32               36 byte keys       43.549 c/h        1.210 c/b        0.827 b/c
# fasthash32               40 byte keys       42.821 c/h        1.071 c/b        0.934 b/c
# fasthash32               44 byte keys       46.960 c/h        1.067 c/b        0.937 b/c
# fasthash32               48 byte keys       46.340 c/h        0.965 c/b        1.036 b/c
# fasthash32               52 byte keys       50.701 c/h        0.975 c/b        1.026 b/c
# fasthash32               56 byte keys       49.544 c/h        0.885 c/b        1.130 b/c
# fasthash32               60 byte keys       53.000 c/h        0.883 c/b        1.132 b/c
# fasthash32               64 byte keys       52.558 c/h        0.821 c/b        1.218 b/c
# fasthash32               68 byte keys       56.862 c/h        0.836 c/b        1.196 b/c
# fasthash32               72 byte keys       56.151 c/h        0.780 c/b        1.282 b/c
# fasthash32               76 byte keys       60.884 c/h        0.801 c/b        1.248 b/c
# fasthash32               80 byte keys       59.424 c/h        0.743 c/b        1.346 b/c
# fasthash32               84 byte keys       63.683 c/h        0.758 c/b        1.319 b/c
# fasthash32               88 byte keys       62.595 c/h        0.711 c/b        1.406 b/c
# fasthash32               92 byte keys       66.000 c/h        0.717 c/b        1.394 b/c
# fasthash32               96 byte keys       66.347 c/h        0.691 c/b        1.447 b/c
# fasthash32              100 byte keys       70.593 c/h        0.706 c/b        1.417 b/c
# fasthash32              104 byte keys       69.637 c/h        0.670 c/b        1.493 b/c
# fasthash32              108 byte keys       74.249 c/h        0.687 c/b        1.455 b/c
# fasthash32              112 byte keys       73.027 c/h        0.652 c/b        1.534 b/c
# fasthash32              116 byte keys       76.941 c/h        0.663 c/b        1.508 b/c
# fasthash32              120 byte keys       76.845 c/h        0.640 c/b        1.562 b/c
# fasthash32              124 byte keys       80.745 c/h        0.651 c/b        1.536 b/c
#                         Average < 128       44.375 c/h        1.049 c/b        0.953 b/c
# fasthash32              128 byte keys       80.041 c/h        0.625 c/b        1.599 b/c
# fasthash32              256 byte keys      145.703 c/h        0.569 c/b        1.757 b/c
# fasthash32              512 byte keys      249.974 c/h        0.488 c/b        2.048 b/c
# fasthash32             1024 byte keys      461.282 c/h        0.450 c/b        2.220 b/c
# fasthash32             2048 byte keys      888.251 c/h        0.434 c/b        2.306 b/c
# fasthash32             4096 byte keys     1760.087 c/h        0.430 c/b        2.327 b/c
# fasthash32             8192 byte keys     3450.163 c/h        0.421 c/b        2.374 b/c
# fasthash32            16384 byte keys     6914.512 c/h        0.422 c/b        2.370 b/c
# fasthash32            32768 byte keys    13791.800 c/h        0.421 c/b        2.376 b/c
# fasthash32            65536 byte keys    27626.881 c/h        0.422 c/b        2.372 b/c
#                       Overall Average      876.571 c/h        0.434 c/b        2.304 b/c
ok 6 - Speed (always passes) # fasthash32
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # fasthash32
ok 8 - Nothing skipped during differential collision check # fasthash32
# 3 total collisions, of which 3 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # fasthash32
ok 11 - Nothing skipped during differential collision check # fasthash32
# 3 total collisions, of which 3 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # fasthash32
ok 14 - Nothing skipped during differential collision check # fasthash32
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # fasthash32
### Avalanche Tests ### - seed-bits: 32 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... not ok! # worst-bit:  97.992% error-ratio: 1.432932e+05
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |pct diff from 50%: abs((0.5-(changed/reps))*2) *100|
#              +--------------------------------+
#              |0         1         2         3 |
#              |01234567890123456789012345678901|
#              +--------------------------------+
# seed     0.0 |z...92525t217z214fyoäuOËø4AnKiêt|
# seed     1.0 |fã.e143525t317z2.42ûoäuOËø4AnKië|
# seed     2.0 |äfj.k123525t317z21û1üoãuOËø4AnKi|
# seed     3.0 |5ä0j.a152525t318z2ñV1ÿoäuOËø4AnK|
# seed     4.0 |r6v0j.b152525t317zNÊø1üoäuOËø4An|
# seed     5.0 |1s5v0j.c152525t217üXÛ©1ÿoäuOËø4A|
# seed     6.0 |D1r5v0j.b153525t31ëTÔ*¶1üoãuOËø4|
# seed     7.0 |hD1q5v0j.d152525s2wPË¤¶%1ÿoäuOËø|
# seed     8.0 |xgå1p5v0j.d153525tnyPÑ¤¶%1ÿoäuOË|
# seed     9.0 |3xaz1p5v0j.d152525wtyPÑ¤¶%1üoäuO|
# seed    10.0 |ï3saz1p5v0j.d14252håtyPÑ¤¶%1üoäu|
# seed    11.0 |7ï3saz1p5v0j.d1435îkåtyPÑ¤¶%1üoä|
# seed    12.0 |17ë3saz1p5v0j.e142bEkåtyQÑ¤¶%1üo|
# seed    13.0 |ê17å2saz1p5v0j.d15ãeGkåtyPÑ¤¶%1ÿ|
# seed    14.0 |gê17å2saz1p5v0j.d.zPeGkåtyPÑ¤¶%1|
# seed    15.0 |Ggê17å2saz1p5v0j.dgäRfGkåtyQÑ¤¶%|
# seed    16.0 |mGgê.7å3saz1p5v0j.ãnäReGkåtyPÑ¤¶|
# seed    17.0 |rmFgê17å2saz1p5v0j4AnäReGkåtyPÑ¤|
# seed    18.0 |3rmEgê17å2saz1p5v0D5AnäReGkåtyPÑ|
# seed    19.0 |z3rmEgê.7å3saz1p5vOË5AnäRfGkåtyP|
# seed    20.0 |3z3qlEgê17å2saz1p5ÿXÛ5AnäReGkåty|
# seed    21.0 |53n3plEgê.7å2saz1poLÅø4AnäRfGkêt|
# seed    22.0 |U52n3plEgê17å2saz1ïpLÊø5AnäRfGkå|
# seed    23.0 |y..857f267217k181e6mouOË54nnKeêk|
# seed    24.0 |3y.2028g267217k18315opuOË54nnKfë|
# seed    25.0 |73u.2b18g267217k18ü15opuOË54nnKe|
# seed    26.0 |q72r.1038f267217k1ïU15opuOË54nnK|
# seed    27.0 |ap72r.1038g267217kiHÄ15opuOË54nn|
# seed    28.0 |ÿap83r.1038g267217ãkJÄ15opuOË54n|
# seed    29.0 |0ÿ4p83r.1038g267228BkJÄ15opuOË54|
# seed    30.0 |h0å4p83r.1028g2672qeFkJÄ15opuOË5|
# seed    31.0 |gh0ã4p83r.1028g267fyeFkJÄ15opuOË|
#              +--------------------------------+
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |scaled p-value above confidence level (zero is ok) |
#              +--------------------------------+
#              |0         1         2         3 |
#              |01234567890123456789012345678901|
#              +--------------------------------+
# seed     0.0 |#...###########@################|
# seed     1.0 |##.#############.###############|
# seed     2.0 |###.#############@##############|
# seed     3.0 |####.#@#########################|
# seed     4.0 |#####.#Õ########################|
# seed     5.0 |######.#W#######################|
# seed     6.0 |#@#####.#@######################|
# seed     7.0 |##@#####.#@#####################|
# seed     8.0 |#########.#@####################|
# seed     9.0 |##########.#%###################|
# seed    10.0 |###########.#@##################|
# seed    11.0 |############.#@#################|
# seed    12.0 |@############.#@################|
# seed    13.0 |########@#####.#m###############|
# seed    14.0 |##@############.#.##############|
# seed    15.0 |###@######@#####.###############|
# seed    16.0 |####.############.##############|
# seed    17.0 |#####&##########################|
# seed    18.0 |######©#########################|
# seed    19.0 |#######.######@#################|
# seed    20.0 |########@######@################|
# seed    21.0 |#########.######################|
# seed    22.0 |##########@#####################|
# seed    23.0 |#..########@####################|
# seed    24.0 |##.#########@##@################|
# seed    25.0 |###.#########@##################|
# seed    26.0 |####.#########@##@##############|
# seed    27.0 |#####.@########ã################|
# seed    28.0 |######.#########################|
# seed    29.0 |#######.@#######################|
# seed    30.0 |########.@######################|
# seed    31.0 |#########.@#####################|
#              +--------------------------------+
# 990 of 1024 bits failed (96.68%) failed at 99.999943 confidence
#     g-test: 100.000000%
#     sum-error-square: 36.68306382
#     key/seed errors: 31/32
#     - seed bit 0 gtest probability not random: 100.0000 (16093797/15906203)
#     - seed bit 1 gtest probability not random: 100.0000 (16420957/15579043)
#     - with 29 more seed errors not described above.
#     hash bit-level errors: 31/32
#     - hash bit 0 gtest-prob not-random: 100.0000 (16535368/15464632)
#     - hash bit 1 gtest-prob not-random: 100.0000 (16257696/15742304)
#     - hash bit 2 gtest-prob not-random: 100.0000 (16273532/15726468)
#     - with 28 more hash bit errors not described above.
not ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.323% error-ratio: 9.700124e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.005115e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.385% error-ratio: 1.019219e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.315% error-ratio: 1.019461e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.387% error-ratio: 1.042746e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.360% error-ratio: 9.904922e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.462% error-ratio: 9.703938e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.369% error-ratio: 1.013974e+00
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.395% error-ratio: 1.001355e+00
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.382% error-ratio: 1.012596e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.391% error-ratio: 9.970106e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.379% error-ratio: 1.011151e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.385% error-ratio: 9.720837e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.361% error-ratio: 1.008676e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.404% error-ratio: 1.005156e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.957460e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.413% error-ratio: 1.003815e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.352% error-ratio: 9.958491e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.426% error-ratio: 9.995259e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.004287e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.437% error-ratio: 1.002106e+00
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.336% error-ratio: 9.844158e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.442% error-ratio: 9.997656e-01
ok 40 - Strict Avalanche Criteria - 512 bit keys
not ok 41 - Strict Avalanche Criteria # fasthash32
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11549 ( 0.99x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11607 ( 1.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11590 ( 1.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11485 ( 0.99x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11686 ( 1.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # fasthash32
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       48 ( 0.97x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3520 ( 1.01x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40265 ( 1.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227756 ( 1.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866122 ( 0.99x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # fasthash32
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      150 ( 0.98x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2457 ( 1.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      437 ( 1.01x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2104 ( 1.02x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     7945 ( 0.99x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1398 ( 1.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      959 ( 1.05x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      474 ( 0.92x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # fasthash32
### Keyset 'CRC-MultiCollision' Tests ###
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # fasthash32
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # fasthash32
# Testing collisions   - Expected   128.00, actual      152 ( 1.19x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # fasthash32
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # fasthash32
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # fasthash32
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # fasthash32
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # fasthash32
# Testing collisions   - Expected   128.00, actual      118 ( 0.92x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # fasthash32
# Testing collisions   - Expected   128.00, actual      143 ( 1.12x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # fasthash32
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # fasthash32
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42757 ( 1.00x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # fasthash32
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42773 ( 1.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # fasthash32
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42798 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # fasthash32
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      535 ( 1.04x) - passed
ok 100 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 101 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 102 - Keyset 'Combination HiBit-Null' # fasthash32
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      535 ( 1.04x) - passed
ok 103 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 104 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 105 - Keyset 'Combination LowBit-Null' # fasthash32
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17445 ( 1.01x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # fasthash32
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25572 ( 1.01x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25405 ( 1.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25095 ( 0.99x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # fasthash32
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        5 ( 0.63x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # fasthash32
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.46, actual      481 ( 1.03x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.44, actual      487 ( 1.05x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.46, actual      462 ( 0.99x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.45, actual      466 ( 1.00x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # fasthash32
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual       11 ( 1.38x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # fasthash32
not ok 131 - all tests passed # fasthash32
1..131
# Tests Failed. fasthash32 failed 3 of 131 tests.
# Testing took 1356.139465 seconds
# This is SMHasher version v1.1-demerphq-5-ged9ad7f - built on Mar 14 2017.
