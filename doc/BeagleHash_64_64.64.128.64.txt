ok 1 - Found Hash # BeagleHash_64_64
###################################################################
### Testing BeagleHash_64_64 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 64 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_64
# BeagleHash_64_64     - Verification value 0x3A032FB5 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency - hashbytes=8..........
ok 3 - SanityTest # BeagleHash_64_64
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_64
ok 5 - Sanity Test # BeagleHash_64_64
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.842 bytes/cycle - 5269.20 MiB/sec @ 3 ghz
# Alignment  6 -  1.844 bytes/cycle - 5275.59 MiB/sec @ 3 ghz
# Alignment  5 -  1.870 bytes/cycle - 5349.76 MiB/sec @ 3 ghz
# Alignment  4 -  1.873 bytes/cycle - 5357.70 MiB/sec @ 3 ghz
# Alignment  3 -  1.873 bytes/cycle - 5357.89 MiB/sec @ 3 ghz
# Alignment  2 -  1.851 bytes/cycle - 5294.50 MiB/sec @ 3 ghz
# Alignment  1 -  1.853 bytes/cycle - 5302.58 MiB/sec @ 3 ghz
# Alignment  0 -  1.887 bytes/cycle - 5399.92 MiB/sec @ 3 ghz
# Average      -  1.862 bytes/cycle - 5325.89 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_64          0 byte keys       19.000 c/h
# BeagleHash_64_64          1 byte keys       31.928 c/h       31.928 c/b        0.031 b/c
# BeagleHash_64_64          2 byte keys       35.256 c/h       17.628 c/b        0.057 b/c
# BeagleHash_64_64          3 byte keys       36.199 c/h       12.066 c/b        0.083 b/c
# BeagleHash_64_64          4 byte keys       36.997 c/h        9.249 c/b        0.108 b/c
# BeagleHash_64_64          5 byte keys       38.146 c/h        7.629 c/b        0.131 b/c
# BeagleHash_64_64          6 byte keys       39.942 c/h        6.657 c/b        0.150 b/c
# BeagleHash_64_64          7 byte keys       40.412 c/h        5.773 c/b        0.173 b/c
# BeagleHash_64_64          8 byte keys       37.000 c/h        4.625 c/b        0.216 b/c
# BeagleHash_64_64          9 byte keys       37.578 c/h        4.175 c/b        0.240 b/c
# BeagleHash_64_64         10 byte keys       37.000 c/h        3.700 c/b        0.270 b/c
# BeagleHash_64_64         11 byte keys       37.440 c/h        3.404 c/b        0.294 b/c
# BeagleHash_64_64         12 byte keys       37.000 c/h        3.083 c/b        0.324 b/c
# BeagleHash_64_64         13 byte keys       37.000 c/h        2.846 c/b        0.351 b/c
# BeagleHash_64_64         14 byte keys       37.000 c/h        2.643 c/b        0.378 b/c
# BeagleHash_64_64         15 byte keys       37.000 c/h        2.467 c/b        0.405 b/c
# BeagleHash_64_64         16 byte keys       39.353 c/h        2.460 c/b        0.407 b/c
# BeagleHash_64_64         17 byte keys       39.464 c/h        2.321 c/b        0.431 b/c
# BeagleHash_64_64         18 byte keys       39.000 c/h        2.167 c/b        0.462 b/c
# BeagleHash_64_64         19 byte keys       39.351 c/h        2.071 c/b        0.483 b/c
# BeagleHash_64_64         20 byte keys       39.000 c/h        1.950 c/b        0.513 b/c
# BeagleHash_64_64         21 byte keys       39.805 c/h        1.895 c/b        0.528 b/c
# BeagleHash_64_64         22 byte keys       39.573 c/h        1.799 c/b        0.556 b/c
# BeagleHash_64_64         23 byte keys       39.601 c/h        1.722 c/b        0.581 b/c
# BeagleHash_64_64         24 byte keys       45.954 c/h        1.915 c/b        0.522 b/c
# BeagleHash_64_64         25 byte keys       45.998 c/h        1.840 c/b        0.544 b/c
# BeagleHash_64_64         26 byte keys       45.843 c/h        1.763 c/b        0.567 b/c
# BeagleHash_64_64         27 byte keys       45.981 c/h        1.703 c/b        0.587 b/c
# BeagleHash_64_64         28 byte keys       45.991 c/h        1.643 c/b        0.609 b/c
# BeagleHash_64_64         29 byte keys       46.000 c/h        1.586 c/b        0.630 b/c
# BeagleHash_64_64         30 byte keys       45.998 c/h        1.533 c/b        0.652 b/c
# BeagleHash_64_64         31 byte keys       45.972 c/h        1.483 c/b        0.674 b/c
#                          Average < 32       39.306 c/h        2.536 c/b        0.394 b/c
# BeagleHash_64_64         32 byte keys       47.885 c/h        1.496 c/b        0.668 b/c
# BeagleHash_64_64         36 byte keys       47.995 c/h        1.333 c/b        0.750 b/c
# BeagleHash_64_64         40 byte keys       54.000 c/h        1.350 c/b        0.741 b/c
# BeagleHash_64_64         44 byte keys       53.957 c/h        1.226 c/b        0.815 b/c
# BeagleHash_64_64         48 byte keys       56.495 c/h        1.177 c/b        0.850 b/c
# BeagleHash_64_64         52 byte keys       55.959 c/h        1.076 c/b        0.929 b/c
# BeagleHash_64_64         56 byte keys       61.929 c/h        1.106 c/b        0.904 b/c
# BeagleHash_64_64         60 byte keys       63.354 c/h        1.056 c/b        0.947 b/c
# BeagleHash_64_64         64 byte keys       64.486 c/h        1.008 c/b        0.992 b/c
# BeagleHash_64_64         68 byte keys       64.649 c/h        0.951 c/b        1.052 b/c
# BeagleHash_64_64         72 byte keys       70.918 c/h        0.985 c/b        1.015 b/c
# BeagleHash_64_64         76 byte keys       72.050 c/h        0.948 c/b        1.055 b/c
# BeagleHash_64_64         80 byte keys       72.960 c/h        0.912 c/b        1.096 b/c
# BeagleHash_64_64         84 byte keys       74.163 c/h        0.883 c/b        1.133 b/c
# BeagleHash_64_64         88 byte keys       80.561 c/h        0.915 c/b        1.092 b/c
# BeagleHash_64_64         92 byte keys       78.506 c/h        0.853 c/b        1.172 b/c
# BeagleHash_64_64         96 byte keys       82.028 c/h        0.854 c/b        1.170 b/c
# BeagleHash_64_64        100 byte keys       81.768 c/h        0.818 c/b        1.223 b/c
# BeagleHash_64_64        104 byte keys       88.402 c/h        0.850 c/b        1.176 b/c
# BeagleHash_64_64        108 byte keys       88.251 c/h        0.817 c/b        1.224 b/c
# BeagleHash_64_64        112 byte keys       90.675 c/h        0.810 c/b        1.235 b/c
# BeagleHash_64_64        116 byte keys       89.915 c/h        0.775 c/b        1.290 b/c
# BeagleHash_64_64        120 byte keys       97.285 c/h        0.811 c/b        1.233 b/c
# BeagleHash_64_64        124 byte keys       96.970 c/h        0.782 c/b        1.279 b/c
#                         Average < 128       53.445 c/h        1.264 c/b        0.791 b/c
# BeagleHash_64_64        128 byte keys       99.860 c/h        0.780 c/b        1.282 b/c
# BeagleHash_64_64        256 byte keys      149.012 c/h        0.582 c/b        1.718 b/c
# BeagleHash_64_64        512 byte keys      284.641 c/h        0.556 c/b        1.799 b/c
# BeagleHash_64_64       1024 byte keys      555.585 c/h        0.543 c/b        1.843 b/c
# BeagleHash_64_64       2048 byte keys     1124.054 c/h        0.549 c/b        1.822 b/c
# BeagleHash_64_64       4096 byte keys     2228.599 c/h        0.544 c/b        1.838 b/c
# BeagleHash_64_64       8192 byte keys     4417.037 c/h        0.539 c/b        1.855 b/c
# BeagleHash_64_64      16384 byte keys     8707.960 c/h        0.531 c/b        1.881 b/c
# BeagleHash_64_64      32768 byte keys    17403.321 c/h        0.531 c/b        1.883 b/c
# BeagleHash_64_64      65536 byte keys    34758.908 c/h        0.530 c/b        1.885 b/c
#                       Overall Average     1101.847 c/h        0.546 c/b        1.833 b/c
ok 6 - Speed (always passes) # BeagleHash_64_64
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_64
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_64
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_64
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_64
### Avalanche Tests ### - seed-bits: 64 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.674% error-ratio: 9.899295e-01
ok 17 - Strict Avalanche Criteria - 0 bit/0 byte keys # BeagleHash_64_64
# Testing   8-bit keys.......... ok.     # worst-bit:   0.563% error-ratio: 1.001839e+00
ok 18 - Strict Avalanche Criteria - 8 bit/1 byte keys # BeagleHash_64_64
# Testing  16-bit keys.......... ok.     # worst-bit:   0.484% error-ratio: 9.805538e-01
ok 19 - Strict Avalanche Criteria - 16 bit/2 byte keys # BeagleHash_64_64
# Testing  24-bit keys.......... ok.     # worst-bit:   0.488% error-ratio: 9.713054e-01
ok 20 - Strict Avalanche Criteria - 24 bit/3 byte keys # BeagleHash_64_64
# Testing  32-bit keys.......... ok.     # worst-bit:   0.527% error-ratio: 9.855200e-01
ok 21 - Strict Avalanche Criteria - 32 bit/4 byte keys # BeagleHash_64_64
# Testing  40-bit keys.......... ok.     # worst-bit:   0.557% error-ratio: 9.981906e-01
ok 22 - Strict Avalanche Criteria - 40 bit/5 byte keys # BeagleHash_64_64
# Testing  48-bit keys.......... ok.     # worst-bit:   0.606% error-ratio: 9.824892e-01
ok 23 - Strict Avalanche Criteria - 48 bit/6 byte keys # BeagleHash_64_64
# Testing  56-bit keys.......... ok.     # worst-bit:   0.493% error-ratio: 9.806556e-01
ok 24 - Strict Avalanche Criteria - 56 bit/7 byte keys # BeagleHash_64_64
# Testing  64-bit keys.......... ok.     # worst-bit:   0.692% error-ratio: 9.892023e-01
ok 25 - Strict Avalanche Criteria - 64 bit/8 byte keys # BeagleHash_64_64
# Testing  72-bit keys.......... ok.     # worst-bit:   0.532% error-ratio: 9.762988e-01
ok 26 - Strict Avalanche Criteria - 72 bit/9 byte keys # BeagleHash_64_64
# Testing  80-bit keys.......... ok.     # worst-bit:   0.591% error-ratio: 1.000146e+00
ok 27 - Strict Avalanche Criteria - 80 bit/10 byte keys # BeagleHash_64_64
# Testing  88-bit keys.......... ok.     # worst-bit:   0.600% error-ratio: 9.960971e-01
ok 28 - Strict Avalanche Criteria - 88 bit/11 byte keys # BeagleHash_64_64
# Testing  96-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.009126e+00
ok 29 - Strict Avalanche Criteria - 96 bit/12 byte keys # BeagleHash_64_64
# Testing 104-bit keys.......... ok.     # worst-bit:   0.594% error-ratio: 9.988121e-01
ok 30 - Strict Avalanche Criteria - 104 bit/13 byte keys # BeagleHash_64_64
# Testing 112-bit keys.......... ok.     # worst-bit:   0.545% error-ratio: 1.021530e+00
ok 31 - Strict Avalanche Criteria - 112 bit/14 byte keys # BeagleHash_64_64
# Testing 120-bit keys.......... ok.     # worst-bit:   0.638% error-ratio: 1.009846e+00
ok 32 - Strict Avalanche Criteria - 120 bit/15 byte keys # BeagleHash_64_64
# Testing 128-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.002079e+00
ok 33 - Strict Avalanche Criteria - 128 bit/16 byte keys # BeagleHash_64_64
# Testing 136-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.000231e+00
ok 34 - Strict Avalanche Criteria - 136 bit/17 byte keys # BeagleHash_64_64
# Testing 144-bit keys.......... ok.     # worst-bit:   0.656% error-ratio: 1.009640e+00
ok 35 - Strict Avalanche Criteria - 144 bit/18 byte keys # BeagleHash_64_64
# Testing 152-bit keys.......... ok.     # worst-bit:   0.634% error-ratio: 1.005067e+00
ok 36 - Strict Avalanche Criteria - 152 bit/19 byte keys # BeagleHash_64_64
# Testing 152-bit keys.......... ok.     # worst-bit:   0.598% error-ratio: 1.000714e+00
ok 37 - Strict Avalanche Criteria - 152 bit/19 byte keys # BeagleHash_64_64
# Testing 200-bit keys.......... ok.     # worst-bit:   0.543% error-ratio: 9.904165e-01
ok 38 - Strict Avalanche Criteria - 200 bit/25 byte keys # BeagleHash_64_64
# Testing 256-bit keys.......... ok.     # worst-bit:   0.568% error-ratio: 9.912838e-01
ok 39 - Strict Avalanche Criteria - 256 bit/32 byte keys # BeagleHash_64_64
# Testing 512-bit keys.......... ok.     # worst-bit:   0.585% error-ratio: 1.002111e+00
ok 40 - Strict Avalanche Criteria - 512 bit/64 byte keys # BeagleHash_64_64
# Testing 520-bit keys.......... ok.     # worst-bit:   0.612% error-ratio: 1.006078e+00
ok 41 - Strict Avalanche Criteria - 520 bit/65 byte keys # BeagleHash_64_64
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_64_64
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_64_64
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_64_64
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_64_64
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 131 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'Combination Lowbits'
ok 142 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 143 - Keyset 'Combination Lowbits' # BeagleHash_64_64
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 144 - Collision Rate for Keyset 'Combination Highbits'
ok 145 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 146 - Keyset 'Combination Highbits' # BeagleHash_64_64
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 147 - Collision Rate for Keyset 'Combination Highbits2'
ok 148 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 149 - Keyset 'Combination Highbits2' # BeagleHash_64_64
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 150 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 151 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 152 - Keyset 'Combination HiBit-Null' # BeagleHash_64_64
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 153 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 154 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 155 - Keyset 'Combination LowBit-Null' # BeagleHash_64_64
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 156 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 157 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 158 - Keyset 'Combination Hi-Lo' # BeagleHash_64_64
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 159 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 160 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 161 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 162 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 163 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 164 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Keyset 'Text' # BeagleHash_64_64
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys, zero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 166 - Collision Rate for Keyset 'Zeroes' - 262144 keys, zero seed
ok 167 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys, zero seed
# Keyset 'Zeroes' - 262144 keys, nonzero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 168 - Collision Rate for Keyset 'Zeroes' - 262144 keys, nonzero seed
ok 169 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys, nonzero seed
ok 170 - Keyset 'Zeroes' # BeagleHash_64_64
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 171 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 172 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 173 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 174 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 175 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 176 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 177 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 179 - Keyset 'Seed' # BeagleHash_64_64
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys, zero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 180 - Collision Rate for Keyset 'Effs' - 262144 keys, zero seed
ok 181 - Distribution Bias Check for Keyset 'Effs' - 262144 keys, zero seed
# Keyset 'Effs' - 262144 keys, nonzero seed
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 182 - Collision Rate for Keyset 'Effs' - 262144 keys, nonzero seed
ok 183 - Distribution Bias Check for Keyset 'Effs' - 262144 keys, nonzero seed
ok 184 - Keyset 'Effs' # BeagleHash_64_64
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 185 - Collision Rate for Keyset 'Words'
ok 186 - Distribution Bias Check for Keyset 'Words'
ok 187 - all tests passed # BeagleHash_64_64
1..187
# All Tests Passed. BeagleHash_64_64 passed all 187 tests run.
# Testing took 1992.125259 seconds
# This is SMHasher version v1.3-demerphq-7-geee7fbf - built on Dec 15 2017.
