ok 1 - Found Hash # BeagleHash_64_64
###################################################################
### Testing BeagleHash_64_64 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 64 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_64
# BeagleHash_64_64     - Verification value 0x3A032FB5 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_64_64
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_64
ok 5 - Sanity Test # BeagleHash_64_64
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.899 bytes/cycle - 5431.90 MiB/sec @ 3 ghz
# Alignment  6 -  1.888 bytes/cycle - 5401.67 MiB/sec @ 3 ghz
# Alignment  5 -  1.899 bytes/cycle - 5431.89 MiB/sec @ 3 ghz
# Alignment  4 -  1.899 bytes/cycle - 5431.84 MiB/sec @ 3 ghz
# Alignment  3 -  1.899 bytes/cycle - 5431.82 MiB/sec @ 3 ghz
# Alignment  2 -  1.890 bytes/cycle - 5407.83 MiB/sec @ 3 ghz
# Alignment  1 -  1.890 bytes/cycle - 5408.56 MiB/sec @ 3 ghz
# Alignment  0 -  1.915 bytes/cycle - 5479.05 MiB/sec @ 3 ghz
# Average      -  1.897 bytes/cycle - 5428.07 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_64          0 byte keys       16.238 c/h
# BeagleHash_64_64          1 byte keys       29.918 c/h       29.918 c/b        0.033 b/c
# BeagleHash_64_64          2 byte keys       33.000 c/h       16.500 c/b        0.061 b/c
# BeagleHash_64_64          3 byte keys       33.000 c/h       11.000 c/b        0.091 b/c
# BeagleHash_64_64          4 byte keys       34.161 c/h        8.540 c/b        0.117 b/c
# BeagleHash_64_64          5 byte keys       35.000 c/h        7.000 c/b        0.143 b/c
# BeagleHash_64_64          6 byte keys       36.999 c/h        6.167 c/b        0.162 b/c
# BeagleHash_64_64          7 byte keys       37.000 c/h        5.286 c/b        0.189 b/c
# BeagleHash_64_64          8 byte keys       34.998 c/h        4.375 c/b        0.229 b/c
# BeagleHash_64_64          9 byte keys       35.000 c/h        3.889 c/b        0.257 b/c
# BeagleHash_64_64         10 byte keys       35.000 c/h        3.500 c/b        0.286 b/c
# BeagleHash_64_64         11 byte keys       34.999 c/h        3.182 c/b        0.314 b/c
# BeagleHash_64_64         12 byte keys       35.000 c/h        2.917 c/b        0.343 b/c
# BeagleHash_64_64         13 byte keys       35.000 c/h        2.692 c/b        0.371 b/c
# BeagleHash_64_64         14 byte keys       35.271 c/h        2.519 c/b        0.397 b/c
# BeagleHash_64_64         15 byte keys       35.000 c/h        2.333 c/b        0.429 b/c
# BeagleHash_64_64         16 byte keys       38.164 c/h        2.385 c/b        0.419 b/c
# BeagleHash_64_64         17 byte keys       38.000 c/h        2.235 c/b        0.447 b/c
# BeagleHash_64_64         18 byte keys       38.000 c/h        2.111 c/b        0.474 b/c
# BeagleHash_64_64         19 byte keys       38.443 c/h        2.023 c/b        0.494 b/c
# BeagleHash_64_64         20 byte keys       38.000 c/h        1.900 c/b        0.526 b/c
# BeagleHash_64_64         21 byte keys       38.789 c/h        1.847 c/b        0.541 b/c
# BeagleHash_64_64         22 byte keys       38.793 c/h        1.763 c/b        0.567 b/c
# BeagleHash_64_64         23 byte keys       38.451 c/h        1.672 c/b        0.598 b/c
# BeagleHash_64_64         24 byte keys       44.664 c/h        1.861 c/b        0.537 b/c
# BeagleHash_64_64         25 byte keys       45.047 c/h        1.802 c/b        0.555 b/c
# BeagleHash_64_64         26 byte keys       46.212 c/h        1.777 c/b        0.563 b/c
# BeagleHash_64_64         27 byte keys       45.534 c/h        1.686 c/b        0.593 b/c
# BeagleHash_64_64         28 byte keys       48.828 c/h        1.744 c/b        0.573 b/c
# BeagleHash_64_64         29 byte keys       46.237 c/h        1.594 c/b        0.627 b/c
# BeagleHash_64_64         30 byte keys       44.000 c/h        1.467 c/b        0.682 b/c
# BeagleHash_64_64         31 byte keys       44.277 c/h        1.428 c/b        0.700 b/c
#                          Average < 32       37.719 c/h        2.434 c/b        0.411 b/c
# BeagleHash_64_64         32 byte keys       46.997 c/h        1.469 c/b        0.681 b/c
# BeagleHash_64_64         36 byte keys       47.172 c/h        1.310 c/b        0.763 b/c
# BeagleHash_64_64         40 byte keys       52.000 c/h        1.300 c/b        0.769 b/c
# BeagleHash_64_64         44 byte keys       52.992 c/h        1.204 c/b        0.830 b/c
# BeagleHash_64_64         48 byte keys       53.912 c/h        1.123 c/b        0.890 b/c
# BeagleHash_64_64         52 byte keys       53.999 c/h        1.038 c/b        0.963 b/c
# BeagleHash_64_64         56 byte keys       60.000 c/h        1.071 c/b        0.933 b/c
# BeagleHash_64_64         60 byte keys       60.000 c/h        1.000 c/b        1.000 b/c
# BeagleHash_64_64         64 byte keys       62.030 c/h        0.969 c/b        1.032 b/c
# BeagleHash_64_64         68 byte keys       61.986 c/h        0.912 c/b        1.097 b/c
# BeagleHash_64_64         72 byte keys       68.000 c/h        0.944 c/b        1.059 b/c
# BeagleHash_64_64         76 byte keys       67.996 c/h        0.895 c/b        1.118 b/c
# BeagleHash_64_64         80 byte keys       69.883 c/h        0.874 c/b        1.145 b/c
# BeagleHash_64_64         84 byte keys       70.122 c/h        0.835 c/b        1.198 b/c
# BeagleHash_64_64         88 byte keys       76.828 c/h        0.873 c/b        1.145 b/c
# BeagleHash_64_64         92 byte keys       76.606 c/h        0.833 c/b        1.201 b/c
# BeagleHash_64_64         96 byte keys       78.879 c/h        0.822 c/b        1.217 b/c
# BeagleHash_64_64        100 byte keys       78.972 c/h        0.790 c/b        1.266 b/c
# BeagleHash_64_64        104 byte keys       85.973 c/h        0.827 c/b        1.210 b/c
# BeagleHash_64_64        108 byte keys       85.695 c/h        0.793 c/b        1.260 b/c
# BeagleHash_64_64        112 byte keys       88.513 c/h        0.790 c/b        1.265 b/c
# BeagleHash_64_64        116 byte keys       88.113 c/h        0.760 c/b        1.316 b/c
# BeagleHash_64_64        120 byte keys       94.555 c/h        0.788 c/b        1.269 b/c
# BeagleHash_64_64        124 byte keys       93.919 c/h        0.757 c/b        1.320 b/c
#                         Average < 128       51.467 c/h        1.217 c/b        0.822 b/c
# BeagleHash_64_64        128 byte keys       96.116 c/h        0.751 c/b        1.332 b/c
# BeagleHash_64_64        256 byte keys      152.804 c/h        0.597 c/b        1.675 b/c
# BeagleHash_64_64        512 byte keys      306.578 c/h        0.599 c/b        1.670 b/c
# BeagleHash_64_64       1024 byte keys      585.548 c/h        0.572 c/b        1.749 b/c
# BeagleHash_64_64       2048 byte keys     1110.727 c/h        0.542 c/b        1.844 b/c
# BeagleHash_64_64       4096 byte keys     2186.966 c/h        0.534 c/b        1.873 b/c
# BeagleHash_64_64       8192 byte keys     4308.355 c/h        0.526 c/b        1.901 b/c
# BeagleHash_64_64      16384 byte keys     8583.070 c/h        0.524 c/b        1.909 b/c
# BeagleHash_64_64      32768 byte keys    17147.353 c/h        0.523 c/b        1.911 b/c
# BeagleHash_64_64      65536 byte keys    34246.672 c/h        0.523 c/b        1.914 b/c
#                       Overall Average     1084.945 c/h        0.537 c/b        1.862 b/c
ok 6 - Speed (always passes) # BeagleHash_64_64
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_64
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_64
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_64
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_64
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_64
### Avalanche Tests ### - seed-bits: 64 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.674% error-ratio: 9.899295e-01
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.563% error-ratio: 1.001839e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.484% error-ratio: 9.805538e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.488% error-ratio: 9.713054e-01
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.527% error-ratio: 9.855200e-01
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.557% error-ratio: 9.981906e-01
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.606% error-ratio: 9.824892e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.493% error-ratio: 9.806556e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.692% error-ratio: 9.892023e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.532% error-ratio: 9.762988e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.591% error-ratio: 1.000146e+00
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.600% error-ratio: 9.960971e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.009126e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.594% error-ratio: 9.988121e-01
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.545% error-ratio: 1.021530e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.638% error-ratio: 1.009846e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.561% error-ratio: 1.002079e+00
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.559% error-ratio: 1.000231e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.656% error-ratio: 1.009640e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.634% error-ratio: 1.005067e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.598% error-ratio: 1.000714e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.543% error-ratio: 9.904165e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.568% error-ratio: 9.912838e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.585% error-ratio: 1.002111e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_64_64
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_64_64
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_64_64
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_64_64
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # BeagleHash_64_64
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # BeagleHash_64_64
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Combination Lowbits'
ok 92 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 93 - Keyset 'Combination Lowbits' # BeagleHash_64_64
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Combination Highbits'
ok 95 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 96 - Keyset 'Combination Highbits' # BeagleHash_64_64
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Combination Highbits2'
ok 98 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 99 - Keyset 'Combination Highbits2' # BeagleHash_64_64
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Combination 0x80000000'
ok 101 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 102 - Keyset 'Combination 0x80000000' # BeagleHash_64_64
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Combination 0x00000001'
ok 104 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 105 - Keyset 'Combination 0x00000001' # BeagleHash_64_64
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 107 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 108 - Keyset 'Combination Hi-Lo' # BeagleHash_64_64
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 114 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 115 - Keyset 'Text' # BeagleHash_64_64
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 117 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 118 - Keyset 'Zeroes' # BeagleHash_64_64
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 126 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 127 - Keyset 'Seed' # BeagleHash_64_64
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 129 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 130 - Keyset 'Effs' # BeagleHash_64_64
ok 131 - all tests passed # BeagleHash_64_64
1..131
# All Tests Passed. BeagleHash_64_64 passed all 131 tests run.
# Testing took 1966.317116 seconds
# This is SMHasher version v1.0-demerphq-42-gc233797 - built on Mar 14 2017.
