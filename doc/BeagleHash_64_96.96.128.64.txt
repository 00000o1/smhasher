ok 1 - Found Hash # BeagleHash_64_96
###################################################################
### Testing BeagleHash_64_96 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 96 statebits: 128 hashbits: 64
###################################################################
ok 2 - Verification code # BeagleHash_64_96
# BeagleHash_64_96     - Verification value 0x7F55950F : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_64_96
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_64_96
ok 5 - Sanity Test # BeagleHash_64_96
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.902 bytes/cycle - 5440.42 MiB/sec @ 3 ghz
# Alignment  6 -  1.901 bytes/cycle - 5440.17 MiB/sec @ 3 ghz
# Alignment  5 -  1.901 bytes/cycle - 5440.07 MiB/sec @ 3 ghz
# Alignment  4 -  1.902 bytes/cycle - 5440.25 MiB/sec @ 3 ghz
# Alignment  3 -  1.902 bytes/cycle - 5440.34 MiB/sec @ 3 ghz
# Alignment  2 -  1.902 bytes/cycle - 5440.35 MiB/sec @ 3 ghz
# Alignment  1 -  1.902 bytes/cycle - 5440.34 MiB/sec @ 3 ghz
# Alignment  0 -  1.921 bytes/cycle - 5495.37 MiB/sec @ 3 ghz
# Average      -  1.904 bytes/cycle - 5447.16 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_64_96          0 byte keys       19.000 c/h
# BeagleHash_64_96          1 byte keys       32.000 c/h       32.000 c/b        0.031 b/c
# BeagleHash_64_96          2 byte keys       35.000 c/h       17.500 c/b        0.057 b/c
# BeagleHash_64_96          3 byte keys       36.000 c/h       12.000 c/b        0.083 b/c
# BeagleHash_64_96          4 byte keys       37.000 c/h        9.250 c/b        0.108 b/c
# BeagleHash_64_96          5 byte keys       38.000 c/h        7.600 c/b        0.132 b/c
# BeagleHash_64_96          6 byte keys       40.266 c/h        6.711 c/b        0.149 b/c
# BeagleHash_64_96          7 byte keys       40.168 c/h        5.738 c/b        0.174 b/c
# BeagleHash_64_96          8 byte keys       37.000 c/h        4.625 c/b        0.216 b/c
# BeagleHash_64_96          9 byte keys       37.000 c/h        4.111 c/b        0.243 b/c
# BeagleHash_64_96         10 byte keys       37.000 c/h        3.700 c/b        0.270 b/c
# BeagleHash_64_96         11 byte keys       37.000 c/h        3.364 c/b        0.297 b/c
# BeagleHash_64_96         12 byte keys       37.000 c/h        3.083 c/b        0.324 b/c
# BeagleHash_64_96         13 byte keys       37.733 c/h        2.903 c/b        0.345 b/c
# BeagleHash_64_96         14 byte keys       37.000 c/h        2.643 c/b        0.378 b/c
# BeagleHash_64_96         15 byte keys       37.000 c/h        2.467 c/b        0.405 b/c
# BeagleHash_64_96         16 byte keys       40.000 c/h        2.500 c/b        0.400 b/c
# BeagleHash_64_96         17 byte keys       39.000 c/h        2.294 c/b        0.436 b/c
# BeagleHash_64_96         18 byte keys       39.386 c/h        2.188 c/b        0.457 b/c
# BeagleHash_64_96         19 byte keys       39.000 c/h        2.053 c/b        0.487 b/c
# BeagleHash_64_96         20 byte keys       39.938 c/h        1.997 c/b        0.501 b/c
# BeagleHash_64_96         21 byte keys       39.000 c/h        1.857 c/b        0.538 b/c
# BeagleHash_64_96         22 byte keys       40.559 c/h        1.844 c/b        0.542 b/c
# BeagleHash_64_96         23 byte keys       39.930 c/h        1.736 c/b        0.576 b/c
# BeagleHash_64_96         24 byte keys       45.802 c/h        1.908 c/b        0.524 b/c
# BeagleHash_64_96         25 byte keys       46.123 c/h        1.845 c/b        0.542 b/c
# BeagleHash_64_96         26 byte keys       45.983 c/h        1.769 c/b        0.565 b/c
# BeagleHash_64_96         27 byte keys       45.997 c/h        1.704 c/b        0.587 b/c
# BeagleHash_64_96         28 byte keys       46.558 c/h        1.663 c/b        0.601 b/c
# BeagleHash_64_96         29 byte keys       45.997 c/h        1.586 c/b        0.630 b/c
# BeagleHash_64_96         30 byte keys       45.994 c/h        1.533 c/b        0.652 b/c
# BeagleHash_64_96         31 byte keys       46.394 c/h        1.497 c/b        0.668 b/c
#                          Average < 32       39.370 c/h        2.540 c/b        0.394 b/c
# BeagleHash_64_96         32 byte keys       47.995 c/h        1.500 c/b        0.667 b/c
# BeagleHash_64_96         36 byte keys       48.000 c/h        1.333 c/b        0.750 b/c
# BeagleHash_64_96         40 byte keys       54.458 c/h        1.361 c/b        0.735 b/c
# BeagleHash_64_96         44 byte keys       54.000 c/h        1.227 c/b        0.815 b/c
# BeagleHash_64_96         48 byte keys       56.491 c/h        1.177 c/b        0.850 b/c
# BeagleHash_64_96         52 byte keys       56.168 c/h        1.080 c/b        0.926 b/c
# BeagleHash_64_96         56 byte keys       62.147 c/h        1.110 c/b        0.901 b/c
# BeagleHash_64_96         60 byte keys       62.736 c/h        1.046 c/b        0.956 b/c
# BeagleHash_64_96         64 byte keys       63.757 c/h        0.996 c/b        1.004 b/c
# BeagleHash_64_96         68 byte keys       64.201 c/h        0.944 c/b        1.059 b/c
# BeagleHash_64_96         72 byte keys       71.383 c/h        0.991 c/b        1.009 b/c
# BeagleHash_64_96         76 byte keys       69.975 c/h        0.921 c/b        1.086 b/c
# BeagleHash_64_96         80 byte keys       72.226 c/h        0.903 c/b        1.108 b/c
# BeagleHash_64_96         84 byte keys       71.922 c/h        0.856 c/b        1.168 b/c
# BeagleHash_64_96         88 byte keys       77.977 c/h        0.886 c/b        1.129 b/c
# BeagleHash_64_96         92 byte keys       78.683 c/h        0.855 c/b        1.169 b/c
# BeagleHash_64_96         96 byte keys       81.463 c/h        0.849 c/b        1.178 b/c
# BeagleHash_64_96        100 byte keys       80.891 c/h        0.809 c/b        1.236 b/c
# BeagleHash_64_96        104 byte keys       87.259 c/h        0.839 c/b        1.192 b/c
# BeagleHash_64_96        108 byte keys       87.910 c/h        0.814 c/b        1.229 b/c
# BeagleHash_64_96        112 byte keys       90.017 c/h        0.804 c/b        1.244 b/c
# BeagleHash_64_96        116 byte keys       90.157 c/h        0.777 c/b        1.287 b/c
# BeagleHash_64_96        120 byte keys       95.720 c/h        0.798 c/b        1.254 b/c
# BeagleHash_64_96        124 byte keys       95.893 c/h        0.773 c/b        1.293 b/c
#                         Average < 128       53.237 c/h        1.259 c/b        0.794 b/c
# BeagleHash_64_96        128 byte keys       98.024 c/h        0.766 c/b        1.306 b/c
# BeagleHash_64_96        256 byte keys      149.108 c/h        0.582 c/b        1.717 b/c
# BeagleHash_64_96        512 byte keys      298.119 c/h        0.582 c/b        1.717 b/c
# BeagleHash_64_96       1024 byte keys      564.812 c/h        0.552 c/b        1.813 b/c
# BeagleHash_64_96       2048 byte keys     1097.909 c/h        0.536 c/b        1.865 b/c
# BeagleHash_64_96       4096 byte keys     2163.998 c/h        0.528 c/b        1.893 b/c
# BeagleHash_64_96       8192 byte keys     4297.350 c/h        0.525 c/b        1.906 b/c
# BeagleHash_64_96      16384 byte keys     8563.729 c/h        0.523 c/b        1.913 b/c
# BeagleHash_64_96      32768 byte keys    17086.159 c/h        0.521 c/b        1.918 b/c
# BeagleHash_64_96      65536 byte keys    34147.298 c/h        0.521 c/b        1.919 b/c
#                       Overall Average     1082.542 c/h        0.536 c/b        1.866 b/c
ok 6 - Speed (always passes) # BeagleHash_64_96
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 64 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # BeagleHash_64_96
ok 8 - Nothing skipped during differential collision check # BeagleHash_64_96
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 64 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # BeagleHash_64_96
ok 11 - Nothing skipped during differential collision check # BeagleHash_64_96
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 64 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # BeagleHash_64_96
ok 14 - Nothing skipped during differential collision check # BeagleHash_64_96
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_64_96
### Avalanche Tests ### - seed-bits: 96 hash-bits: 64
# Samples 500000, expected error 0.00051200, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.522% error-ratio: 9.879930e-01
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.608% error-ratio: 9.903748e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.577% error-ratio: 1.012733e+00
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.551% error-ratio: 1.016763e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.573% error-ratio: 1.018295e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.549% error-ratio: 1.003150e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.641% error-ratio: 9.917163e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.572% error-ratio: 1.007797e+00
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.607% error-ratio: 9.924148e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.582% error-ratio: 1.005305e+00
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.549% error-ratio: 9.992865e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.563% error-ratio: 9.882323e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.577% error-ratio: 1.036026e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.542% error-ratio: 1.022159e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.579% error-ratio: 9.978282e-01
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.638% error-ratio: 1.002167e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.683% error-ratio: 9.976971e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.558% error-ratio: 9.996931e-01
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.604% error-ratio: 9.868786e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.614% error-ratio: 1.019602e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.558% error-ratio: 1.004886e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.594% error-ratio: 9.903151e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.632% error-ratio: 9.890012e-01
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.610% error-ratio: 1.008673e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
ok 41 - Strict Avalanche Criteria # BeagleHash_64_96
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 9 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 10 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 11 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 50 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 51 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 12 bytes - 10000000 keys
ok 52 - Keyset 'Cyclic' # BeagleHash_64_96
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 61 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 62 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Keyset 'TwoBytes' # BeagleHash_64_96
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 78 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 79 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Keyset 'Sparse' # BeagleHash_64_96
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_64_96
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 91 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_64_96
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_64_96
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_64_96
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_64_96
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 131 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_64_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_64_96
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'Combination Lowbits'
ok 142 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 143 - Keyset 'Combination Lowbits' # BeagleHash_64_96
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 144 - Collision Rate for Keyset 'Combination Highbits'
ok 145 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 146 - Keyset 'Combination Highbits' # BeagleHash_64_96
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 147 - Collision Rate for Keyset 'Combination Highbits2'
ok 148 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 149 - Keyset 'Combination Highbits2' # BeagleHash_64_96
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 150 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 151 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 152 - Keyset 'Combination HiBit-Null' # BeagleHash_64_96
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 153 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 154 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 155 - Keyset 'Combination LowBit-Null' # BeagleHash_64_96
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 156 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 157 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 158 - Keyset 'Combination Hi-Lo' # BeagleHash_64_96
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 159 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 160 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 161 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 162 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 163 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 164 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Keyset 'Text' # BeagleHash_64_96
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 166 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 167 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 168 - Keyset 'Zeroes' # BeagleHash_64_96
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 169 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 170 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 171 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 172 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 173 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 174 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 175 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 176 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Keyset 'Seed' # BeagleHash_64_96
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 178 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 179 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 180 - Keyset 'Effs' # BeagleHash_64_96
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 181 - Collision Rate for Keyset 'Words'
ok 182 - Distribution Bias Check for Keyset 'Words'
ok 183 - all tests passed # BeagleHash_64_96
1..183
# All Tests Passed. BeagleHash_64_96 passed all 183 tests run.
# Testing took 2149.661232 seconds
# This is SMHasher version v1.1-demerphq-39-g8a22d76 - built on Mar 17 2017.
