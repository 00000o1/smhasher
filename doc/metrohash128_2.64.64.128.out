ok 1 - Found Hash # metrohash128_2
###################################################################
### Testing metrohash128_2 - no seed_state
### - MetroHash128_2 for 64-bit -
### seedbits: 64 statebits: 64 hashbits: 128
###################################################################
ok 2 - Verification code # metrohash128_2
# metrohash128_2       - Verification value 0x2EFAD245 : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # metrohash128_2
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # metrohash128_2
ok 5 - Sanity Test # metrohash128_2
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  5.099 bytes/cycle - 14588.88 MiB/sec @ 3 ghz
# Alignment  6 -  5.058 bytes/cycle - 14470.73 MiB/sec @ 3 ghz
# Alignment  5 -  5.099 bytes/cycle - 14588.92 MiB/sec @ 3 ghz
# Alignment  4 -  5.099 bytes/cycle - 14589.15 MiB/sec @ 3 ghz
# Alignment  3 -  5.098 bytes/cycle - 14586.42 MiB/sec @ 3 ghz
# Alignment  2 -  5.099 bytes/cycle - 14587.50 MiB/sec @ 3 ghz
# Alignment  1 -  5.099 bytes/cycle - 14588.74 MiB/sec @ 3 ghz
# Alignment  0 -  5.287 bytes/cycle - 15126.73 MiB/sec @ 3 ghz
# Average      -  5.117 bytes/cycle - 14640.88 MiB/sec @ 3 ghz
## KeySpeed tests
# metrohash128_2            0 byte keys       20.000 c/h
# metrohash128_2            1 byte keys       24.000 c/h       24.000 c/b        0.042 b/c
# metrohash128_2            2 byte keys       26.994 c/h       13.497 c/b        0.074 b/c
# metrohash128_2            3 byte keys       29.000 c/h        9.667 c/b        0.103 b/c
# metrohash128_2            4 byte keys       24.000 c/h        6.000 c/b        0.167 b/c
# metrohash128_2            5 byte keys       36.000 c/h        7.200 c/b        0.139 b/c
# metrohash128_2            6 byte keys       32.219 c/h        5.370 c/b        0.186 b/c
# metrohash128_2            7 byte keys       37.142 c/h        5.306 c/b        0.188 b/c
# metrohash128_2            8 byte keys       26.617 c/h        3.327 c/b        0.301 b/c
# metrohash128_2            9 byte keys       29.000 c/h        3.222 c/b        0.310 b/c
# metrohash128_2           10 byte keys       38.000 c/h        3.800 c/b        0.263 b/c
# metrohash128_2           11 byte keys       40.993 c/h        3.727 c/b        0.268 b/c
# metrohash128_2           12 byte keys       29.000 c/h        2.417 c/b        0.414 b/c
# metrohash128_2           13 byte keys       41.223 c/h        3.171 c/b        0.315 b/c
# metrohash128_2           14 byte keys       39.000 c/h        2.786 c/b        0.359 b/c
# metrohash128_2           15 byte keys       41.999 c/h        2.800 c/b        0.357 b/c
# metrohash128_2           16 byte keys       30.124 c/h        1.883 c/b        0.531 b/c
# metrohash128_2           17 byte keys       42.055 c/h        2.474 c/b        0.404 b/c
# metrohash128_2           18 byte keys       40.000 c/h        2.222 c/b        0.450 b/c
# metrohash128_2           19 byte keys       42.000 c/h        2.211 c/b        0.452 b/c
# metrohash128_2           20 byte keys       41.725 c/h        2.086 c/b        0.479 b/c
# metrohash128_2           21 byte keys       53.000 c/h        2.524 c/b        0.396 b/c
# metrohash128_2           22 byte keys       49.000 c/h        2.227 c/b        0.449 b/c
# metrohash128_2           23 byte keys       54.000 c/h        2.348 c/b        0.426 b/c
# metrohash128_2           24 byte keys       40.000 c/h        1.667 c/b        0.600 b/c
# metrohash128_2           25 byte keys       42.795 c/h        1.712 c/b        0.584 b/c
# metrohash128_2           26 byte keys       51.798 c/h        1.992 c/b        0.502 b/c
# metrohash128_2           27 byte keys       54.000 c/h        2.000 c/b        0.500 b/c
# metrohash128_2           28 byte keys       42.673 c/h        1.524 c/b        0.656 b/c
# metrohash128_2           29 byte keys       54.000 c/h        1.862 c/b        0.537 b/c
# metrohash128_2           30 byte keys       52.678 c/h        1.756 c/b        0.569 b/c
# metrohash128_2           31 byte keys       55.000 c/h        1.774 c/b        0.564 b/c
#                          Average < 32       39.376 c/h        2.540 c/b        0.394 b/c
# metrohash128_2           32 byte keys       44.344 c/h        1.386 c/b        0.722 b/c
# metrohash128_2           36 byte keys       55.951 c/h        1.554 c/b        0.643 b/c
# metrohash128_2           40 byte keys       55.520 c/h        1.388 c/b        0.720 b/c
# metrohash128_2           44 byte keys       58.659 c/h        1.333 c/b        0.750 b/c
# metrohash128_2           48 byte keys       58.923 c/h        1.228 c/b        0.815 b/c
# metrohash128_2           52 byte keys       69.792 c/h        1.342 c/b        0.745 b/c
# metrohash128_2           56 byte keys       68.000 c/h        1.214 c/b        0.824 b/c
# metrohash128_2           60 byte keys       70.997 c/h        1.183 c/b        0.845 b/c
# metrohash128_2           64 byte keys       49.660 c/h        0.776 c/b        1.289 b/c
# metrohash128_2           68 byte keys       59.000 c/h        0.868 c/b        1.153 b/c
# metrohash128_2           72 byte keys       58.991 c/h        0.819 c/b        1.221 b/c
# metrohash128_2           76 byte keys       62.585 c/h        0.823 c/b        1.214 b/c
# metrohash128_2           80 byte keys       63.086 c/h        0.789 c/b        1.268 b/c
# metrohash128_2           84 byte keys       73.768 c/h        0.878 c/b        1.139 b/c
# metrohash128_2           88 byte keys       72.000 c/h        0.818 c/b        1.222 b/c
# metrohash128_2           92 byte keys       75.805 c/h        0.824 c/b        1.214 b/c
# metrohash128_2           96 byte keys       55.519 c/h        0.578 c/b        1.729 b/c
# metrohash128_2          100 byte keys       64.081 c/h        0.641 c/b        1.561 b/c
# metrohash128_2          104 byte keys       63.214 c/h        0.608 c/b        1.645 b/c
# metrohash128_2          108 byte keys       67.894 c/h        0.629 c/b        1.591 b/c
# metrohash128_2          112 byte keys       68.790 c/h        0.614 c/b        1.628 b/c
# metrohash128_2          116 byte keys       78.998 c/h        0.681 c/b        1.468 b/c
# metrohash128_2          120 byte keys       76.818 c/h        0.640 c/b        1.562 b/c
# metrohash128_2          124 byte keys       80.774 c/h        0.651 c/b        1.535 b/c
#                         Average < 128       50.236 c/h        1.188 c/b        0.842 b/c
# metrohash128_2          128 byte keys       60.026 c/h        0.469 c/b        2.132 b/c
# metrohash128_2          256 byte keys       90.414 c/h        0.353 c/b        2.831 b/c
# metrohash128_2          512 byte keys      135.896 c/h        0.265 c/b        3.768 b/c
# metrohash128_2         1024 byte keys      256.340 c/h        0.250 c/b        3.995 b/c
# metrohash128_2         2048 byte keys      444.124 c/h        0.217 c/b        4.611 b/c
# metrohash128_2         4096 byte keys      819.820 c/h        0.200 c/b        4.996 b/c
# metrohash128_2         8192 byte keys     1576.437 c/h        0.192 c/b        5.197 b/c
# metrohash128_2        16384 byte keys     3083.166 c/h        0.188 c/b        5.314 b/c
# metrohash128_2        32768 byte keys     6153.241 c/h        0.188 c/b        5.325 b/c
# metrohash128_2        65536 byte keys    12321.898 c/h        0.188 c/b        5.319 b/c
#                       Overall Average      420.524 c/h        0.208 c/b        4.803 b/c
ok 6 - Speed (always passes) # metrohash128_2
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 128 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 0.00 random collisions..........
ok 7 - Differential collisions # metrohash128_2
ok 8 - Nothing skipped during differential collision check # metrohash128_2
# 0 total collisions, of which 0 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 128 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 0.00 random collisions..........
ok 10 - Differential collisions # metrohash128_2
ok 11 - Nothing skipped during differential collision check # metrohash128_2
# 0 total collisions, of which 0 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 128 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.00 random collisions..........
ok 13 - Differential collisions # metrohash128_2
ok 14 - Nothing skipped during differential collision check # metrohash128_2
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # metrohash128_2
### Avalanche Tests ### - seed-bits: 64 hash-bits: 128
# Samples 250000, expected error 0.00102400, confidence level 99.99994267%
# Testing   0-bit keys.......... not ok! # worst-bit:   0.752% error-ratio: 9.966041e-01
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |pct diff from 50%: abs((0.5-(changed/reps))*2) *100|
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |........................1.......1...............................|
# seed     0.1 |................................................................|
# seed     1.0 |.......................................1...............1........|
# seed     1.1 |.......................................................1........|
# seed     2.0 |................................................................| x 2
# seed     2.1 |..................1.............................................|
# seed     3.1 |...1............................................................|
# seed     4.0 |.................1.......1.....................................1|
# seed     4.1 |...................1............................................|
# seed     5.0 |..........................................1.....................|
# seed     5.1 |.............1..................................................|
# seed     6.0 |................................................................| x 3
# seed     6.1 |................................................................|
# seed     7.1 |......1.........................1...............1...........1...|
# seed     8.1 |.............1.........................1........................|
# seed     9.0 |.......1............................1...........................|
# seed     9.1 |................................................................|
# seed    10.0 |................................................................| x 2
# seed    10.1 |...................1............................................|
# seed    11.1 |................................................................|
# seed    12.0 |............1..........................1........................|
# seed    12.1 |................1...............................................|
# seed    13.0 |...............1................................................|
# seed    13.1 |...........1....................................................|
# seed    14.0 |.......1........................................................|
# seed    14.1 |................................................................|
# seed    15.0 |................................................................| x 2
# seed    15.1 |............................................1...................|
# seed    16.1 |........1.......................................................|
# seed    17.0 |..........................................1.....................|
# seed    17.1 |................................................................|
# seed    18.0 |.......1.......1................................................|
# seed    18.1 |1.................11............1...............................|
# seed    19.0 |...................................................1............|
# seed    19.1 |................................................................|
# seed    20.0 |..........1.1...................................................|
# seed    20.1 |.......................1....................................1...|
# seed    21.0 |............................................1...................|
# seed    21.1 |1.................1..............1..............................|
# seed    22.0 |......................................1.................11......|
# seed    22.1 |................................................................|
# seed    23.0 |................................1...............................|
# seed    23.1 |...................1............1...................1...........|
# seed    24.0 |................................................................| x 2
# seed    24.1 |..................1....1............................1...........|
# seed    25.1 |...........................1....................................|
# seed    26.0 |.........................1......................................|
# seed    26.1 |........1.......................................................|
# seed    27.0 |................................................................|
# seed    27.1 |................................................................| x 3
# seed    28.0 |...........1..........................1.........................|
# seed    29.0 |................................1............................1..|
# seed    30.0 |...............................................................1|
# seed    30.1 |..................1.............................................|
# seed    31.0 |................................................................|
# seed    31.1 |................................................................| x 2
# seed    32.0 |...............................................................1|
# seed    33.0 |................................................................|
# seed    33.1 |............................................1...................|
# seed    34.0 |.......................................................11.......|
# seed    34.1 |................................1...............................|
# seed    35.0 |................................................................|
# seed    35.1 |.....................1..........................................|
# seed    36.0 |.......................................1........................|
# seed    36.1 |................................................................| x 2
# seed    37.0 |................................................................|
# seed    38.0 |.......................................1............1...........|
# seed    38.1 |.............1.......................1..........................|
# seed    39.0 |..1.............................................................|
# seed    39.1 |................................................................| x 2
# seed    40.0 |................................................................|
# seed    41.0 |...................................................1....1.......|
# seed    41.1 |.....................................................1..........|
# seed    42.0 |................................................................| x 4
# seed    42.1 |................................................................| x 2
# seed    44.1 |........1.......................................................|
# seed    45.1 |................................................................|
# seed    46.0 |.........................1......................................|
# seed    46.1 |.......................1........................................|
# seed    47.0 |................................................................| x 2
# seed    47.1 |.......................1.................1......................|
# seed    48.1 |.....................................1..........................|
# seed    49.0 |...................................................1............|
# seed    49.1 |................................................................|
# seed    50.0 |................................................................|
# seed    50.1 |.............1..................................................|
# seed    51.0 |..........................................................1.....|
# seed    51.1 |.......................1........................................|
# seed    52.0 |................................................................| x 3
# seed    52.1 |...............................1................................|
# seed    53.1 |................................................................|
# seed    54.1 |...............................................................1|
# seed    55.0 |.........................1..............................1.......|
# seed    55.1 |...............................1................................|
# seed    56.0 |..........1.....................................................|
# seed    56.1 |................................................................| x 3
# seed    57.0 |................................................................|
# seed    58.0 |1...............................................................|
# seed    59.0 |................................................................|
# seed    59.1 |..........................1.....................................|
# seed    60.0 |..........................1.....................................|
# seed    60.1 |.........1......................................................|
# seed    61.0 |................................................................| x 3
# seed    61.1 |................................................................|
# seed    62.1 |.......................1........................................| x 2
#              +-------------------------------------------------------------------+
#              +---------------------------------------------------+
#              |012345678901234567890123456789012345678901234567890|
#              +---------------------------------------------------+
# Scale:       |.1234567890abcdefghijklmnopqrstuvwxyzãäåêëîïðñôõöûü|
#              |üÿABCDEFGHIJKLMNOPQRSTUVWXYZÂÃÄÅÊËÑÔÕÖÛÜÝø¤*©®¶&%@#|
#              +---------------------------------------------------+
#              |scaled p-value above confidence level (zero is ok) |
#              +----------------------------------------------------------------+
#              |0         1         2         3         4         5         6   |
#              |0123456789012345678901234567890123456789012345678901234567890123|
#              +----------------------------------------------------------------+
# seed     0.0 |................................................................| x 64
# seed     0.1 |................................................................| x 64
#              +-------------------------------------------------------------------+
# 0 of 8192 bits failed (0.00%) failed at 99.999943 confidence
#     g-test: 0.000000%
#     sum-error-square: 0.00102052
#     hash bit-level errors: 1/128
#     - hash bit 38 gtest-prob not-random: 100.0000 (8011218/7988782)
not ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.735% error-ratio: 9.957238e-01
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.778% error-ratio: 9.915219e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.775% error-ratio: 1.012270e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.774% error-ratio: 1.000394e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.741% error-ratio: 1.008280e+00
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.862% error-ratio: 9.683246e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.966% error-ratio: 9.971520e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.782% error-ratio: 9.873718e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.754% error-ratio: 9.821933e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.812% error-ratio: 9.963059e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.966% error-ratio: 1.001915e+00
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.858% error-ratio: 1.000275e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.854% error-ratio: 1.000251e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.779% error-ratio: 1.002042e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.869% error-ratio: 1.001694e+00
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.849% error-ratio: 9.825346e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.870% error-ratio: 1.009529e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.855% error-ratio: 1.005618e+00
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.910% error-ratio: 1.004467e+00
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.936% error-ratio: 9.902409e-01
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.819% error-ratio: 9.939114e-01
ok 38 - Strict Avalanche Criteria - 256 bit keys
not ok 39 - Strict Avalanche Criteria # metrohash128_2
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 40 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
ok 41 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 16 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 42 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
ok 43 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 17 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 44 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
ok 45 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 18 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 46 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
ok 47 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 19 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 48 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 49 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 20 bytes - 10000000 keys
ok 50 - Keyset 'Cyclic' # metrohash128_2
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 51 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 52 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 53 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 54 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 55 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 56 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 57 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 58 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 59 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 60 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 61 - Keyset 'TwoBytes' # metrohash128_2
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 62 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 63 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 64 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 65 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 66 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 67 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 68 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 69 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 70 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 71 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 72 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 73 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 74 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 75 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 76 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 77 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 78 - Keyset 'Sparse' # metrohash128_2
# Keyset 'CRC-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 79 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 1 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 80 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 2 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 81 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 3 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 82 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 4 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 83 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 5 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 84 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 6 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 85 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 7 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 86 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 8 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 87 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 9 # metrohash128_2
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 88 - Collision Rate for Keyset 'CRC-MultiCollision' - seed 10 # metrohash128_2
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 89 - Collision Rate for Keyset 'Combination Lowbits'
ok 90 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 91 - Keyset 'Combination Lowbits' # metrohash128_2
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 92 - Collision Rate for Keyset 'Combination Highbits'
ok 93 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 94 - Keyset 'Combination Highbits' # metrohash128_2
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 95 - Collision Rate for Keyset 'Combination Highbits2'
ok 96 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 97 - Keyset 'Combination Highbits2' # metrohash128_2
### Keyset 'Combination 0x80000000' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 98 - Collision Rate for Keyset 'Combination 0x80000000'
ok 99 - Distribution Bias Check for Keyset 'Combination 0x80000000'
ok 100 - Keyset 'Combination 0x80000000' # metrohash128_2
### Keyset 'Combination 0x00000001' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 101 - Collision Rate for Keyset 'Combination 0x00000001'
ok 102 - Distribution Bias Check for Keyset 'Combination 0x00000001'
ok 103 - Keyset 'Combination 0x00000001' # metrohash128_2
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 104 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 105 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 106 - Keyset 'Combination Hi-Lo' # metrohash128_2
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 107 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 108 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 109 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 110 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 111 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 112 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 113 - Keyset 'Text' # metrohash128_2
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 114 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 115 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 116 - Keyset 'Zeroes' # metrohash128_2
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 117 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 118 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 119 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 120 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 121 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 122 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 123 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 124 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 125 - Keyset 'Seed' # metrohash128_2
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 126 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 127 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 128 - Keyset 'Effs' # metrohash128_2
not ok 129 - all tests passed # metrohash128_2
1..129
# Tests Failed. metrohash128_2 failed 3 of 129 tests.
# Testing took 2733.316360 seconds
# This is SMHasher version v1.0-demerphq-5-g86440f3 - built on Mar 10 2017.
