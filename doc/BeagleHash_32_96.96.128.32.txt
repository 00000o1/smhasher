ok 1 - Found Hash # BeagleHash_32_96
###################################################################
### Testing BeagleHash_32_96 - with seed_state
### - Evolved hash with 128-bit state (2x64) - Yves Orton -
### seedbits: 96 statebits: 128 hashbits: 32
###################################################################
ok 2 - Verification code # BeagleHash_32_96
# BeagleHash_32_96     - Verification value 0xE5FD0F3E : Passed.
### Sanity Tests ###
# Sanity check simple key bit flips and consistency..........
ok 3 - SanityTest # BeagleHash_32_96
# Sanity check null suffixes change the hash (simple)..........
ok 4 - Appended Zeroes Test # BeagleHash_32_96
ok 5 - Sanity Test # BeagleHash_32_96
### Speed Tests ###
## Bulk speed test - 262144-byte keys
# Alignment  7 -  1.901 bytes/cycle - 5439.43 MiB/sec @ 3 ghz
# Alignment  6 -  1.901 bytes/cycle - 5439.79 MiB/sec @ 3 ghz
# Alignment  5 -  1.901 bytes/cycle - 5439.31 MiB/sec @ 3 ghz
# Alignment  4 -  1.901 bytes/cycle - 5439.58 MiB/sec @ 3 ghz
# Alignment  3 -  1.901 bytes/cycle - 5439.23 MiB/sec @ 3 ghz
# Alignment  2 -  1.901 bytes/cycle - 5439.68 MiB/sec @ 3 ghz
# Alignment  1 -  1.901 bytes/cycle - 5439.26 MiB/sec @ 3 ghz
# Alignment  0 -  1.921 bytes/cycle - 5494.92 MiB/sec @ 3 ghz
# Average      -  1.904 bytes/cycle - 5446.40 MiB/sec @ 3 ghz
## KeySpeed tests
# BeagleHash_32_96          0 byte keys       19.979 c/h
# BeagleHash_32_96          1 byte keys       32.000 c/h       32.000 c/b        0.031 b/c
# BeagleHash_32_96          2 byte keys       36.000 c/h       18.000 c/b        0.056 b/c
# BeagleHash_32_96          3 byte keys       37.000 c/h       12.333 c/b        0.081 b/c
# BeagleHash_32_96          4 byte keys       38.000 c/h        9.500 c/b        0.105 b/c
# BeagleHash_32_96          5 byte keys       38.000 c/h        7.600 c/b        0.132 b/c
# BeagleHash_32_96          6 byte keys       38.000 c/h        6.333 c/b        0.158 b/c
# BeagleHash_32_96          7 byte keys       38.000 c/h        5.429 c/b        0.184 b/c
# BeagleHash_32_96          8 byte keys       47.571 c/h        5.946 c/b        0.168 b/c
# BeagleHash_32_96          9 byte keys       47.991 c/h        5.332 c/b        0.188 b/c
# BeagleHash_32_96         10 byte keys       47.981 c/h        4.798 c/b        0.208 b/c
# BeagleHash_32_96         11 byte keys       47.654 c/h        4.332 c/b        0.231 b/c
# BeagleHash_32_96         12 byte keys       47.744 c/h        3.979 c/b        0.251 b/c
# BeagleHash_32_96         13 byte keys       47.752 c/h        3.673 c/b        0.272 b/c
# BeagleHash_32_96         14 byte keys       47.259 c/h        3.376 c/b        0.296 b/c
# BeagleHash_32_96         15 byte keys       47.000 c/h        3.133 c/b        0.319 b/c
# BeagleHash_32_96         16 byte keys       50.000 c/h        3.125 c/b        0.320 b/c
# BeagleHash_32_96         17 byte keys       50.907 c/h        2.995 c/b        0.334 b/c
# BeagleHash_32_96         18 byte keys       50.466 c/h        2.804 c/b        0.357 b/c
# BeagleHash_32_96         19 byte keys       50.000 c/h        2.632 c/b        0.380 b/c
# BeagleHash_32_96         20 byte keys       50.000 c/h        2.500 c/b        0.400 b/c
# BeagleHash_32_96         21 byte keys       50.000 c/h        2.381 c/b        0.420 b/c
# BeagleHash_32_96         22 byte keys       50.245 c/h        2.284 c/b        0.438 b/c
# BeagleHash_32_96         23 byte keys       50.000 c/h        2.174 c/b        0.460 b/c
# BeagleHash_32_96         24 byte keys       56.281 c/h        2.345 c/b        0.426 b/c
# BeagleHash_32_96         25 byte keys       56.581 c/h        2.263 c/b        0.442 b/c
# BeagleHash_32_96         26 byte keys       56.864 c/h        2.187 c/b        0.457 b/c
# BeagleHash_32_96         27 byte keys       56.406 c/h        2.089 c/b        0.479 b/c
# BeagleHash_32_96         28 byte keys       56.931 c/h        2.033 c/b        0.492 b/c
# BeagleHash_32_96         29 byte keys       56.000 c/h        1.931 c/b        0.518 b/c
# BeagleHash_32_96         30 byte keys       56.364 c/h        1.879 c/b        0.532 b/c
# BeagleHash_32_96         31 byte keys       55.986 c/h        1.806 c/b        0.554 b/c
#                          Average < 32       47.218 c/h        3.046 c/b        0.328 b/c
# BeagleHash_32_96         32 byte keys       58.915 c/h        1.841 c/b        0.543 b/c
# BeagleHash_32_96         36 byte keys       59.136 c/h        1.643 c/b        0.609 b/c
# BeagleHash_32_96         40 byte keys       64.999 c/h        1.625 c/b        0.615 b/c
# BeagleHash_32_96         44 byte keys       64.934 c/h        1.476 c/b        0.678 b/c
# BeagleHash_32_96         48 byte keys       66.992 c/h        1.396 c/b        0.717 b/c
# BeagleHash_32_96         52 byte keys       66.735 c/h        1.283 c/b        0.779 b/c
# BeagleHash_32_96         56 byte keys       71.982 c/h        1.285 c/b        0.778 b/c
# BeagleHash_32_96         60 byte keys       72.000 c/h        1.200 c/b        0.833 b/c
# BeagleHash_32_96         64 byte keys       73.991 c/h        1.156 c/b        0.865 b/c
# BeagleHash_32_96         68 byte keys       74.344 c/h        1.093 c/b        0.915 b/c
# BeagleHash_32_96         72 byte keys       79.994 c/h        1.111 c/b        0.900 b/c
# BeagleHash_32_96         76 byte keys       80.026 c/h        1.053 c/b        0.950 b/c
# BeagleHash_32_96         80 byte keys       82.713 c/h        1.034 c/b        0.967 b/c
# BeagleHash_32_96         84 byte keys       81.999 c/h        0.976 c/b        1.024 b/c
# BeagleHash_32_96         88 byte keys       88.672 c/h        1.008 c/b        0.992 b/c
# BeagleHash_32_96         92 byte keys       89.258 c/h        0.970 c/b        1.031 b/c
# BeagleHash_32_96         96 byte keys       90.976 c/h        0.948 c/b        1.055 b/c
# BeagleHash_32_96        100 byte keys       91.700 c/h        0.917 c/b        1.091 b/c
# BeagleHash_32_96        104 byte keys       97.943 c/h        0.942 c/b        1.062 b/c
# BeagleHash_32_96        108 byte keys       98.496 c/h        0.912 c/b        1.096 b/c
# BeagleHash_32_96        112 byte keys      101.000 c/h        0.902 c/b        1.109 b/c
# BeagleHash_32_96        116 byte keys      101.490 c/h        0.875 c/b        1.143 b/c
# BeagleHash_32_96        120 byte keys      105.989 c/h        0.883 c/b        1.132 b/c
# BeagleHash_32_96        124 byte keys      106.082 c/h        0.855 c/b        1.169 b/c
#                         Average < 128       62.167 c/h        1.470 c/b        0.680 b/c
# BeagleHash_32_96        128 byte keys      108.249 c/h        0.846 c/b        1.182 b/c
# BeagleHash_32_96        256 byte keys      148.981 c/h        0.582 c/b        1.718 b/c
# BeagleHash_32_96        512 byte keys      297.879 c/h        0.582 c/b        1.719 b/c
# BeagleHash_32_96       1024 byte keys      564.278 c/h        0.551 c/b        1.815 b/c
# BeagleHash_32_96       2048 byte keys     1109.012 c/h        0.542 c/b        1.847 b/c
# BeagleHash_32_96       4096 byte keys     2163.264 c/h        0.528 c/b        1.893 b/c
# BeagleHash_32_96       8192 byte keys     4325.788 c/h        0.528 c/b        1.894 b/c
# BeagleHash_32_96      16384 byte keys     8554.271 c/h        0.522 c/b        1.915 b/c
# BeagleHash_32_96      32768 byte keys    17089.936 c/h        0.522 c/b        1.917 b/c
# BeagleHash_32_96      65536 byte keys    34147.608 c/h        0.521 c/b        1.919 b/c
#                       Overall Average     1090.767 c/h        0.540 c/b        1.852 b/c
ok 6 - Speed (always passes) # BeagleHash_32_96
### Differential Tests ###
# Testing 8303632 up-to-5-bit differentials in 64-bit keys -> 32 bit hashes.
# 1000 reps, 8303632000 total tests, expecting 1.93 random collisions..........
ok 7 - Differential collisions # BeagleHash_32_96
ok 8 - Nothing skipped during differential collision check # BeagleHash_32_96
# 2 total collisions, of which 2 single collisions were ignored
ok 9 - ProcessDifferentials
# Testing 11017632 up-to-4-bit differentials in 128-bit keys -> 32 bit hashes.
# 1000 reps, 11017632000 total tests, expecting 2.57 random collisions..........
ok 10 - Differential collisions # BeagleHash_32_96
ok 11 - Nothing skipped during differential collision check # BeagleHash_32_96
# 7 total collisions, of which 7 single collisions were ignored
ok 12 - ProcessDifferentials
# Testing 2796416 up-to-3-bit differentials in 256-bit keys -> 32 bit hashes.
# 1000 reps, 2796416000 total tests, expecting 0.65 random collisions..........
ok 13 - Differential collisions # BeagleHash_32_96
ok 14 - Nothing skipped during differential collision check # BeagleHash_32_96
# 0 total collisions, of which 0 single collisions were ignored
ok 15 - ProcessDifferentials
ok 16 - Differential # BeagleHash_32_96
### Avalanche Tests ### - seed-bits: 96 hash-bits: 32
# Samples 1000000, expected error 0.00025600, confidence level 99.99994267%
# Testing   0-bit keys.......... ok.     # worst-bit:   0.335% error-ratio: 9.793381e-01
ok 17 - Strict Avalanche Criteria - 0 bit keys
# Testing   8-bit keys.......... ok.     # worst-bit:   0.387% error-ratio: 1.029092e+00
ok 18 - Strict Avalanche Criteria - 8 bit keys
# Testing  16-bit keys.......... ok.     # worst-bit:   0.343% error-ratio: 9.785788e-01
ok 19 - Strict Avalanche Criteria - 16 bit keys
# Testing  24-bit keys.......... ok.     # worst-bit:   0.373% error-ratio: 1.033941e+00
ok 20 - Strict Avalanche Criteria - 24 bit keys
# Testing  32-bit keys.......... ok.     # worst-bit:   0.358% error-ratio: 1.002763e+00
ok 21 - Strict Avalanche Criteria - 32 bit keys
# Testing  40-bit keys.......... ok.     # worst-bit:   0.357% error-ratio: 9.895004e-01
ok 22 - Strict Avalanche Criteria - 40 bit keys
# Testing  48-bit keys.......... ok.     # worst-bit:   0.371% error-ratio: 9.651830e-01
ok 23 - Strict Avalanche Criteria - 48 bit keys
# Testing  56-bit keys.......... ok.     # worst-bit:   0.378% error-ratio: 9.900838e-01
ok 24 - Strict Avalanche Criteria - 56 bit keys
# Testing  64-bit keys.......... ok.     # worst-bit:   0.374% error-ratio: 9.835375e-01
ok 25 - Strict Avalanche Criteria - 64 bit keys
# Testing  72-bit keys.......... ok.     # worst-bit:   0.357% error-ratio: 9.926349e-01
ok 26 - Strict Avalanche Criteria - 72 bit keys
# Testing  80-bit keys.......... ok.     # worst-bit:   0.327% error-ratio: 9.940980e-01
ok 27 - Strict Avalanche Criteria - 80 bit keys
# Testing  88-bit keys.......... ok.     # worst-bit:   0.424% error-ratio: 9.626473e-01
ok 28 - Strict Avalanche Criteria - 88 bit keys
# Testing  96-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.027883e+00
ok 29 - Strict Avalanche Criteria - 96 bit keys
# Testing 104-bit keys.......... ok.     # worst-bit:   0.411% error-ratio: 1.021364e+00
ok 30 - Strict Avalanche Criteria - 104 bit keys
# Testing 112-bit keys.......... ok.     # worst-bit:   0.379% error-ratio: 1.009465e+00
ok 31 - Strict Avalanche Criteria - 112 bit keys
# Testing 120-bit keys.......... ok.     # worst-bit:   0.357% error-ratio: 9.960197e-01
ok 32 - Strict Avalanche Criteria - 120 bit keys
# Testing 128-bit keys.......... ok.     # worst-bit:   0.341% error-ratio: 9.694410e-01
ok 33 - Strict Avalanche Criteria - 128 bit keys
# Testing 136-bit keys.......... ok.     # worst-bit:   0.393% error-ratio: 1.018019e+00
ok 34 - Strict Avalanche Criteria - 136 bit keys
# Testing 144-bit keys.......... ok.     # worst-bit:   0.381% error-ratio: 9.801141e-01
ok 35 - Strict Avalanche Criteria - 144 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.359% error-ratio: 9.718504e-01
ok 36 - Strict Avalanche Criteria - 152 bit keys
# Testing 152-bit keys.......... ok.     # worst-bit:   0.372% error-ratio: 1.034881e+00
ok 37 - Strict Avalanche Criteria - 160 bit keys
# Testing 200-bit keys.......... ok.     # worst-bit:   0.408% error-ratio: 9.722767e-01
ok 38 - Strict Avalanche Criteria - 200 bit keys
# Testing 256-bit keys.......... ok.     # worst-bit:   0.416% error-ratio: 1.011393e+00
ok 39 - Strict Avalanche Criteria - 256 bit keys
# Testing 512-bit keys.......... ok.     # worst-bit:   0.436% error-ratio: 1.002411e+00
ok 40 - Strict Avalanche Criteria - 512 bit keys
# Testing 520-bit keys.......... ok.     # worst-bit:   0.442% error-ratio: 9.981948e-01
ok 41 - Strict Avalanche Criteria - 520 bit keys
ok 42 - Strict Avalanche Criteria # BeagleHash_32_96
### Keyset 'Cyclic' Tests ###
# Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11566 ( 0.99x) - passed
ok 43 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
ok 44 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 4 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11432 ( 0.98x) - passed
ok 45 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
ok 46 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 5 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11657 ( 1.00x) - passed
ok 47 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
ok 48 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 6 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11676 ( 1.00x) - passed
ok 49 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
ok 50 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 7 bytes - 10000000 keys
# Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
# Testing collisions   - Expected 11641.53, actual    11761 ( 1.01x) - passed
ok 51 - Collision Rate for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 52 - Distribution Bias Check for Keyset 'Cyclic' - 8 cycles of 8 bytes - 10000000 keys
ok 53 - Keyset 'Cyclic' # BeagleHash_32_96
### Keyset 'TwoBytes' Tests ###
# Testing collisions   - Expected    49.57, actual       45 ( 0.91x) - passed
ok 54 - Collision Rate for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
ok 55 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-4-byte keys, 652545 total keys
# Testing collisions   - Expected  3484.56, actual     3437 ( 0.99x) - passed
ok 56 - Collision Rate for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
ok 57 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-8-byte keys, 5471025 total keys
# Testing collisions   - Expected 40347.77, actual    40074 ( 0.99x) - passed
ok 58 - Collision Rate for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
ok 59 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-12-byte keys, 18616785 total keys
# Testing collisions   - Expected 227963.15, actual   227027 ( 1.00x) - passed
ok 60 - Collision Rate for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
ok 61 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-16-byte keys, 44251425 total keys
# Testing collisions   - Expected 871784.70, actual   866579 ( 0.99x) - passed
ok 62 - Collision Rate for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 63 - Distribution Bias Check for Keyset 'TwoBytes' - up-to-20-byte keys, 86536545 total keys
ok 64 - Keyset 'TwoBytes' # BeagleHash_32_96
### Keyset 'Sparse' Tests ###
# Keyset 'Sparse' - 32-bit keys with up to 6 bits set - 1149017 keys
# Testing collisions   - Expected   153.70, actual      148 ( 0.96x) - passed
ok 65 - Collision Rate for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
ok 66 - Distribution Bias Check for Keyset 'Sparse' - 32-bit keys with up to 6 bits set
# Keyset 'Sparse' - 40-bit keys with up to 6 bits set - 4598479 keys
# Testing collisions   - Expected  2461.72, actual     2398 ( 0.97x) - passed
ok 67 - Collision Rate for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
ok 68 - Distribution Bias Check for Keyset 'Sparse' - 40-bit keys with up to 6 bits set
# Keyset 'Sparse' - 48-bit keys with up to 5 bits set - 1925357 keys
# Testing collisions   - Expected   431.55, actual      419 ( 0.97x) - passed
ok 69 - Collision Rate for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
ok 70 - Distribution Bias Check for Keyset 'Sparse' - 48-bit keys with up to 5 bits set
# Keyset 'Sparse' - 56-bit keys with up to 5 bits set - 4216423 keys
# Testing collisions   - Expected  2069.66, actual     2041 ( 0.99x) - passed
ok 71 - Collision Rate for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
ok 72 - Distribution Bias Check for Keyset 'Sparse' - 56-bit keys with up to 5 bits set
# Keyset 'Sparse' - 64-bit keys with up to 5 bits set - 8303633 keys
# Testing collisions   - Expected  8026.87, actual     8078 ( 1.01x) - passed
ok 73 - Collision Rate for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
ok 74 - Distribution Bias Check for Keyset 'Sparse' - 64-bit keys with up to 5 bits set
# Keyset 'Sparse' - 96-bit keys with up to 4 bits set - 3469497 keys
# Testing collisions   - Expected  1401.34, actual     1418 ( 1.01x) - passed
ok 75 - Collision Rate for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
ok 76 - Distribution Bias Check for Keyset 'Sparse' - 96-bit keys with up to 4 bits set
# Keyset 'Sparse' - 256-bit keys with up to 3 bits set - 2796417 keys
# Testing collisions   - Expected   910.36, actual      933 ( 1.02x) - passed
ok 77 - Collision Rate for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
ok 78 - Distribution Bias Check for Keyset 'Sparse' - 256-bit keys with up to 3 bits set
# Keyset 'Sparse' - 2048-bit keys with up to 2 bits set - 2098177 keys
# Testing collisions   - Expected   512.50, actual      516 ( 1.01x) - passed
ok 79 - Collision Rate for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 80 - Distribution Bias Check for Keyset 'Sparse' - 2048-bit keys with up to 2 bits set
ok 81 - Keyset 'Sparse' # BeagleHash_32_96
### Keyset 'Crc-MultiCollision' Tests ###
# Keyset 'Crc(a)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 82 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 83 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 84 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 85 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 86 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      131 ( 1.02x) - passed
ok 87 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      149 ( 1.16x) - passed
ok 88 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      137 ( 1.07x) - passed
ok 89 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 90 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      125 ( 0.98x) - passed
ok 91 - Collision Rate for Keyset 'Crc(a)-MultiCollision' - seed 10 # BeagleHash_32_96
# Keyset 'Crc(b)-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 92 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      102 ( 0.80x) - passed
ok 93 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      130 ( 1.02x) - passed
ok 94 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      149 ( 1.16x) - passed
ok 95 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 96 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 97 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 98 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      137 ( 1.07x) - passed
ok 99 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 100 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 101 - Collision Rate for Keyset 'Crc(b)-MultiCollision' - seed 10 # BeagleHash_32_96
### Keyset 'Murmur2-MultiCollision' Tests ###
# Keyset 'Murmur2-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 102 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 103 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      149 ( 1.16x) - passed
ok 104 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      127 ( 0.99x) - passed
ok 105 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      130 ( 1.02x) - passed
ok 106 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 107 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      155 ( 1.21x) - passed
ok 108 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      136 ( 1.06x) - passed
ok 109 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      121 ( 0.95x) - passed
ok 110 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 111 - Collision Rate for Keyset 'Murmur2-MultiCollision' - seed 10 # BeagleHash_32_96
### Keyset 'Murmur3A-MultiCollision' Tests ###
# Keyset 'Murmur3A-MultiCollision' - 1048575 x 16 block keys - 128-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      117 ( 0.91x) - passed
ok 112 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      128 ( 1.00x) - passed
ok 113 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      123 ( 0.96x) - passed
ok 114 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      139 ( 1.09x) - passed
ok 115 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      118 ( 0.92x) - passed
ok 116 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual       81 ( 0.63x) - passed
ok 117 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 118 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      107 ( 0.84x) - passed
ok 119 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      119 ( 0.93x) - passed
ok 120 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      156 ( 1.22x) - passed
ok 121 - Collision Rate for Keyset 'Murmur3A-MultiCollision' - seed 10 # BeagleHash_32_96
### Keyset 'Murmur3F-MultiCollision' Tests ###
# Keyset 'Murmur3F-MultiCollision' - 1048575 x 16 block keys - 512-bytes long - 10 seeds
# Testing collisions   - Expected   128.00, actual      134 ( 1.05x) - passed
ok 122 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      142 ( 1.11x) - passed
ok 123 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      135 ( 1.05x) - passed
ok 124 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      138 ( 1.08x) - passed
ok 125 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      132 ( 1.03x) - passed
ok 126 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      137 ( 1.07x) - passed
ok 127 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      124 ( 0.97x) - passed
ok 128 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      129 ( 1.01x) - passed
ok 129 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      126 ( 0.98x) - passed
ok 130 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected   128.00, actual      122 ( 0.95x) - passed
ok 131 - Collision Rate for Keyset 'Murmur3F-MultiCollision' - seed 10 # BeagleHash_32_96
### Keyset 'City64-MultiCollision' Tests ###
# Keyset 'City64-MultiCollision' - 10 x 2 block keys - 16-bytes long - 10 seeds
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 132 - Collision Rate for Keyset 'City64-MultiCollision' - seed 1 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 133 - Collision Rate for Keyset 'City64-MultiCollision' - seed 2 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 134 - Collision Rate for Keyset 'City64-MultiCollision' - seed 3 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 135 - Collision Rate for Keyset 'City64-MultiCollision' - seed 4 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 136 - Collision Rate for Keyset 'City64-MultiCollision' - seed 5 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 137 - Collision Rate for Keyset 'City64-MultiCollision' - seed 6 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 138 - Collision Rate for Keyset 'City64-MultiCollision' - seed 7 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 139 - Collision Rate for Keyset 'City64-MultiCollision' - seed 8 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 140 - Collision Rate for Keyset 'City64-MultiCollision' - seed 9 # BeagleHash_32_96
# Testing collisions   - Expected     0.00, actual        0 ( 0.00x) - passed
ok 141 - Collision Rate for Keyset 'City64-MultiCollision' - seed 10 # BeagleHash_32_96
### Keyset 'Combination Lowbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42611 ( 1.00x) - passed
ok 142 - Collision Rate for Keyset 'Combination Lowbits'
ok 143 - Distribution Bias Check for Keyset 'Combination Lowbits'
ok 144 - Keyset 'Combination Lowbits' # BeagleHash_32_96
### Keyset 'Combination Highbits' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42873 ( 1.00x) - passed
ok 145 - Collision Rate for Keyset 'Combination Highbits'
ok 146 - Distribution Bias Check for Keyset 'Combination Highbits'
ok 147 - Keyset 'Combination Highbits' # BeagleHash_32_96
### Keyset 'Combination Highbits2' Tests ###
# Keyset 'Combination' - up to 8 blocks from a set of 8 - 19173960 keys
# Testing collisions   - Expected 42799.01, actual    42735 ( 1.00x) - passed
ok 148 - Collision Rate for Keyset 'Combination Highbits2'
ok 149 - Distribution Bias Check for Keyset 'Combination Highbits2'
ok 150 - Keyset 'Combination Highbits2' # BeagleHash_32_96
### Keyset 'Combination HiBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      504 ( 0.98x) - passed
ok 151 - Collision Rate for Keyset 'Combination HiBit-Null'
ok 152 - Distribution Bias Check for Keyset 'Combination HiBit-Null'
ok 153 - Keyset 'Combination HiBit-Null' # BeagleHash_32_96
### Keyset 'Combination LowBit-Null' Tests ###
# Keyset 'Combination' - up to 20 blocks from a set of 2 - 2097150 keys
# Testing collisions   - Expected   512.00, actual      499 ( 0.97x) - passed
ok 154 - Collision Rate for Keyset 'Combination LowBit-Null'
ok 155 - Distribution Bias Check for Keyset 'Combination LowBit-Null'
ok 156 - Keyset 'Combination LowBit-Null' # BeagleHash_32_96
### Keyset 'Combination Hi-Lo' Tests ###
# Keyset 'Combination' - up to 6 blocks from a set of 15 - 12204240 keys
# Testing collisions   - Expected 17339.30, actual    17157 ( 0.99x) - passed
ok 157 - Collision Rate for Keyset 'Combination Hi-Lo'
ok 158 - Distribution Bias Check for Keyset 'Combination Hi-Lo'
ok 159 - Keyset 'Combination Hi-Lo' # BeagleHash_32_96
### Keyset 'Text' Tests ###
# Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25688 ( 1.01x) - passed
ok 160 - Collision Rate for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
ok 161 - Distribution Bias Check for Keyset 'Text' - keys of form "Foo[XXXX]Bar" - 14776336 keys
# Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25377 ( 1.00x) - passed
ok 162 - Collision Rate for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
ok 163 - Distribution Bias Check for Keyset 'Text' - keys of form "FooBar[XXXX]" - 14776336 keys
# Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
# Testing collisions   - Expected 25418.13, actual    25486 ( 1.00x) - passed
ok 164 - Collision Rate for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 165 - Distribution Bias Check for Keyset 'Text' - keys of form "[XXXX]FooBar" - 14776336 keys
ok 166 - Keyset 'Text' # BeagleHash_32_96
### Keyset 'Zeroes' Tests ###
# Keyset 'Zeroes' - 262144 keys
# Testing collisions   - Expected     8.00, actual        8 ( 1.00x) - passed
ok 167 - Collision Rate for Keyset 'Zeroes' - 262144 keys
ok 168 - Distribution Bias Check for Keyset 'Zeroes' - 262144 keys
ok 169 - Keyset 'Zeroes' # BeagleHash_32_96
### Keyset 'Seed' Tests ###
# Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Testing collisions   - Expected   465.66, actual      506 ( 1.09x) - passed
ok 170 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
ok 171 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "The quick brown fox "...
# Keyset 'Seed' - 2000000 seeds, Key ""
# Testing collisions   - Expected   465.66, actual      472 ( 1.01x) - passed
ok 172 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key ""
ok 173 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key ""
# Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Testing collisions   - Expected   465.66, actual      450 ( 0.97x) - passed
ok 174 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
ok 175 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "00101100110101101"
# Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
# Testing collisions   - Expected   465.66, actual      443 ( 0.95x) - passed
ok 176 - Collision Rate for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 177 - Distribution Bias Check for Keyset 'Seed' - 2000000 seeds, Key "abcbcddbdebdcaaabaaa"...
ok 178 - Keyset 'Seed' # BeagleHash_32_96
### Keyset 'Effs' Tests ###
# Keyset 'Effs' - 262144 keys
# Testing collisions   - Expected     8.00, actual       10 ( 1.25x) - passed
ok 179 - Collision Rate for Keyset 'Effs' - 262144 keys
ok 180 - Distribution Bias Check for Keyset 'Effs' - 262144 keys
ok 181 - Keyset 'Effs' # BeagleHash_32_96
### Keyset 'Words' Tests ###
# Hashed 99171 keys from 297513 words from file '/usr/share/dict/words'
# Testing collisions   - Expected    10.30, actual       10 ( 0.97x) - passed
ok 182 - Collision Rate for Keyset 'Words'
ok 183 - Distribution Bias Check for Keyset 'Words'
ok 184 - all tests passed # BeagleHash_32_96
1..184
# All Tests Passed. BeagleHash_32_96 passed all 184 tests run.
# Testing took 1997.260944 seconds
# This is SMHasher version v1.1-demerphq-39-g8a22d76 - built on Mar 17 2017.
